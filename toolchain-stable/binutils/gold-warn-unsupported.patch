Only in binutils-2.34/gold: autom4te.cache
diff -rup binutils.orig/gold/configure binutils-2.34/gold/configure
--- binutils.orig/gold/configure	2020-04-20 12:35:13.048297305 +0100
+++ binutils-2.34/gold/configure	2020-04-20 14:02:06.743725696 +0100
@@ -5180,7 +5180,8 @@ for targ in $target $canon_targets; do
     . ${srcdir}/configure.tgt

     if test "$targ_obj" = "UNKNOWN"; then
-      as_fn_error $? "\"unsupported target $targ\"" "$LINENO" 5
+      { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: \"unsupported target $targ\"" >&5
+$as_echo "$as_me: WARNING: \"unsupported target $targ\"" >&2;}
     else
       targetobjs="$targetobjs ${targ_obj}.\$(OBJEXT)"
       if test "$targ_extra_obj" != ""; then
diff -rup binutils.orig/gold/configure.ac binutils-2.34/gold/configure.ac
--- binutils.orig/gold/configure.ac	2020-04-20 12:35:13.050297291 +0100
+++ binutils-2.34/gold/configure.ac	2020-04-20 14:01:46.435868770 +0100
@@ -181,7 +181,7 @@ for targ in $target $canon_targets; do
     . ${srcdir}/configure.tgt

     if test "$targ_obj" = "UNKNOWN"; then
-      AC_MSG_ERROR("unsupported target $targ")
+      AC_MSG_WARN("unsupported target $targ")
     else
       targetobjs="$targetobjs ${targ_obj}.\$(OBJEXT)"
       if test "$targ_extra_obj" != ""; then
--- binutils.orig/ld/configure.tgt	2020-04-20 12:35:12.465301359 +0100
+++ binutils-2.34/ld/configure.tgt	2020-04-20 14:17:52.123066333 +0100
@@ -220,7 +220,7 @@ bfin-*-linux-uclibc*)	targ_emul=elf32bfi
 			targ_extra_emuls="elf32bfin"
 			targ_extra_libpath=$targ_extra_emuls
 			;;
-bpf-*-*)		targ_emul=elf64bpf
+bpf-* | bpf-*-*)	targ_emul=elf64bpf
 			;;
 cr16-*-elf*)		targ_emul=elf32cr16
 			;;
@@ -1026,7 +1026,7 @@ z8k-*-coff)		targ_emul=z8002
 			targ_extra_ofiles=
 			;;
 *)
-  echo 2>&1 "*** ld does not support target ${targ}"
+  echo 2>&1 "*** ld does not support target '${targ}' NO REALLY"
   echo 2>&1 "*** see ld/configure.tgt for supported targets"
   exit 1

--- binutils.orig/bfd/config.bfd	2020-04-20 12:35:13.038297375 +0100
+++ binutils-2.34/bfd/config.bfd	2020-04-20 14:25:26.452869193 +0100
@@ -473,7 +473,7 @@ case "${targ}" in
     ;;

 #ifdef BFD64
-  bpf-*-none)
+  bpf-*-none | bpf-*)
     targ_defvec=bpf_elf64_le_vec
     targ_selvecs=bpf_elf64_be_vec
     targ_underscore=yes
@@ -1427,7 +1427,7 @@ case "${targ}" in
     ;;

   *)
-    echo 1>&2 "*** BFD does not support target ${targ}."
+    echo 1>&2 "*** BFD does not support target '${targ}'.  Honest."
     echo 1>&2 "*** Look in bfd/config.bfd for supported targets."
     exit 1
     ;;

----
2009-05-06  H.J. Lu  <hongjiu.lu@intel.com>

	* NEWS: Mention LD_AS_NEEDED.

	* ld.texinfo: Document LD_AS_NEEDED.

	* ldmain.c (main): Handle LD_AS_NEEDED.

----
Rebased, dropped NEWS part -- Victor Rodriguez <victor.rodriguez.bahena@intel.com>

diff --git a/ld/lexsup.c b/ld/lexsup.c
index 86a033a3..7a96f57d 100644
--- a/ld/lexsup.c
+++ b/ld/lexsup.c
@@ -612,6 +612,9 @@ parse_args (unsigned argc, char **argv)

   ldemul_add_options (is, &shortopts, il, &longopts, irl, &really_longopts);

+  if (getenv ("LD_AS_NEEDED") != NULL)
+    input_flags.add_DT_NEEDED_for_regular = true;
+
   /* The -G option is ambiguous on different platforms.  Sometimes it
      specifies the largest data size to put into the small data
      section.  Sometimes it is equivalent to --shared.  Unfortunately,
--- binutils-2.39/gas/as.c~	2022-07-08 09:46:47.000000000 +0000
+++ binutils-2.39/gas/as.c	2022-11-06 19:04:06.769936497 +0000
@@ -1273,13 +1273,6 @@
   start_time = get_run_time ();
   signal_init ();

-#ifdef HAVE_LC_MESSAGES
-  setlocale (LC_MESSAGES, "");
-#endif
-  setlocale (LC_CTYPE, "");
-  bindtextdomain (PACKAGE, LOCALEDIR);
-  textdomain (PACKAGE);
-
   if (debug_memory)
     chunksize = 64;

--- binutils-2.39/gas/input-file.c~	2022-07-08 09:46:47.000000000 +0000
+++ binutils-2.39/gas/input-file.c	2022-11-06 19:07:49.762259813 +0000
@@ -125,7 +125,7 @@
   gas_assert (filename != 0);	/* Filename may not be NULL.  */
   if (filename[0])
     {
-      f_in = fopen (filename, FOPEN_RT);
+      f_in = fopen (filename, "rm");
       file_name = filename;
     }
   else
@@ -202,6 +202,8 @@
 void
 input_file_close (void)
 {
+  /* For performance, just leak the FD, we exit instantly anyway */
+  return;
   /* Don't close a null file pointer.  */
   if (f_in != NULL)
     fclose (f_in);
--- binutils-2.39/gas/input-file.c~	2022-11-06 19:07:49.000000000 +0000
+++ binutils-2.39/gas/input-file.c	2022-11-06 20:19:49.353159757 +0000
@@ -250,8 +250,6 @@
     return_value = where + size;
   else
     {
-      if (fclose (f_in))
-	as_warn (_("can't close %s: %s"), file_name, xstrerror (errno));

       f_in = (FILE *) 0;
       return_value = 0;
