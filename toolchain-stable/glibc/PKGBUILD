# Maintainer: Marcus Seyfarth <marcus85@gmx.de>

pkgbase=glibc
pkgname=(glibc lib32-glibc)
pkgver=2.38
pkgrel=11.1
pkgdesc='GNU C Library'
arch=('x86_64')
url='https://www.gnu.org/software/libc'
license=('GPL' 'LGPL')
depends=('linux-api-headers' 'tzdata')
makedepends=('git' 'gd' 'python' 'lib32-gcc-libs')
optdepends=('perl: for mtrace'
            'gd: graph image generation with memusage')
backup=(etc/gai.conf
        etc/locale.gen
        etc/nscd.conf)
options=('staticlibs' '!lto')
install=glibc.install
source=("git+https://sourceware.org/git/glibc.git#branch=release/$pkgver/master"
#source=("git+https://sourceware.org/git/glibc.git"
        locale-gen
        locale.gen.txt
        lib32-glibc.conf
        0001-Force-ffsll-to-be-64-bytes-aligned.patch
        malloc_tune.patch
        mathlto.patch
        nostackshrink.patch
        tzselect-proper-zone-file.patch
        04-mandriva-va_args.patch
        05-mandriva-zstdcompressedlocals.patch
        06-mandriva-nss-crash.patch
        07-mandriva-nostrictaliasing.patch
        08-mandriva-float.patch
        nptl.patch
        )
sha256sums=('SKIP'
            )

prepare() {

    mkdir -p glibc-build lib32-glibc-build

  [[ -d glibc-$pkgver ]] && ln -s glibc-$pkgver glibc

    local src
    for src in "${source[@]}"; do
        src="${src%%::*}"
        src="${src##*/}"
        [[ $src = *.patch ]] || continue
        echo "Applying patch $src..."
        patch --directory="glibc" --forward --strip=1 < "$src"
    done
}

build() {

  cd "$srcdir/glibc-build"

  echo "slibdir=/usr/lib" >> configparms
  echo "rtlddir=/usr/lib" >> configparms
  echo "sbindir=/usr/bin" >> configparms
  echo "rootsbindir=/usr/bin" >> configparms

  # Credits @allanmcrae
  # https://github.com/allanmcrae/toolchain/blob/f18604d70c5933c31b51a320978711e4e6791cf1/glibc/PKGBUILD
  # remove fortify for building libraries
  CFLAGS=${CFLAGS/-Wp,-D_FORTIFY_SOURCE=2/}

  "$srcdir/glibc/configure" \
      --prefix=/usr \
      --libdir=/usr/lib \
      --libexecdir=/usr/lib \
      --with-headers=/usr/include \
      --disable-bind-now \
      --without-selinux \
      --without-cvs \
      --disable-dependency-tracking \
      --disable-fortify-source \
      --disable-silent-rules \
      --disable-systemtap \
      --disable-cet \
      --enable-kernel=6.5.1 \
      --enable-omitfp \
      --enable-nss-crypt \
      --enable-multi-arch \
      --disable-sanity-checks \
      --disable-profile \
      --disable-crypt \
      --disable-werror

  # build libraries with fortify disabled
  echo "build-programs=no" >> configparms
  make -O

  # re-enable fortify for programs
  sed -i "/build-programs=/s#no#yes#" configparms
  echo "CFLAGS += -Wp,-D_FORTIFY_SOURCE=0" >> configparms
  make -O

  # build info pages manually for reproducibility
  make info

  cd "$srcdir/lib32-glibc-build"
  export CC="gcc -m32 -mfpmath=sse -mstackrealign"
  export CXX="g++ -m32 -mfpmath=sse -mstackrealign"

  echo "slibdir=/usr/lib32" >> configparms
  echo "rtlddir=/usr/lib32" >> configparms
  echo "sbindir=/usr/bin" >> configparms
  echo "rootsbindir=/usr/bin" >> configparms

  "$srcdir/glibc/configure" \
      --host=i686-pc-linux-gnu \
      --prefix=/usr \
      --libdir=/usr/lib32 \
      --libexecdir=/usr/lib32 \
      --disable-cet \
      --enable-kernel=6.5.1 \
      --enable-omitfp \
      --enable-nss-crypt \
      --disable-bind-now \
      --without-selinux \
      --without-cvs \
      --disable-dependency-tracking \
      --disable-fortify-source \
      --disable-silent-rules \
      --disable-systemtap \
      --disable-profile \
      --disable-crypt \
      --disable-sanity-checks \
      --disable-werror \
      "${_configure_flags[@]}"

  # build libraries with fortify disabled
  echo "build-programs=no" >> configparms
  make -O

  # re-enable fortify for programs
  sed -i "/build-programs=/s#no#yes#" configparms
  echo "CFLAGS += -Wp,-D_FORTIFY_SOURCE=0" >> configparms
  make -O

  # pregenerate C.UTF-8 locale until it is built into glibc
  # (https://sourceware.org/glibc/wiki/Proposals/C.UTF-8, FS#74864)
  elf/ld.so --library-path "$PWD" locale/localedef -c -f ../glibc/localedata/charmaps/UTF-8 -i ../glibc/localedata/locales/C ../C.UTF-8/
}

# Credits for skip_test() and check() @allanmcrae
# https://github.com/allanmcrae/toolchain/blob/f18604d70c5933c31b51a320978711e4e6791cf1/glibc/PKGBUILD
skip_test() {
  test=${1}
  file=${2}
  sed -i "s/\b${test}\b//" "${srcdir}"/glibc/${file}
}

package_glibc() {
  pkgdesc='GNU C Library'
  depends=('linux-api-headers>=4.10' tzdata filesystem)
  optdepends=('gd: for memusagestat'
              'perl: for mtrace')
  install=glibc.install
  backup=(etc/gai.conf
          etc/locale.gen
          etc/nscd.conf)

  make -C glibc-build install_root="$pkgdir" install
  rm -f "$pkgdir"/etc/ld.so.cache

  # Shipped in tzdata
  rm -f "$pkgdir"/usr/bin/{tzselect,zdump,zic}

  cd glibc

  install -dm755 "$pkgdir"/usr/lib/{locale,systemd/system,tmpfiles.d}
  install -m644 nscd/nscd.conf "$pkgdir/etc/nscd.conf"
  install -m644 nscd/nscd.service "$pkgdir/usr/lib/systemd/system"
  install -m644 nscd/nscd.tmpfiles "$pkgdir/usr/lib/tmpfiles.d/nscd.conf"
  install -dm755 "$pkgdir/var/db/nscd"

  install -m644 posix/gai.conf "$pkgdir"/etc/gai.conf

  install -m755 "$srcdir/locale-gen" "$pkgdir/usr/bin"

  # Create /etc/locale.gen
  install -m644 "$srcdir/locale.gen.txt" "$pkgdir/etc/locale.gen"
  sed -e '1,3d' -e 's|/| |g' -e 's|\\| |g' -e 's|^|#|g' \
    "$srcdir/glibc/localedata/SUPPORTED" >> "$pkgdir/etc/locale.gen"

  # install C.UTF-8 so that it is always available
  install -dm755 "$pkgdir/usr/lib/locale"
  cp -r "$srcdir/C.UTF-8" -t "$pkgdir/usr/lib/locale"
  sed -i '/#C\.UTF-8 /d' "$pkgdir/etc/locale.gen"

  # Provide tracing probes to libstdc++ for exceptions, possibly for other
  # libraries too. Useful for gdb's catch command.
  #install -Dm644 "$srcdir/sdt.h" "$pkgdir/usr/include/sys/sdt.h"
  #install -Dm644 "$srcdir/sdt-config.h" "$pkgdir/usr/include/sys/sdt-config.h"
}

package_lib32-glibc() {
  pkgdesc='GNU C Library (32-bit)'
  depends=("glibc=$pkgver")
  options+=('!emptydirs')

  cd lib32-glibc-build

  make install_root="$pkgdir" install
  rm -rf "$pkgdir"/{etc,sbin,usr/{bin,sbin,share},var}

  # We need to keep 32 bit specific header files
  find "$pkgdir/usr/include" -type f -not -name '*-32.h' -delete

  # Dynamic linker
  install -d "$pkgdir/usr/lib"
  ln -s ../lib32/ld-linux.so.2 "$pkgdir/usr/lib/"

  # Add lib32 paths to the default library search path
  install -Dm644 "$srcdir/lib32-glibc.conf" "$pkgdir/etc/ld.so.conf.d/lib32-glibc.conf"

  # Symlink /usr/lib32/locale to /usr/lib/locale
  ln -s ../lib/locale "$pkgdir/usr/lib32/locale"
}
