#!/bin/sh
#
# locale-gen  –  Generate all locales listed in /etc/locale.gen
# Adapted for CachyOS glibc patch (zstd-compressed locales):
#   • locale-archive lives in /var/cache/locale
#   • the directory is created if missing
#   • LOCALE_ARCHIVE is exported so localedef always uses the new path
#

set -e

LOCALEGEN=/etc/locale.gen
LOCALES=/usr/share/i18n/locales
ARCHIVE_DIR=/var/cache/locale
ARCHIVE=${ARCHIVE_DIR}/locale-archive

# Some build systems set this; localedef dislikes it.
[ -n "$POSIXLY_CORRECT" ] && unset POSIXLY_CORRECT

# Nothing to do if /etc/locale.gen is empty.
[ -s "$LOCALEGEN" ] || exit 0

# ----------------------------------------------------------------------
# Ensure target directory exists
# ----------------------------------------------------------------------
if [ ! -d "$ARCHIVE_DIR" ]; then
  mkdir -p "$ARCHIVE_DIR"
  chmod 755 "$ARCHIVE_DIR"
fi

# Tell localedef explicitly where to write the archive.
export LOCALE_ARCHIVE=$ARCHIVE

# Remove any *old* archives so we start fresh.
rm -f "$ARCHIVE" /usr/lib/locale/locale-archive 2>/dev/null || true

umask 022     # standard file permissions

# ----------------------------------------------------------------------
# Helper to validate a line from /etc/locale.gen
# ----------------------------------------------------------------------
is_entry_ok() {
  if [ -n "$locale" ] && [ -n "$charset" ]; then
    return 0
  else
    echo "error: bad entry '$locale $charset'" >&2
    return 1
  fi
}

# ----------------------------------------------------------------------
# Generate the requested locales
# ----------------------------------------------------------------------
echo "Generating locales..."
while read locale charset; do
  case "$locale" in
    \#*|'') continue ;;    # skip comments / blank lines
  esac

  is_entry_ok || continue

  printf "  %s.%s%s..." \
         "$(printf '%s' "$locale" | sed 's/\([^.\@]*\).*/\1/')" \
         "$charset" \
         "$(printf '%s' "$locale" | sed 's/\([^\@]*\)\(\@.*\)*/\2/')"

  # Choose correct input file for localedef
  if [ -f "$LOCALES/$locale" ]; then
    input=$locale
  else
    input=$(printf '%s' "$locale" | sed 's/\([^.]*\)[^@]*\(.*\)/\1\2/')
  fi

  localedef -i "$input" -c -f "$charset" \
            -A /usr/share/locale/locale.alias "$locale"

  echo " done"
done < "$LOCALEGEN"

echo "Generation complete."
exit 0
