#!/bin/sh

set -e

LOCALEGEN=${LOCALEGEN:-/etc/locale.gen}
LOCALES=${LOCALES:-/usr/share/i18n/locales}
LOCALE_ARCHIVE=${LOCALE_ARCHIVE:-/usr/lib/locale/locale-archive}
LOCALE_ALIAS=${LOCALE_ALIAS:-/usr/share/locale/locale.alias}

if [ -n "$POSIXLY_CORRECT" ]; then
  unset POSIXLY_CORRECT
fi

# Add a command-line option to control archive removal
REMOVE_ARCHIVE=true
while [[ $# -gt 0 ]]; do
  case "$1" in
    --no-remove-archive)
      REMOVE_ARCHIVE=false
      shift
      ;;
    *)
      echo "Unknown option: $1" >&2
      exit 1
      ;;
  esac
done

[ -f "$LOCALEGEN" -a -s "$LOCALEGEN" ] || exit 0

if [ "$REMOVE_ARCHIVE" = true ]; then
  echo "Removing old locale archive..."
  rm -f "$LOCALE_ARCHIVE" || true
fi

umask 022

is_entry_ok() {
  if [ -n "$locale" -a -n "$charset" ]; then
    true
  else
    echo "error: Bad entry '$locale $charset'" >&2
    false
  fi
}

echo "Generating locales..."
while read -r locale charset; do
  case "$locale" in
    \#*) continue ;;
    "")  continue ;;
  esac

  is_entry_ok || continue

  printf "  %-20s %-10s %-10s..." "$locale" ".$charset" "$(echo "$locale" | sed 's/\([^\@]*\)\(\@.*\)*/\2/')"

  if [ -f "$LOCALES/$locale" ]; then
    input="$locale"
  else
    input="$(echo "$locale" | sed 's/\([^.]*\)[^@]*\(.*\)/\1\2/')"
  fi

  localedef -i "$input" -c -f "$charset" -A "$LOCALE_ALIAS" "$locale"
  if [ $? -ne 0 ]; then
    echo "error: localedef failed for '$locale $charset'" >&2
    echo " failed"
    continue
  fi
  echo " done"
done < "$LOCALEGEN"
echo "Generation complete."
