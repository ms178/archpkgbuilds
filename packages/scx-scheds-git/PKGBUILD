# Maintainer: Peter Jung ptr1337 <admin@ptr1337.dev>
# Maintainer: Piotr GÃ³rski <lucjan.lucjanov@gmail.com>

pkgname=scx-scheds-git
_gitname=scx
pkgver=1.0.17.r148.g60265433
pkgrel=1
pkgdesc='sched_ext schedulers and tools'
url='https://github.com/sched-ext/scx'
arch=('x86_64' 'aarch64')
license=('GPL-2.0-only')
depends=(
  bash
  bpf
  gcc-libs
  glibc
  jq
  libseccomp
  libbpf
  libelf
  protobuf
  zlib
)
makedepends=(
  clang
  git
  llvm
  llvm-libs
  meson
  python
  rust
)
source=("git+https://github.com/sched-ext/scx" ms178-1.patch)
sha256sums=('SKIP' 'SKIP')
options=(!lto !buildflags)
provides=("scx-scheds=$pkgver")
conflicts=("scx-scheds")

_backports=(
)

_reverts=(
)

pkgver() {
  cd $_gitname
  git describe --long --tags | sed 's/^v//;s/\([^-]*-g\)/r\1/;s/-/./g'
}

prepare() {
 cd $_gitname

 local _c _l
  for _c in "${_backports[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git cherry-pick --mainline 1 --no-commit "${_c}"
  done
  for _c in "${_reverts[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git revert --mainline 1 --no-commit "${_c}"
  done

  local src
  for src in "${source[@]}"; do
    src="${src%%::*}"
    src="${src##*/}"
    [[ $src = *.patch ]] || continue
    echo "Applying patch $src..."
    patch -Np1 < "../$src"
  done
}

build() {
  cd $_gitname

  # Unset problematic flags that conflict with scx build requirements
  unset CFLAGS CXXFLAGS LDFLAGS

  # Set minimal, safe flags for scx-scheds
  export CFLAGS="\
-O3 \
-march=native \
-mtune=native \
-fno-lto \
-mllvm -inline-threshold=1000 \
-mllvm -extra-vectorizer-passes \
-mllvm -enable-cond-stores-vec \
-mllvm -slp-vectorize-hor-store \
-mllvm -enable-loopinterchange \
-mllvm -enable-loop-distribute \
-mllvm -enable-unroll-and-jam \
-mllvm -enable-loop-flatten \
-mllvm -aggressive-ext-opt \
-mllvm -enable-interleaved-mem-accesses \
-mllvm -enable-masked-interleaved-mem-accesses \
-mllvm -adce-remove-loops \
-mllvm -enable-ext-tsp-block-placement=1 \
-mllvm -enable-gvn-hoist \
-mllvm -enable-dfa-jump-thread \
-fno-math-errno \
-fno-trapping-math \
-fno-signed-zeros \
-fassociative-math \
-freciprocal-math \
-ffp-contract=fast \
-funroll-loops \
-fno-semantic-interposition \
-falign-functions=32 \
-falign-loops=32 \
-fomit-frame-pointer \
-mprefer-vector-width=256 \
-fdata-sections \
-ffunction-sections \
-fmerge-all-constants \
-fno-plt \
-pipe"

  export CXXFLAGS="$CFLAGS"

  export LDFLAGS="\
-Wl,-O3 \
-Wl,--as-needed \
-Wl,-z,relro \
-Wl,-z,now \
-Wl,--sort-common \
-Wl,--gc-sections \
-Wl,--hash-style=gnu \
-Wl,--build-id=sha1 \
-fuse-ld=lld"

  # ============================================================
  # RUST OPTIMIZATION - FIXED (removed embed-bitcode=no)
  # ============================================================
  export RUSTFLAGS="\
-C opt-level=3 \
-C target-cpu=native \
-C link-arg=-fuse-ld=lld \
-C codegen-units=1 \
-C overflow-checks=no"

  export CARGO_BUILD_RUSTFLAGS="$RUSTFLAGS"
  export CARGO_BUILD_JOBS=$(nproc)

  rm -rf build

  arch-meson . build -D openrc=disabled \
    -D libbpf_a=disabled \
    -D bpftool=disabled \
    -D b_lto=true \
    -D b_lto_mode=thin \
    -D force_meson=true \
    -D cargo_home="$srcdir"/scx
  meson compile -C build
}

package() {
  cd $_gitname
  meson install -C build --destdir "${pkgdir}"
}
