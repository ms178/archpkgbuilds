pkgname=nettle
pkgver=3.10.1
pkgrel=4.1
pkgdesc="A low-level cryptographic library (PGO+BOLT-optimized)"
arch=('x86_64')
url="https://www.lysator.liu.se/~nisse/nettle"
license=('GPL2')
depends=('glibc' 'gmp')
makedepends=('clang' 'llvm')
provides=('nettle' 'libhogweed.so' 'libnettle.so')
conflicts=('nettle')
checkdepends=('valgrind')
options=(!strip)
source=(https://ftp.gnu.org/gnu/$pkgname/$pkgname-$pkgver.tar.gz{,.sig})
sha256sums=('ccfeff981b0ca71bbd6fbcb054f407c60ffb644389a5be80d6716d5b550c6ce3'
            'SKIP')
validpgpkeys=('343C2FF0FBEE5EC2EDBEF399F3599FF828C67298') # Niels MÃ¶ller

prepare() {
  cd $pkgname-$pkgver
  autoreconf -vfi
}

build() {
  cd $pkgname-$pkgver

  # Use system clang/llvm
  export CC="gcc"
  export CXX="g++"
  export LD="ld"

  # Save original flags
  export CFLAGS_SAVE="$CFLAGS"
  export CXXFLAGS_SAVE="$CXXFLAGS"
  export LDFLAGS_SAVE="$LDFLAGS"

  # Set profile directory
  local PROFILE_DIR="${srcdir}/profiles"
  mkdir -p "$PROFILE_DIR"
  local BOLT_DATA_DIR="${PROFILE_DIR}/bolt_data"
  mkdir -p "$BOLT_DATA_DIR"

  # Common configure options
  _configure_opts=(
    --prefix="/usr"
    --disable-documentation
    --enable-x86-aesni
    --enable-x86-sha-ni
    --enable-x86-pclmul
  )

  echo "Building PGO instrumented build..."

  # --- PGO Instrumentation Build ---

  CFLAGS="$CFLAGS_SAVE -fprofile-generate=$PROFILE_DIR -g3 -fno-omit-frame-pointer"
  CXXFLAGS="$CXXFLAGS_SAVE -fprofile-generate=$PROFILE_DIR -g3 -fno-omit-frame-pointer"
  LDFLAGS="$LDFLAGS_SAVE -fprofile-generate=$PROFILE_DIR -g3 -fno-omit-frame-pointer"
  export CFLAGS CXXFLAGS LDFLAGS

  ./configure "${_configure_opts[@]}"
  make -j$(nproc)

  echo "Running PGO training..."

  # --- PGO Training Run ---
  # Run the test suite multiple times to get better coverage
  for i in {1..3}; do
    echo "Training run $i..."
    if ! make -k check; then
      echo "Note: Some tests failed during PGO training (run $i)"
    fi
  done

  echo "Building PGO optimized build..."

  # --- PGO Optimization Build ---
  unset LLVM_PROFILE_FILE
  CFLAGS="$CFLAGS_SAVE -fprofile-use=${PROFILE_DIR}"
  CXXFLAGS="$CXXFLAGS_SAVE -fprofile-use=${PROFILE_DIR}"
  LDFLAGS="$LDFLAGS_SAVE -fprofile-use=${PROFILE_DIR}"
  export CFLAGS CXXFLAGS LDFLAGS

  make distclean
  ./configure "${_configure_opts[@]}"
  make -j$(nproc)

}

check() {
  cd $pkgname-$pkgver
  make -k check
}

package() {
  cd $pkgname-$pkgver
  make DESTDIR="$pkgdir/" install

  # Use llvm-strip with error handling
  find "$pkgdir" -type f \( -name '*.so*' -o -name '*.a' -o -executable \) -print0 | while IFS= read -r -d '' file; do
    if file "$file" | grep -q "ELF"; then
      if ! llvm-strip --strip-unneeded "$file" 2>/dev/null; then
        echo "Warning: Failed to strip $file"
      fi
    fi
  done
}
