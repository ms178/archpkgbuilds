pkgbase="dbus-broker-git"
pkgname=(
  "dbus-broker-git"
  "dbus-broker-units-git"
)
pkgdesc="Linux D-Bus Message Broker"
pkgver=36.11.g5d34d91
pkgrel=1
arch=("x86_64")
options=(!strip)
license=("Apache-2.0")
url="https://github.com/bus1/dbus-broker/wiki"
depends=(
  'audit>=3.0'
  'expat>=2.2'
  'libcap-ng>=0.6'
  'systemd-libs>=230'
)
makedepends=(
  'git'
  'meson>=0.60.0'
  'systemd'
  'python-docutils'
  'llvm'              # Required for BOLT
  'perf'              # Required for profile data collection
)
source=(
  "$pkgbase::git+https://github.com/bus1/dbus-broker"
  "c-dvar-1::git+https://github.com/c-util/c-dvar#branch=v1"
  "c-ini-1::git+https://github.com/c-util/c-ini#branch=v1"
  "c-list-3::git+https://github.com/c-util/c-list#branch=v3"
  "c-rbtree-3::git+https://github.com/c-util/c-rbtree#branch=v3"
  "c-shquote-1::git+https://github.com/c-util/c-shquote#branch=v1"
  "c-stdaux-1::git+https://github.com/c-util/c-stdaux#branch=v1"
  "c-utf8-1::git+https://github.com/c-util/c-utf8#branch=v1"
  "0001-units-Enable-statically.patch"
)
sha256sums=(
  'SKIP'
)

pkgver() {
  cd "$pkgbase"
  git describe --long --tags | sed 's/^v//;s/-/./g'
}

prepare() {
  cd "$pkgbase"
  local sp
  for sp in {dvar-1,ini-1,list-3,rbtree-3,shquote-1,stdaux-1,utf8-1}; do
    ln -fs "$(realpath --relative-to "subprojects" "$srcdir/c-$sp")" "subprojects/libc$sp"
  done
  patch -Np1 -i "../0001-units-Enable-statically.patch"
}

build() {
  local meson_options=(
    -D audit=true
    -D docs=false
    -D linux-4-17=true
    -D system-console-users=gdm,sddm,lightdm,lxdm
  )

  # Stage 1: Instrumented build and test for PGO
  export LLVM_PROFILE_FILE="$srcdir/%p.profraw"
  CFLAGS_ORIG="$CFLAGS"
  CXXFLAGS_ORIG="$CXXFLAGS"
  LDFLAGS_ORIG="$LDFLAGS"

  CFLAGS+=" -fprofile-generate -g3 -fno-omit-frame-pointer -mllvm -vp-counters-per-site=10"
  CXXFLAGS+=" -g3 -fno-omit-frame-pointer -fprofile-generate -mllvm -vp-counters-per-site=10"
  LDFLAGS+=" -g3 -fno-omit-frame-pointer -fprofile-generate -mllvm -vp-counters-per-site=10"

  arch-meson "$pkgbase" build-stage1 "${meson_options[@]}" \
    --wrap-mode=forcefallback \
    -D b_ndebug=false \
    -D b_pie=false \
    -D c_std=gnu18 \
    -D cpp_std=gnu++2a \
    --buildtype=debug \
    -D b_lto=true

  meson compile -C build-stage1

  # Run tests to generate profile data
  meson test -C build-stage1

  # Merge profraw files
  llvm-profdata merge -output="$srcdir/default.profdata" "$srcdir"/*.profraw

  # Clean up profraw files
  rm -f "$srcdir"/*.profraw

  # Stage 2: Build with PGO data and prepare for BOLT
  CFLAGS="$CFLAGS_ORIG -fprofile-use=$srcdir/default.profdata"
  CXXFLAGS="$CXXFLAGS_ORIG -fprofile-use=$srcdir/default.profdata"
  LDFLAGS="$LDFLAGS_ORIG -fprofile-use=$srcdir/default.profdata -Wl,--emit-relocs"

  arch-meson "$pkgbase" build "${meson_options[@]}" \
    --wrap-mode=forcefallback \
    -D b_ndebug=true \
    -D b_pie=false \
    -D c_std=gnu18 \
    -D cpp_std=gnu++2a \
    --buildtype=release \
    -D b_lto=true

  meson compile -C build

  # Create directory for profile data
  mkdir -p "$srcdir/bolt_profile"
}

check() {
  cd "$srcdir"

  # Run tests with perf recording for BOLT profile data
  perf record --max-size=6G -F 500000 -e branch-instructions:u,cycles:u,cache-misses:u,branch-misses:u,branches:u,branch-loads:u,branch-load-misses:u,iTLB-load-misses:u,dTLB-store-misses:u,dTLB-load-misses:u,L1-icache-load-misses:u,LLC-load-misses:u -b -- meson test -C build --print-errorlogs

  # Convert perf data to BOLT profile format
  perf2bolt "$srcdir/build/src/dbus-broker" -p perf.data -o "$srcdir/bolt_profile/perf.fdata"

  # Create optimized binary directory
  mkdir -p "$srcdir/build/bolt"

  # Optimize using BOLT with specified options
  llvm-bolt "$srcdir/build/src/dbus-broker" \
    --data "$srcdir/bolt_profile/perf.fdata" \
    --dyno-stats \
    --lite=false \
    --cu-processing-batch-size=64 \
    --eliminate-unreachable \
    --frame-opt=all \
    --icf=all \
    --jump-tables=aggressive \
    --min-branch-clusters \
    --stoke \
    --sctc-mode=always \
    --plt=all \
    --hot-data \
    --hugify \
    --frame-opt-rm-stores \
    --peepholes=all \
    --infer-stale-profile=1 \
    --x86-strip-redundant-address-size \
    --indirect-call-promotion=all \
    --reg-reassign \
    --use-aggr-reg-reassign \
    --reorder-blocks=ext-tsp \
    --reorder-functions=cdsort \
    --split-all-cold \
    --split-eh \
    --split-functions \
    --split-strategy=cdsplit \
    -o "$srcdir/build/bolt/dbus-broker.bolt"

  # Optimize using BOLT with specified options
  llvm-bolt "$srcdir/build/src/dbus-broker-launch" \
    --data "$srcdir/bolt_profile/perf.fdata" \
    --dyno-stats \
    --lite=false \
    --cu-processing-batch-size=64 \
    --eliminate-unreachable \
    --frame-opt=all \
    --icf=all \
    --jump-tables=aggressive \
    --min-branch-clusters \
    --stoke \
    --sctc-mode=always \
    --plt=all \
    --hot-data \
    --hugify \
    --frame-opt-rm-stores \
    --peepholes=all \
    --infer-stale-profile=1 \
    --x86-strip-redundant-address-size \
    --indirect-call-promotion=all \
    --reg-reassign \
    --use-aggr-reg-reassign \
    --reorder-blocks=ext-tsp \
    --reorder-functions=cdsort \
    --split-all-cold \
    --split-eh \
    --split-functions \
    --split-strategy=cdsplit \
    -o "$srcdir/build/bolt/dbus-broker-launch.bolt"
}

_pick() {
  local p="$1" f d; shift
  for f; do
    d="$srcdir/$p/${f#$pkgdir/}"
    mkdir -p "$(dirname "$d")"
    mv "$f" "$d"
    rmdir -p --ignore-fail-on-non-empty "$(dirname "$f")"
  done
}

package_dbus-broker-git() {
  depends+=(
    "libaudit.so"
    "libcap-ng.so"
    "libexpat.so"
    "libsystemd.so"
  )
  provides=("dbus-broker")
  conflicts=("dbus-broker")

  # First install all files normally
  meson install -C build --destdir "$pkgdir"

  # Then replace the binary with BOLT-optimized version if it exists
  if [ -f "$srcdir/build/bolt/dbus-broker.bolt" ]; then
    install -Dm755 "$srcdir/build/bolt/dbus-broker.bolt" "$pkgdir"/usr/bin/dbus-broker
  fi

  # Then replace the binary with BOLT-optimized version if it exists
  if [ -f "$srcdir/build/bolt/dbus-broker-launch.bolt" ]; then
    install -Dm755 "$srcdir/build/bolt/dbus-broker-launch.bolt" "$pkgdir"/usr/bin/dbus-broker-launch
  fi

  # Use llvm-strip only on recognized file formats
  find "$pkgdir" -type f \( -name '*.so*' -o -name '*.a' -o -executable \) -print0 | while IFS= read -r -d '' file; do
    if llvm-strip --strip-unneeded "$file" 2>/dev/null || llvm-strip --strip-all "$file" 2>/dev/null; then
      echo "Stripped: $file"
    else
      echo "Skipping: $file (not a valid object file)" >&2
    fi
  done

  _pick unit "$pkgdir"/usr/lib/systemd/{system,user}/dbus.service
}

package_dbus-broker-units-git() {
  pkgdesc+=" - Service units"
  depends=("dbus-broker")
  provides=(
    "dbus-broker-units"
    "dbus-units"
  )
  conflicts=(
    "dbus-broker-units"
    "dbus-daemon-units"
  )
  mv unit/* "$pkgdir"
}

# vim:set sw=2 sts=-1 et:
