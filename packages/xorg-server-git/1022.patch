From 5ddd3a4afc5eb27c3509d0169967ffe985124a47 Mon Sep 17 00:00:00 2001
From: Moritz Bruder <muesli4@gmail.com>
Date: Sat, 17 Dec 2022 18:19:57 +0100
Subject: [PATCH] fbdevhw: Support symbolic links in fbdev_open

Resolve symbolic links before the PCI device check in fbdev_open.
Otherwise, opening device files that are symbolic links will fail.

Fixes: https://gitlab.freedesktop.org/xorg/xserver/-/issues/1419

Signed-off-by: Moritz Bruder <muesli4@gmail.com>
---
 hw/xfree86/fbdevhw/fbdevhw.c | 26 +++++++++++++++++++++++++-
 1 file changed, 25 insertions(+), 1 deletion(-)

diff --git a/hw/xfree86/fbdevhw/fbdevhw.c b/hw/xfree86/fbdevhw/fbdevhw.c
index 3d8b92e66..7fd6d28a4 100644
--- a/hw/xfree86/fbdevhw/fbdevhw.c
+++ b/hw/xfree86/fbdevhw/fbdevhw.c
@@ -304,6 +304,20 @@ fbdev_open_pci(struct pci_device *pPci, char **namep)
     return -1;
 }
 
+static const char *
+resolve_link(const char *filename, char *resolve_buf, size_t resolve_buf_size)
+{
+    struct stat stat_buf;
+    /* if it is a link resolve it */
+    if (lstat(filename, &stat_buf) >= 0 && S_ISLNK(stat_buf.st_mode) &&
+        readlink(filename, resolve_buf, resolve_buf_size) >= 0) {
+        return resolve_buf;
+    }
+    else {
+        return filename;
+    }
+}
+
 static int
 fbdev_open(int scrnIndex, const char *dev, char **namep)
 {
@@ -331,9 +345,19 @@ fbdev_open(int scrnIndex, const char *dev, char **namep)
 
     /* only touch non-PCI devices on this path */
     {
+        char device_path_buf[PATH_MAX] = {0};
         char buf[PATH_MAX] = {0};
         char *sysfs_path = NULL;
-        char *node = strrchr(dev, '/') + 1;
+        char const *real_dev = resolve_link(dev, device_path_buf,
+                                            sizeof(device_path_buf) - 1);
+        const char *node = strrchr(real_dev, '/');
+
+        if (node == NULL) {
+                node = real_dev;
+        }
+        else {
+                node++;
+        }
 
         if (asprintf(&sysfs_path, "/sys/class/graphics/%s", node) < 0 ||
             readlink(sysfs_path, buf, sizeof(buf) - 1) < 0 ||
-- 
GitLab

