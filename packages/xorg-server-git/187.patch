From 25044c6c8b8e1319a4a7a5669049fd407750dcc3 Mon Sep 17 00:00:00 2001
From: Raul Fernandes <rgfernandes@gmail.com>
Date: Mon, 29 Apr 2019 18:08:05 -0300
Subject: [PATCH] Put the switch statement outside of loop

The switch statement is inside of the loop but it always resolves to same case.
Put it outside to optimize the code.
When the case is of one specific color, the other colors is always zero and makes no changes to final result.
So, remove the unnecessary code.
---
 dix/colormap.c | 69 ++++++++++++++++++++++++++++++++++----------------
 1 file changed, 47 insertions(+), 22 deletions(-)

diff --git a/dix/colormap.c b/dix/colormap.c
index 12a85b256..345c90997 100644
--- a/dix/colormap.c
+++ b/dix/colormap.c
@@ -1244,34 +1244,59 @@ FindBestPixel(EntryPtr pentFirst, int size, xrgb * prgb, int channel)
     final = 0;
     MaxBigNum(&minval);
     /* look for the minimal difference */
-    for (pent = pentFirst, pixel = 0; pixel < size; pent++, pixel++) {
-        dr = dg = db = 0;
-        switch (channel) {
-        case PSEUDOMAP:
+    switch (channel) {
+    case PSEUDOMAP:
+        for (pent = pentFirst, pixel = 0; pixel < size; pent++, pixel++) {
             dg = (long) pent->co.local.green - prgb->green;
             db = (long) pent->co.local.blue - prgb->blue;
-        case REDMAP:
             dr = (long) pent->co.local.red - prgb->red;
-            break;
-        case GREENMAP:
+            sq = dr * dr;
+            UnsignedToBigNum(sq, &sum);
+            sq = dg * dg;
+            UnsignedToBigNum(sq, &temp);
+            BigNumAdd(&sum, &temp, &sum);
+            sq = db * db;
+            UnsignedToBigNum(sq, &temp);
+            BigNumAdd(&sum, &temp, &sum);
+            if (BigNumGreater(&minval, &sum)) {
+                final = pixel;
+                minval = sum;
+            }
+        }
+        break;
+    case REDMAP:
+        for (pent = pentFirst, pixel = 0; pixel < size; pent++, pixel++) {
+            dr = (long) pent->co.local.red - prgb->red;
+            sq = dr * dr;
+            UnsignedToBigNum(sq, &sum);
+            if (BigNumGreater(&minval, &sum)) {
+                final = pixel;
+                minval = sum;
+            }
+        }
+        break;
+    case GREENMAP:
+        for (pent = pentFirst, pixel = 0; pixel < size; pent++, pixel++) {
             dg = (long) pent->co.local.green - prgb->green;
-            break;
-        case BLUEMAP:
-            db = (long) pent->co.local.blue - prgb->blue;
-            break;
+            sq = dg * dg;
+            UnsignedToBigNum(sq, &sum);
+            if (BigNumGreater(&minval, &sum)) {
+                final = pixel;
+                minval = sum;
+            }
         }
-        sq = dr * dr;
-        UnsignedToBigNum(sq, &sum);
-        sq = dg * dg;
-        UnsignedToBigNum(sq, &temp);
-        BigNumAdd(&sum, &temp, &sum);
-        sq = db * db;
-        UnsignedToBigNum(sq, &temp);
-        BigNumAdd(&sum, &temp, &sum);
-        if (BigNumGreater(&minval, &sum)) {
-            final = pixel;
-            minval = sum;
+        break;
+    case BLUEMAP:
+        for (pent = pentFirst, pixel = 0; pixel < size; pent++, pixel++) {
+            db = (long) pent->co.local.blue - prgb->blue;
+            sq = db * db;
+            UnsignedToBigNum(sq, &sum);
+            if (BigNumGreater(&minval, &sum)) {
+                final = pixel;
+                minval = sum;
+            }
         }
+        break;
     }
     return final;
 }
-- 
GitLab

