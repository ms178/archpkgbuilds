From 801ff8290823a782fd186e0fc5a71eac97be4eaf Mon Sep 17 00:00:00 2001
From: Tatsuyuki Ishi <ishitatsuyuki@gmail.com>
Date: Thu, 26 Jan 2023 22:18:40 +0900
Subject: [PATCH 1/2] radv: Fix emitting tess indirect descriptors twice.

This fixes a copy-paste error found by manual inspection.

TES may be merged into GS with certain HW stage mappings, which lead to
duplicate set-register commands to be emitted with the old code.

Reviewed-by: Samuel Pitoiset <samuel.pitoiset@gmail.com>
---
 src/amd/vulkan/radv_cmd_buffer.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/amd/vulkan/radv_cmd_buffer.c b/src/amd/vulkan/radv_cmd_buffer.c
index 21c2ba71fbe3..546c1a9a2989 100644
--- a/src/amd/vulkan/radv_cmd_buffer.c
+++ b/src/amd/vulkan/radv_cmd_buffer.c
@@ -4529,7 +4529,7 @@ radv_flush_indirect_descriptor_sets(struct radv_cmd_buffer *cmd_buffer,
          radv_emit_userdata_address(device, cs, pipeline, MESA_SHADER_TESS_CTRL,
                                     AC_UD_INDIRECT_DESCRIPTOR_SETS, va);
 
-      if (radv_pipeline_has_stage(graphics_pipeline, MESA_SHADER_TESS_CTRL))
+      if (radv_pipeline_has_stage(graphics_pipeline, MESA_SHADER_TESS_EVAL))
          radv_emit_userdata_address(device, cs, pipeline, MESA_SHADER_TESS_EVAL,
                                     AC_UD_INDIRECT_DESCRIPTOR_SETS, va);
    } else {
-- 
GitLab


From f26b31f03441540604402f2838223b15af92eef3 Mon Sep 17 00:00:00 2001
From: Tatsuyuki Ishi <ishitatsuyuki@gmail.com>
Date: Fri, 27 Jan 2023 14:47:39 +0900
Subject: [PATCH 2/2] radv: Loop over shader stages in
 flush_indirect_descriptor_sets.

Reduces boilerplate.

Reviewed-by: Samuel Pitoiset <samuel.pitoiset@gmail.com>
---
 src/amd/vulkan/radv_cmd_buffer.c | 22 +++-------------------
 1 file changed, 3 insertions(+), 19 deletions(-)

diff --git a/src/amd/vulkan/radv_cmd_buffer.c b/src/amd/vulkan/radv_cmd_buffer.c
index 546c1a9a2989..a7bdebd3d101 100644
--- a/src/amd/vulkan/radv_cmd_buffer.c
+++ b/src/amd/vulkan/radv_cmd_buffer.c
@@ -4505,13 +4505,9 @@ radv_flush_indirect_descriptor_sets(struct radv_cmd_buffer *cmd_buffer,
    if (bind_point == VK_PIPELINE_BIND_POINT_GRAPHICS) {
       struct radv_graphics_pipeline *graphics_pipeline = radv_pipeline_to_graphics(pipeline);
 
-      if (pipeline->shaders[MESA_SHADER_VERTEX])
-         radv_emit_userdata_address(device, cs, pipeline, MESA_SHADER_VERTEX,
-                                    AC_UD_INDIRECT_DESCRIPTOR_SETS, va);
-
-      if (pipeline->shaders[MESA_SHADER_FRAGMENT])
-         radv_emit_userdata_address(device, cs, pipeline, MESA_SHADER_FRAGMENT,
-                                    AC_UD_INDIRECT_DESCRIPTOR_SETS, va);
+      for (unsigned s = MESA_SHADER_VERTEX; s <= MESA_SHADER_FRAGMENT; s++)
+         if (radv_pipeline_has_stage(graphics_pipeline, s))
+            radv_emit_userdata_address(device, cs, pipeline, s, AC_UD_INDIRECT_DESCRIPTOR_SETS, va);
 
       if (radv_pipeline_has_stage(graphics_pipeline, MESA_SHADER_MESH))
          radv_emit_userdata_address(device, cs, pipeline, MESA_SHADER_MESH,
@@ -4520,18 +4516,6 @@ radv_flush_indirect_descriptor_sets(struct radv_cmd_buffer *cmd_buffer,
       if (radv_pipeline_has_stage(graphics_pipeline, MESA_SHADER_TASK))
          radv_emit_userdata_address(device, cmd_buffer->ace_internal.cs, pipeline, MESA_SHADER_TASK,
                                     AC_UD_INDIRECT_DESCRIPTOR_SETS, va);
-
-      if (radv_pipeline_has_stage(graphics_pipeline, MESA_SHADER_GEOMETRY))
-         radv_emit_userdata_address(device, cs, pipeline, MESA_SHADER_GEOMETRY,
-                                    AC_UD_INDIRECT_DESCRIPTOR_SETS, va);
-
-      if (radv_pipeline_has_stage(graphics_pipeline, MESA_SHADER_TESS_CTRL))
-         radv_emit_userdata_address(device, cs, pipeline, MESA_SHADER_TESS_CTRL,
-                                    AC_UD_INDIRECT_DESCRIPTOR_SETS, va);
-
-      if (radv_pipeline_has_stage(graphics_pipeline, MESA_SHADER_TESS_EVAL))
-         radv_emit_userdata_address(device, cs, pipeline, MESA_SHADER_TESS_EVAL,
-                                    AC_UD_INDIRECT_DESCRIPTOR_SETS, va);
    } else {
       radv_emit_userdata_address(device, cs, pipeline, MESA_SHADER_COMPUTE,
                                  AC_UD_INDIRECT_DESCRIPTOR_SETS, va);
-- 
GitLab

