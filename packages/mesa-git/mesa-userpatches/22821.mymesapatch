From fd7d666cbfcd2bede45f3c99a09ffe0412fbc489 Mon Sep 17 00:00:00 2001
From: Georg Lehmann <dadschoorse@gmail.com>
Date: Wed, 3 May 2023 11:24:19 +0200
Subject: [PATCH 1/2] aco: skip operands with different byte offset when
 reassigning split vectors

This can probably not happen because the post-RA optimizer doesn't really
support sub dword writes at the moment, but everytime I look at this I
wonder if there might be a bug here.
---
 src/amd/compiler/aco_optimizer_postRA.cpp | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/src/amd/compiler/aco_optimizer_postRA.cpp b/src/amd/compiler/aco_optimizer_postRA.cpp
index a05f216c97f9..c8c1b0c82fdc 100644
--- a/src/amd/compiler/aco_optimizer_postRA.cpp
+++ b/src/amd/compiler/aco_optimizer_postRA.cpp
@@ -657,6 +657,10 @@ try_reassign_split_vector(pr_opt_ctx& ctx, aco_ptr<Instruction>& instr)
          if (op.regClass() == s2 && reg.reg() % 2 != 0)
             break;
 
+         /* sub dword operands might need updates to SDWA/opsel */
+         if (op.physReg().byte() != reg.byte())
+            break;
+
          /* If there is only one use (left), recolor the split_vector definition */
          if (ctx.uses[op.tempId()] == 1)
             def.setFixed(reg);
-- 
GitLab


From e884c8c92725b7129e3396a7b67c5e7c72004897 Mon Sep 17 00:00:00 2001
From: Georg Lehmann <dadschoorse@gmail.com>
Date: Tue, 2 May 2023 11:54:26 +0200
Subject: [PATCH 2/2] aco: also reassign p_extract_vector post ra

Foz-DB Navi21:
Totals from 1223 (0.91% of 134864) affected shaders:
CodeSize: 6923888 -> 6913516 (-0.15%)
Instrs: 1293744 -> 1291151 (-0.20%)
Latency: 16928653 -> 16925035 (-0.02%); split: -0.02%, +0.00%
InvThroughput: 2985304 -> 2984775 (-0.02%); split: -0.02%, +0.00%
VClause: 32260 -> 32319 (+0.18%)
SClause: 54952 -> 54949 (-0.01%)
Copies: 83968 -> 81377 (-3.09%)
---
 src/amd/compiler/aco_optimizer_postRA.cpp | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/src/amd/compiler/aco_optimizer_postRA.cpp b/src/amd/compiler/aco_optimizer_postRA.cpp
index c8c1b0c82fdc..2555b06099af 100644
--- a/src/amd/compiler/aco_optimizer_postRA.cpp
+++ b/src/amd/compiler/aco_optimizer_postRA.cpp
@@ -624,7 +624,8 @@ try_reassign_split_vector(pr_opt_ctx& ctx, aco_ptr<Instruction>& instr)
 
       /* Check if the operand is written by p_split_vector. */
       Instruction* split_vec = ctx.get(op_instr_idx);
-      if (split_vec->opcode != aco_opcode::p_split_vector)
+      if (split_vec->opcode != aco_opcode::p_split_vector &&
+          split_vec->opcode != aco_opcode::p_extract_vector)
          continue;
 
       Operand& split_op = split_vec->operands[0];
@@ -649,6 +650,8 @@ try_reassign_split_vector(pr_opt_ctx& ctx, aco_ptr<Instruction>& instr)
          if (def.getTemp() != op.getTemp()) {
             reg = reg.advance(def.bytes());
             continue;
+         } else if (split_vec->opcode == aco_opcode::p_extract_vector) {
+            reg = reg.advance(def.bytes() * split_vec->operands[1].constantValue());
          }
 
          /* Don't propagate misaligned SGPRs.
-- 
GitLab

