From 349cba3237ecaa9d170e9804703c6ab50d01feb0 Mon Sep 17 00:00:00 2001
From: Rhys Perry <pendingchaos02@gmail.com>
Date: Wed, 20 Sep 2023 19:27:39 +0100
Subject: [PATCH] aco: reset prefetch in the correct block after removing the
 exit

fossil-db (navi31):
Totals from 279 (0.35% of 79332) affected shaders:
(no stat changes)

Signed-off-by: Rhys Perry <pendingchaos02@gmail.com>
Fixes: c778803d673f ("aco/assembler: change prefetch mode on GFX10.3+ during loops if beneficial")
---
 src/amd/compiler/aco_assembler.cpp | 8 ++++++--
 1 file changed, 6 insertions(+), 2 deletions(-)

diff --git a/src/amd/compiler/aco_assembler.cpp b/src/amd/compiler/aco_assembler.cpp
index 47e379bb761c5..a866f267768cd 100644
--- a/src/amd/compiler/aco_assembler.cpp
+++ b/src/amd/compiler/aco_assembler.cpp
@@ -48,7 +48,7 @@ struct asm_context {
    std::map<unsigned, constaddr_info> constaddrs;
    std::map<unsigned, constaddr_info> resumeaddrs;
    std::vector<struct aco_symbol>* symbols;
-   Block* loop_header;
+   Block* loop_header = NULL;
    const int16_t* opcode;
    // TODO: keep track of branch instructions referring blocks
    // and, when emitting the block, correct the offset in instr
@@ -1235,7 +1235,11 @@ fix_constaddrs(asm_context& ctx, std::vector<uint32_t>& out)
 void
 align_block(asm_context& ctx, std::vector<uint32_t>& code, Block& block)
 {
-   if (block.kind & block_kind_loop_exit && ctx.loop_header) {
+   /* Blocks with block_kind_loop_exit might be eliminated after jump threading, so we instead find
+    * loop exits using loop_nest_depth.
+    */
+   if (ctx.loop_header && !block.linear_preds.empty() &&
+       block.loop_nest_depth < ctx.loop_header->loop_nest_depth) {
       Block* loop_header = ctx.loop_header;
       ctx.loop_header = NULL;
       std::vector<uint32_t> nops;
-- 
GitLab

