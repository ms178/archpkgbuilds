From 6354081c1e6f1a0f3e409a99e0ba2192d799f114 Mon Sep 17 00:00:00 2001
From: Emma Anholt <emma@anholt.net>
Date: Wed, 8 Oct 2025 09:56:40 -0700
Subject: [PATCH 1/2] radv: Restore marking WSI image's mem->buffer as
 uncached.

Prior to 4dcf32c56e, radv was getting a request for implicit sync, even
when we were doing the work to do implicit sync in the WSI.  Once that was
turned off, we incidentally dropped flagging WSI's mem->buffer as
uncached, due to it being under the wrong condition.

Fixes: 4dcf32c56e7b ("wsi/drm: Don't request implicit sync if we're doing implicit sync ourselves.")
---
 src/amd/vulkan/radv_device_memory.c | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git a/src/amd/vulkan/radv_device_memory.c b/src/amd/vulkan/radv_device_memory.c
index 41440781cb663..c964b5cee64d5 100644
--- a/src/amd/vulkan/radv_device_memory.c
+++ b/src/amd/vulkan/radv_device_memory.c
@@ -120,8 +120,9 @@ radv_alloc_memory(struct radv_device *device, const VkMemoryAllocateInfo *pAlloc
       mem->buffer = NULL;
    }
 
-   if (wsi_info && wsi_info->implicit_sync) {
-      flags |= RADEON_FLAG_IMPLICIT_SYNC;
+   if (wsi_info) {
+      if (wsi_info->implicit_sync)
+         flags |= RADEON_FLAG_IMPLICIT_SYNC;
 
       /* Mark the linear prime buffer (aka the destination of the prime blit
        * as uncached.
-- 
GitLab


From 77d26b25ca403b2a2bd45490732ea9debbc9c0df Mon Sep 17 00:00:00 2001
From: Emma Anholt <emma@anholt.net>
Date: Wed, 8 Oct 2025 15:01:37 -0700
Subject: [PATCH 2/2] radv: Allocate BOs as implicit sync even if the WSI is
 doing implicit sync.

As noted, the flag we allocate with controls whether *anyone* can implicit
sync on the BO through amdgpu interfaces, not just whether our fd does.
This restores radv to the behavior before the regressing commit.

Fixes: 4dcf32c56e7b ("wsi/drm: Don't request implicit sync if we're doing implicit sync ourselves.")
---
 src/amd/vulkan/radv_device_memory.c |  8 +++++++-
 src/vulkan/util/vk_internal_exts.h  | 10 ++++++++++
 src/vulkan/wsi/wsi_common.c         |  1 +
 3 files changed, 18 insertions(+), 1 deletion(-)

diff --git a/src/amd/vulkan/radv_device_memory.c b/src/amd/vulkan/radv_device_memory.c
index c964b5cee64d5..9c54d773a5951 100644
--- a/src/amd/vulkan/radv_device_memory.c
+++ b/src/amd/vulkan/radv_device_memory.c
@@ -121,7 +121,13 @@ radv_alloc_memory(struct radv_device *device, const VkMemoryAllocateInfo *pAlloc
    }
 
    if (wsi_info) {
-      if (wsi_info->implicit_sync)
+      /* Even if the WSI is managing implicit-sync fencing on the dma-buf with
+       * dma-buf fence import/export, RADEON_FLAG_IMPLICIT_SYNC also controls
+       * whether other users of the BO (such as an X server using an
+       * implicit-syncing GL driver for rendering) will respect the BO's
+       * implicit sync.
+       */
+      if (wsi_info->implicit_sync || wsi_info->dma_buf_sync_file)
          flags |= RADEON_FLAG_IMPLICIT_SYNC;
 
       /* Mark the linear prime buffer (aka the destination of the prime blit
diff --git a/src/vulkan/util/vk_internal_exts.h b/src/vulkan/util/vk_internal_exts.h
index 9acab6979e075..5939500905171 100644
--- a/src/vulkan/util/vk_internal_exts.h
+++ b/src/vulkan/util/vk_internal_exts.h
@@ -51,6 +51,16 @@ struct wsi_memory_allocate_info {
      * point DMA_BUF_IOCTL_IMPORT_SYNC_FILE was added.
      */
     bool implicit_sync;
+
+    /**
+     * If set, then the WSI will attach implicit synchronization's fences to
+     * (and reference implicit sync fences from) the dma-buf for this memory, to
+     * meet the requirement for implicit synchronization with the window system.
+     * This does mean that the kernel BO must be able to participate in implicit
+     * sync still when used as part of a non-explicit-synced submit (e.g. by a
+     * GL driver in the X server).
+     */
+    bool dma_buf_sync_file;
 };
 
 /* To be chained into VkSurfaceCapabilities2KHR */
diff --git a/src/vulkan/wsi/wsi_common.c b/src/vulkan/wsi/wsi_common.c
index d88323a91ed73..98262fc8c7d11 100644
--- a/src/vulkan/wsi/wsi_common.c
+++ b/src/vulkan/wsi/wsi_common.c
@@ -1973,6 +1973,7 @@ wsi_create_buffer_blit_context(const struct wsi_swapchain *chain,
       .pNext = NULL,
       .implicit_sync = info->image_type == WSI_IMAGE_TYPE_DRM &&
                        !info->explicit_sync && !chain->dma_buf_semaphore,
+      .dma_buf_sync_file = chain->dma_buf_semaphore,
    };
    VkMemoryDedicatedAllocateInfo buf_mem_dedicated_info = {
       .sType = VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO,
-- 
GitLab

