From 2057d744041226c868e291fa3c4e51fd9dadf154 Mon Sep 17 00:00:00 2001
From: Joshua Watt <JPEWhacker@gmail.com>
Date: Wed, 31 Aug 2022 08:04:39 -0500
Subject: [PATCH 1/2] drm-shim: Set file type in readdir()

Some programs (in particular, older QEMU) will check the type of the
rendernode returned in readdir() to see if it is a character device
before opening it.

Signed-off-by: Joshua Watt <JPEWhacker@gmail.com>
---
 src/drm-shim/drm_shim.c | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/src/drm-shim/drm_shim.c b/src/drm-shim/drm_shim.c
index c7025edda428..c9f1451f2490 100644
--- a/src/drm-shim/drm_shim.c
+++ b/src/drm-shim/drm_shim.c
@@ -545,6 +545,7 @@ readdir(DIR *dir)
    if (_mesa_set_search(opendir_set, dir)) {
       strcpy(render_node_dirent.d_name,
              render_node_dirent_name);
+      render_node_dirent.d_type = DT_CHR;
       ent = &render_node_dirent;
       _mesa_set_remove_key(opendir_set, dir);
    }
@@ -572,6 +573,7 @@ readdir64(DIR *dir)
    if (_mesa_set_search(opendir_set, dir)) {
       strcpy(render_node_dirent.d_name,
              render_node_dirent_name);
+      render_node_dirent.d_type = DT_CHR;
       ent = &render_node_dirent;
       _mesa_set_remove_key(opendir_set, dir);
    }
-- 
GitLab


From aae3faee1ef065a6c3c0474c6484b95de115aa73 Mon Sep 17 00:00:00 2001
From: Joshua Watt <JPEWhacker@gmail.com>
Date: Wed, 31 Aug 2022 08:15:29 -0500
Subject: [PATCH 2/2] drm-shim: Use memfd for file override

Using a pipe might mean that either the read or write call can block,
most likely deadlocking the calling process. Instead, write the contents
in a memfd when the file is opened to be read back.

Signed-off-by: Joshua Watt <JPEWhacker@gmail.com>
---
 src/drm-shim/drm_shim.c | 19 ++++++++++++++-----
 1 file changed, 14 insertions(+), 5 deletions(-)

diff --git a/src/drm-shim/drm_shim.c b/src/drm-shim/drm_shim.c
index c9f1451f2490..0aefec2c5f1a 100644
--- a/src/drm-shim/drm_shim.c
+++ b/src/drm-shim/drm_shim.c
@@ -121,6 +121,16 @@ extern bool drm_shim_driver_prefers_first_render_node;
       assert(__ret >= 0);                        \
    }
 
+#ifndef HAVE_MEMFD_CREATE
+#include <sys/syscall.h>
+
+static inline int
+memfd_create(const char *name, unsigned int flags)
+{
+   return syscall(SYS_memfd_create, name, flags);
+}
+#endif
+
 /* Pick the minor and filename for our shimmed render node.  This can be
  * either a new one that didn't exist on the system, or if the driver wants,
  * it can replace the first render node.
@@ -258,12 +268,11 @@ PUBLIC FILE *fopen(const char *path, const char *mode)
 
    for (int i = 0; i < file_overrides_count; i++) {
       if (strcmp(file_overrides[i].path, path) == 0) {
-         int fds[2];
-         pipe(fds);
-         write(fds[1], file_overrides[i].contents,
+         int fd = memfd_create("shim file", 0);
+         write(fd, file_overrides[i].contents,
                strlen(file_overrides[i].contents));
-         close(fds[1]);
-         return fdopen(fds[0], "r");
+         lseek(fd, 0, SEEK_SET);
+         return fdopen(fd, "r");
       }
    }
 
-- 
GitLab

