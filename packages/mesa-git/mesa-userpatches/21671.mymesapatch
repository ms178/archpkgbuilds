From 841c2abbbc536954093c2b37848f1ca9678c3ff8 Mon Sep 17 00:00:00 2001
From: Dave Airlie <airlied@redhat.com>
Date: Fri, 3 Mar 2023 12:57:16 +1000
Subject: [PATCH 1/3] radv/video: fix h264 frame heights when field images are
 in use

This was breaking MBAFF decoding.

Fixes: 8a29291dbe6c ("radv/video: add h264 support for uvd")
---
 src/amd/vulkan/radv_video.c | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/src/amd/vulkan/radv_video.c b/src/amd/vulkan/radv_video.c
index c348fac3af47..1bd53643c075 100644
--- a/src/amd/vulkan/radv_video.c
+++ b/src/amd/vulkan/radv_video.c
@@ -627,6 +627,8 @@ static rvcn_dec_message_avc_t get_h264_msg(struct radv_video_session *vid,
 
    *width_in_samples = (sps->pic_width_in_mbs_minus1 + 1) * 16;
    *height_in_samples = (sps->pic_height_in_map_units_minus1 + 1) * 16;
+   if (!sps->flags.frame_mbs_only_flag)
+      *height_in_samples *= 2;
    result.level = sps->level_idc;
 
    result.sps_info_flags = 0;
@@ -1088,6 +1090,8 @@ static struct ruvd_h264 get_uvd_h264_msg(struct radv_video_session *vid,
 
    *width_in_samples = (sps->pic_width_in_mbs_minus1 + 1) * 16;
    *height_in_samples = (sps->pic_height_in_map_units_minus1 + 1) * 16;
+   if (!sps->flags.frame_mbs_only_flag)
+      *height_in_samples *= 2;
    result.level = sps->level_idc;
 
    result.sps_info_flags = 0;
-- 
GitLab


From 6e617165f327b4cdbbc571588867140dc1b49b37 Mon Sep 17 00:00:00 2001
From: Dave Airlie <airlied@redhat.com>
Date: Fri, 3 Mar 2023 14:26:05 +1000
Subject: [PATCH 2/3] radv/video: fix used for reference flags.

These weren't getting programmed properly for interlaced videos

Fixes: 3e2c768aa860 ("radv/vcn: enable dynamic dpb tier 2 for h264/h265 on navi21+")
---
 src/amd/vulkan/radv_video.c | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/src/amd/vulkan/radv_video.c b/src/amd/vulkan/radv_video.c
index 1bd53643c075..e8d939ccad4c 100644
--- a/src/amd/vulkan/radv_video.c
+++ b/src/amd/vulkan/radv_video.c
@@ -709,7 +709,9 @@ static rvcn_dec_message_avc_t get_h264_msg(struct radv_video_session *vid,
          result.used_for_reference_flags |= (1 << (2 * idx));
       if (dpb_slot->pStdReferenceInfo->flags.bottom_field_flag)
          result.used_for_reference_flags |= (1 << (2 * idx + 1));
-      else
+
+      if (!dpb_slot->pStdReferenceInfo->flags.top_field_flag &&
+          !dpb_slot->pStdReferenceInfo->flags.bottom_field_flag)
          result.used_for_reference_flags |= (3 << (2 * idx));
 
       if (dpb_slot->pStdReferenceInfo->flags.used_for_long_term_reference)
-- 
GitLab


From ea8c669dfdfc70d202492d2c49ff3303d1379da3 Mon Sep 17 00:00:00 2001
From: Dave Airlie <airlied@redhat.com>
Date: Thu, 9 Mar 2023 15:06:05 +1000
Subject: [PATCH 3/3] radv/video: fix h265 decoding sizes.

Fixes the misrendering/hangs on hevc content.

Fixes: 6c3c242361da778 ("radv/video: add h265 decode UVD support")
---
 src/amd/vulkan/radv_video.c | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/src/amd/vulkan/radv_video.c b/src/amd/vulkan/radv_video.c
index e8d939ccad4c..8678a7838075 100644
--- a/src/amd/vulkan/radv_video.c
+++ b/src/amd/vulkan/radv_video.c
@@ -953,8 +953,8 @@ static bool rvcn_dec_message_decode(struct radv_cmd_buffer *cmd_buffer,
 
    decode->stream_type = vid->stream_type;
    decode->decode_flags = 0;
-   decode->width_in_samples = dst_iv->image->vk.extent.width;
-   decode->height_in_samples = dst_iv->image->vk.extent.height;
+   decode->width_in_samples = frame_info->dstPictureResource.codedExtent.width;
+   decode->height_in_samples = frame_info->dstPictureResource.codedExtent.height;
 
    decode->bsd_size = frame_info->srcBufferRange;
 
@@ -1348,8 +1348,8 @@ static bool ruvd_dec_message_decode(struct radv_device *device,
 
    msg->body.decode.stream_type = vid->stream_type;
    msg->body.decode.decode_flags = 0x1;
-   msg->body.decode.width_in_samples = dst_iv->image->vk.extent.width;
-   msg->body.decode.height_in_samples = dst_iv->image->vk.extent.height;
+   msg->body.decode.width_in_samples = frame_info->dstPictureResource.codedExtent.width;
+   msg->body.decode.height_in_samples = frame_info->dstPictureResource.codedExtent.height;
 
    msg->body.decode.dpb_size = (vid->dpb_type != DPB_DYNAMIC_TIER_2) ? dpb->size : 0;
    msg->body.decode.bsd_size = frame_info->srcBufferRange;
-- 
GitLab

