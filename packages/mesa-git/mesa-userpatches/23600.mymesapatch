From 088fa068e99ac3dc1b173733ca86983268d8dd27 Mon Sep 17 00:00:00 2001
From: Mike Blumenkrantz <michael.blumenkrantz@gmail.com>
Date: Wed, 7 Jun 2023 17:00:42 -0400
Subject: [PATCH] radv: tweak gfx pipeline stage binding

iterating all the stages like this ends up unnecessarily calling
through to geometry stage binds when no shader was bound and no shader
is being bound by the power of optimization, so instead only do the unbind
part for the stages that are being unbound
---
 src/amd/vulkan/radv_cmd_buffer.c | 9 ++++++++-
 1 file changed, 8 insertions(+), 1 deletion(-)

diff --git a/src/amd/vulkan/radv_cmd_buffer.c b/src/amd/vulkan/radv_cmd_buffer.c
index 3611e018af1c..57876f8bec6e 100644
--- a/src/amd/vulkan/radv_cmd_buffer.c
+++ b/src/amd/vulkan/radv_cmd_buffer.c
@@ -6780,7 +6780,14 @@ radv_CmdBindPipeline(VkCommandBuffer commandBuffer, VkPipelineBindPoint pipeline
          return;
       radv_mark_descriptor_sets_dirty(cmd_buffer, pipelineBindPoint);
 
-      radv_foreach_stage(stage, RADV_GRAPHICS_STAGES) {
+      /* unbind stages no longer present */
+      if (cmd_buffer->state.active_stages) {
+         radv_foreach_stage(stage, cmd_buffer->state.active_stages & RADV_GRAPHICS_STAGES & ~graphics_pipeline->active_stages) {
+            radv_bind_shader(cmd_buffer, graphics_pipeline->base.shaders[stage], stage);
+         }
+      }
+      /* bind new stages */
+      radv_foreach_stage(stage, graphics_pipeline->active_stages) {
          radv_bind_shader(cmd_buffer, graphics_pipeline->base.shaders[stage], stage);
       }
 
-- 
GitLab

