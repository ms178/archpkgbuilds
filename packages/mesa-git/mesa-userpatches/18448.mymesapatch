From e4f20742786d55998b25ad51257541460548709c Mon Sep 17 00:00:00 2001
From: Georg Lehmann <dadschoorse@gmail.com>
Date: Tue, 6 Sep 2022 19:56:59 +0200
Subject: [PATCH 1/3] nir/lower_alu_width: Ignore unpack_32_4x8.

Cc: mesa-stable

Signed-off-by: Georg Lehmann <dadschoorse@gmail.com>
---
 src/compiler/nir/nir_lower_alu_width.c | 1 +
 1 file changed, 1 insertion(+)

diff --git a/src/compiler/nir/nir_lower_alu_width.c b/src/compiler/nir/nir_lower_alu_width.c
index c75fc75f5748..9b1b3d0a750b 100644
--- a/src/compiler/nir/nir_lower_alu_width.c
+++ b/src/compiler/nir/nir_lower_alu_width.c
@@ -328,6 +328,7 @@ lower_alu_instr_width(nir_builder *b, nir_instr *instr, void *_data)
    case nir_op_unpack_64_2x32:
    case nir_op_unpack_64_4x16:
    case nir_op_unpack_32_2x16:
+   case nir_op_unpack_32_4x8:
    case nir_op_unpack_double_2x32_dxil:
       return NULL;
 
-- 
GitLab


From 68d093306557497a08be77a104bcd337195ef32d Mon Sep 17 00:00:00 2001
From: Georg Lehmann <dadschoorse@gmail.com>
Date: Tue, 6 Sep 2022 19:57:43 +0200
Subject: [PATCH 2/3] aco: Implement unpack_32_4x8.

Cc: mesa-stable

Signed-off-by: Georg Lehmann <dadschoorse@gmail.com>
---
 src/amd/compiler/aco_instruction_selection.cpp | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/src/amd/compiler/aco_instruction_selection.cpp b/src/amd/compiler/aco_instruction_selection.cpp
index cfb20a4a8b14..4df3f0e60979 100644
--- a/src/amd/compiler/aco_instruction_selection.cpp
+++ b/src/amd/compiler/aco_instruction_selection.cpp
@@ -3473,8 +3473,9 @@ visit_alu_instr(isel_context* ctx, nir_alu_instr* instr)
    case nir_op_unpack_64_2x32:
    case nir_op_unpack_32_2x16:
    case nir_op_unpack_64_4x16:
+   case nir_op_unpack_32_4x8:
       bld.copy(Definition(dst), get_alu_src(ctx, instr->src[0]));
-      emit_split_vector(ctx, dst, instr->op == nir_op_unpack_64_4x16 ? 4 : 2);
+      emit_split_vector(ctx, dst, instr->dest.dest.ssa.num_components);
       break;
    case nir_op_pack_64_2x32_split: {
       Temp src0 = get_alu_src(ctx, instr->src[0]);
-- 
GitLab


From d99bac6cdbc1cc904b304973cbdabef2793cf4e7 Mon Sep 17 00:00:00 2001
From: Georg Lehmann <dadschoorse@gmail.com>
Date: Tue, 6 Sep 2022 19:58:54 +0200
Subject: [PATCH 3/3] nir: Use 8bit unpack ops in nir_unpack_bits.

Foz-DB Navi21:
Totals from 412 (0.31% of 134913) affected shaders:
VGPRs: 11088 -> 11064 (-0.22%); split: -0.87%, +0.65%
SpillSGPRs: 950 -> 832 (-12.42%)
SpillVGPRs: 2246 -> 2313 (+2.98%); split: -0.85%, +3.83%
CodeSize: 1906996 -> 1901656 (-0.28%); split: -0.99%, +0.71%
Scratch: 220160 -> 218112 (-0.93%)
Instrs: 335375 -> 333812 (-0.47%); split: -0.98%, +0.52%
Latency: 6981971 -> 7196956 (+3.08%); split: -0.48%, +3.56%
InvThroughput: 2820800 -> 2930125 (+3.88%); split: -0.51%, +4.39%
VClause: 8237 -> 8316 (+0.96%); split: -0.19%, +1.15%
SClause: 7801 -> 7756 (-0.58%); split: -0.62%, +0.04%
Copies: 60299 -> 61324 (+1.70%); split: -0.98%, +2.68%
Branches: 10065 -> 10058 (-0.07%); split: -0.11%, +0.04%
PreSGPRs: 17852 -> 17384 (-2.62%); split: -2.64%, +0.02%

Only affects parallel-rdp, regressions seem to be a case of bad RA in the
ubershader variants.

Signed-off-by: Georg Lehmann <dadschoorse@gmail.com>
---
 src/compiler/nir/nir_builder.h | 22 ++++++++++++++++++++--
 1 file changed, 20 insertions(+), 2 deletions(-)

diff --git a/src/compiler/nir/nir_builder.h b/src/compiler/nir/nir_builder.h
index 04f33fa74765..8e6c76f867d6 100644
--- a/src/compiler/nir/nir_builder.h
+++ b/src/compiler/nir/nir_builder.h
@@ -903,6 +903,20 @@ nir_pack_bits(nir_builder *b, nir_ssa_def *src, unsigned dest_bit_size)
    return dest;
 }
 
+static inline nir_ssa_def *
+nir_unpack_64_8x8(nir_builder *b, nir_ssa_def *src)
+{
+   nir_ssa_def *vec2 = nir_unpack_64_2x32(b, src);
+   nir_ssa_def *dest_comps[NIR_MAX_VEC_COMPONENTS];
+   for (unsigned i = 0; i < 2; i++) {
+      nir_ssa_def *uvec4 = nir_unpack_32_4x8(b, nir_channel(b, vec2, i));
+      for (unsigned j = 0; j < 4; j++) {
+         dest_comps[4 * i + j] = nir_channel(b, uvec4, j);
+      }
+   }
+   return nir_vec(b, dest_comps, 8);
+}
+
 static inline nir_ssa_def *
 nir_unpack_bits(nir_builder *b, nir_ssa_def *src, unsigned dest_bit_size)
 {
@@ -916,13 +930,17 @@ nir_unpack_bits(nir_builder *b, nir_ssa_def *src, unsigned dest_bit_size)
       switch (dest_bit_size) {
       case 32: return nir_unpack_64_2x32(b, src);
       case 16: return nir_unpack_64_4x16(b, src);
+      case 8: return nir_unpack_64_8x8(b, src);
       default: break;
       }
       break;
 
    case 32:
-      if (dest_bit_size == 16)
-         return nir_unpack_32_2x16(b, src);
+      switch (dest_bit_size) {
+      case 16: return nir_unpack_32_2x16(b, src);
+      case 8: return nir_unpack_32_4x8(b, src);
+      default: break;
+      }
       break;
 
    default:
-- 
GitLab

