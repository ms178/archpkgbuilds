From 20a851acfc60c17518e1c4c0da6ea75fa3310055 Mon Sep 17 00:00:00 2001
From: Georg Lehmann <dadschoorse@gmail.com>
Date: Thu, 8 Feb 2024 14:51:25 +0100
Subject: [PATCH] aco: use fmamk/ak instead of fma with inline constant for
 more VOPD

Foz-DB navi31, forced wave32:
Totals from 24366 (31.19% of 78112) affected shaders:
Instrs: 20047048 -> 19967742 (-0.40%); split: -0.40%, +0.01%
CodeSize: 117499592 -> 117403696 (-0.08%); split: -0.11%, +0.02%
Latency: 152537019 -> 152562258 (+0.02%); split: -0.06%, +0.07%
InvThroughput: 28646274 -> 28527429 (-0.41%); split: -0.43%, +0.02%
VClause: 378380 -> 378373 (-0.00%); split: -0.00%, +0.00%
SClause: 756305 -> 756223 (-0.01%); split: -0.01%, +0.00%
---
 src/amd/compiler/aco_optimizer_postRA.cpp | 35 +++++++++++++++++++++++
 1 file changed, 35 insertions(+)

diff --git a/src/amd/compiler/aco_optimizer_postRA.cpp b/src/amd/compiler/aco_optimizer_postRA.cpp
index cee1fd0cb579e..eb7b778d51213 100644
--- a/src/amd/compiler/aco_optimizer_postRA.cpp
+++ b/src/amd/compiler/aco_optimizer_postRA.cpp
@@ -708,6 +708,39 @@ try_reassign_split_vector(pr_opt_ctx& ctx, aco_ptr<Instruction>& instr)
    }
 }
 
+void
+try_convert_to_fma_to_vop2(pr_opt_ctx& ctx, aco_ptr<Instruction>& instr)
+{
+   /* We convert v_fma_f32 with inline constant to fmamk/fmaak.
+    * This is only benefical if it allows more VOPD.
+    */
+   if (instr->opcode != aco_opcode::v_fma_f32 || instr->usesModifiers() ||
+       ctx.program->gfx_level < GFX11 || ctx.program->wave_size != 32)
+      return;
+
+   int constant_idx = -1;
+   int vgpr_idx = -1;
+   for (int i = 0; i < 3; i++) {
+      const Operand& op = instr->operands[i];
+      if (op.isLiteral() || op.isOfType(RegType::sgpr))
+         return;
+      else if (op.isConstant())
+         constant_idx = i;
+      else if (op.isOfType(RegType::vgpr))
+         vgpr_idx = i;
+   }
+
+   if (constant_idx < 0 || vgpr_idx < 0)
+      return;
+
+   std::swap(instr->operands[constant_idx], instr->operands[2]);
+   if (constant_idx == 0 || vgpr_idx == 0)
+      std::swap(instr->operands[0], instr->operands[1]);
+   instr->operands[2] = Operand::literal32(instr->operands[2].constantValue());
+   instr->opcode = constant_idx == 2 ? aco_opcode::v_fmaak_f32 : aco_opcode::v_fmamk_f32;
+   instr->format = Format::VOP2;
+}
+
 void
 process_instruction(pr_opt_ctx& ctx, aco_ptr<Instruction>& instr)
 {
@@ -726,6 +759,8 @@ process_instruction(pr_opt_ctx& ctx, aco_ptr<Instruction>& instr)
 
    try_reassign_split_vector(ctx, instr);
 
+   try_convert_to_fma_to_vop2(ctx, instr);
+
    if (instr)
       save_reg_writes(ctx, instr);
 
-- 
GitLab

