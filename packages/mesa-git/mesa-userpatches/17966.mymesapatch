From ecfed201f2ac1bb9a5cb49b15d6f8912514755aa Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Kai=20Wasserb=C3=A4ch?= <kai@dev.carbon-project.org>
Date: Tue, 9 Aug 2022 21:42:15 +0200
Subject: [PATCH] fix(FTBFS): meson: raise C++ standard to C++17
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

LLVM 16 requires this since [0] and instead of just going all over the
various directories and adding overrides it should be easier to just
raise this globally. GCC supports C++17 since GCC 8 (2018), Clang since
version 5 (2017). Debian Buster (oldstable) has GCC 8.3 and Clang 7.0,
so all major distributions should have this and there shouldn't be an
issue with bumping.

[0] <https://github.com/llvm/llvm-project/commit/b4e9977fc18405d4a11cbaf1975bcadbf75920b8>

Closes: <https://gitlab.freedesktop.org/mesa/mesa/-/issues/7031>
Signed-off-by: Kai Wasserb√§ch <kai@dev.carbon-project.org>
Reviewed-by: Jesse Natalie <jenatali@microsoft.com>
Reviewed-by: David Heidelberg <david.heidelberg@collabora.com>
---
 docs/install.rst                               | 4 ++--
 meson.build                                    | 2 +-
 src/amd/compiler/.clang-format                 | 2 +-
 src/egl/meson.build                            | 2 +-
 src/freedreno/ds/meson.build                   | 1 -
 src/gallium/drivers/freedreno/meson.build      | 1 -
 src/gallium/drivers/r600/meson.build           | 3 +--
 src/gallium/drivers/r600/sfn/tests/meson.build | 1 -
 src/imagination/.clang-format                  | 2 +-
 src/intel/ds/meson.build                       | 2 --
 src/panfrost/ds/meson.build                    | 1 -
 src/tool/pps/meson.build                       | 3 ---
 12 files changed, 7 insertions(+), 17 deletions(-)

diff --git a/docs/install.rst b/docs/install.rst
index a26ab829471c..f7591bdf431d 100644
--- a/docs/install.rst
+++ b/docs/install.rst
@@ -27,8 +27,8 @@ Compiler
 The following compilers are known to work, if you know of others or
 you're willing to maintain support for other compiler get in touch.
 
--  GCC 4.2.0 or later (some parts of Mesa may require later versions)
--  Clang - exact minimum requirement is currently unknown.
+-  GCC 8.0.0 or later (some parts of Mesa may require later versions)
+-  Clang 5.0 or later (some parts of Mesa may require later versions)
 -  Microsoft Visual Studio 2019 Version 16.11 or later and
    Windows SDK of at least 20348 is required, for building on Windows.
 
diff --git a/meson.build b/meson.build
index 048020e37791..14c3abac64df 100644
--- a/meson.build
+++ b/meson.build
@@ -27,7 +27,7 @@ project(
   ).stdout(),
   license : 'MIT',
   meson_version : '>= 0.53',
-  default_options : ['buildtype=debugoptimized', 'b_ndebug=if-release', 'c_std=c11', 'cpp_std=c++14']
+  default_options : ['buildtype=debugoptimized', 'b_ndebug=if-release', 'c_std=c11', 'cpp_std=c++17']
 )
 
 # In recent versions, meson can inject some extra arguments to get richer
diff --git a/src/amd/compiler/.clang-format b/src/amd/compiler/.clang-format
index 787183879c01..f87bf82615b5 100644
--- a/src/amd/compiler/.clang-format
+++ b/src/amd/compiler/.clang-format
@@ -106,7 +106,7 @@ SpacesInContainerLiterals: false
 
 # ACO clang-format rules:
 Language: Cpp
-Standard: c++14
+Standard: c++17
 
 # Force pointers to the type for C++
 DerivePointerAlignment: false
diff --git a/src/egl/meson.build b/src/egl/meson.build
index 6420f85fb742..82ffa1edbaeb 100644
--- a/src/egl/meson.build
+++ b/src/egl/meson.build
@@ -131,7 +131,7 @@ if with_dri2
     if dep_android_mapper4.found()
       files_egl += files('drivers/dri2/platform_android_mapper.cpp')
       c_args_for_egl += '-DUSE_IMAPPER4_METADATA_API'
-      cpp_args_for_egl += ['-std=c++17', '-DUSE_IMAPPER4_METADATA_API']
+      cpp_args_for_egl += ['-DUSE_IMAPPER4_METADATA_API']
     endif
   endif
 elif with_platform_haiku
diff --git a/src/freedreno/ds/meson.build b/src/freedreno/ds/meson.build
index 50f099a9e078..d5c59dd9ae19 100644
--- a/src/freedreno/ds/meson.build
+++ b/src/freedreno/ds/meson.build
@@ -21,7 +21,6 @@ pps_freedreno_lib = static_library(
     dep_perfetto,
     dep_valgrind,
   ],
-  cpp_args: '-std=c++17'
 )
 
 pps_freedreno_dep = declare_dependency(
diff --git a/src/gallium/drivers/freedreno/meson.build b/src/gallium/drivers/freedreno/meson.build
index baddc0ae09f5..48c59aa87834 100644
--- a/src/gallium/drivers/freedreno/meson.build
+++ b/src/gallium/drivers/freedreno/meson.build
@@ -275,7 +275,6 @@ libfreedreno = static_library(
   cpp_args : [freedreno_cpp_args],
   gnu_symbol_visibility : 'hidden',
   dependencies : libfreedreno_dependencies,
-  override_options : ['cpp_std=c++17'],
 )
 
 driver_freedreno = declare_dependency(
diff --git a/src/gallium/drivers/r600/meson.build b/src/gallium/drivers/r600/meson.build
index eb01c79a2b9b..3b9796c92148 100644
--- a/src/gallium/drivers/r600/meson.build
+++ b/src/gallium/drivers/r600/meson.build
@@ -193,9 +193,8 @@ if with_gallium_opencl
   r600_c_args += '-DHAVE_OPENCL'
 endif
 
-r600_cpp_args = ['-std=c++17']
+r600_cpp_args = []
 if cpp.has_type('std::pmr::monotonic_buffer_resource',
-                 args:['-std=c++17'],
                  prefix : '#include <memory_resource>')
    r600_cpp_args += '-DHAVE_MEMORY_RESOURCE'
 endif
diff --git a/src/gallium/drivers/r600/sfn/tests/meson.build b/src/gallium/drivers/r600/sfn/tests/meson.build
index ba00dc58c059..2f1e5baeb64b 100644
--- a/src/gallium/drivers/r600/sfn/tests/meson.build
+++ b/src/gallium/drivers/r600/sfn/tests/meson.build
@@ -28,7 +28,6 @@ if with_tests
        executable('test-@0@-r600-sfn'.format(t),
                   ['sfn_@0@_test.cpp'.format(t)],
                   dependencies : [r600_test_dep],
-                  cpp_args: '-std=c++17'
                   ),
        suite : ['r600']
     )
diff --git a/src/imagination/.clang-format b/src/imagination/.clang-format
index b3fc44e702ea..2a73c472bec8 100644
--- a/src/imagination/.clang-format
+++ b/src/imagination/.clang-format
@@ -20,7 +20,7 @@
 # SOFTWARE.
 
 Language: Cpp
-Standard: c++11
+Standard: c++17
 
 UseCRLF: false
 ColumnLimit: 80
diff --git a/src/intel/ds/meson.build b/src/intel/ds/meson.build
index 64b6c9e36ebd..519d2ea4c133 100644
--- a/src/intel/ds/meson.build
+++ b/src/intel/ds/meson.build
@@ -39,7 +39,6 @@ libintel_driver_ds = static_library(
   include_directories : [inc_src, inc_include, inc_intel, inc_mapi, inc_mesa],
   link_with : [libintel_perf, libintel_dev],
   dependencies : libintel_driver_ds_deps,
-  cpp_args : '-std=c++17',
   gnu_symbol_visibility : 'hidden',
 )
 
@@ -61,7 +60,6 @@ if with_perfetto and (with_datasources.contains('intel') or with_datasources.con
     include_directories: [inc_tool, inc_src, inc_include, inc_intel],
     link_with: [libintel_perf, libintel_dev],
     dependencies: [dep_perfetto, dep_libdrm, idep_mesautil],
-    cpp_args: '-std=c++17'
   )
 
   compile_args_pps_intel = ['-DPPS_INTEL']
diff --git a/src/panfrost/ds/meson.build b/src/panfrost/ds/meson.build
index 379a25c4d261..49497aa701d9 100644
--- a/src/panfrost/ds/meson.build
+++ b/src/panfrost/ds/meson.build
@@ -16,7 +16,6 @@ pps_panfrost_lib = static_library(
   sources: pps_panfrost_sources,
   include_directories: pps_panfrost_includes,
   dependencies: [dep_libdrm, dep_perfetto, libpanfrost_dep, dep_panfrost_perf],
-  cpp_args: '-std=c++17'
 )
 
 compile_args_pps_panfrost = ['-DPPS_PANFROST']
diff --git a/src/tool/pps/meson.build b/src/tool/pps/meson.build
index e0e0361d6f20..71f07695ea6a 100644
--- a/src/tool/pps/meson.build
+++ b/src/tool/pps/meson.build
@@ -21,7 +21,6 @@ lib_pps = static_library(
   sources: pps_sources,
   include_directories: [include_pps, inc_src, pps_includes],
   dependencies: pps_deps,
-  cpp_args: '-std=c++17'
 )
 
 dep_pps = declare_dependency(
@@ -39,7 +38,6 @@ executable(
   sources: producer_sources,
   include_directories: [include_pps, inc_src],
   dependencies: [dep_pps, dep_perfetto],
-  cpp_args: '-std=c++17',
   install: true
 )
 
@@ -55,7 +53,6 @@ if dep_docopt.found()
     sources: config_sources,
     include_directories: [include_pps, inc_src],
     dependencies: [dep_pps, dep_docopt],
-    cpp_args: '-std=c++17',
     install: true
   )
 endif
-- 
GitLab

