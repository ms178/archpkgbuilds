From 1a30f6c7df47d59f2a9660a4ef306f8dfb59c5bc Mon Sep 17 00:00:00 2001
From: Asahi Lina <lina@asahilina.net>
Date: Fri, 3 Mar 2023 21:24:17 +0900
Subject: [PATCH] st/mesa: Update shader constants right after shaders

Gallium uses constant buffer 0 for program parameters. When shaders are
updated, this can free parameter buffers, leaving constant buffer 0 user
pointers dangling.

Other updates (e.g. texture updates) can end up doing draws in the
driver (such as via u_blitter). If this happens before cb0 has been
removed, we can end up reading freed memory when we set up those draws
and try to add the dangling cb0.

Move the constant buffer updates to right after the shader updates, to
make sure cb0 is cleaned up/updated as soon as possible and there are no
dangling pointers.

Fixes ASAN errors running dEQP-GLES3 on asahi.

Signed-off-by: Asahi Lina <lina@asahilina.net>
---
 src/mesa/state_tracker/st_atom_list.h | 13 +++++++------
 1 file changed, 7 insertions(+), 6 deletions(-)

diff --git a/src/mesa/state_tracker/st_atom_list.h b/src/mesa/state_tracker/st_atom_list.h
index a4d558370347..29d12cc11226 100644
--- a/src/mesa/state_tracker/st_atom_list.h
+++ b/src/mesa/state_tracker/st_atom_list.h
@@ -8,6 +8,13 @@ ST_STATE(ST_NEW_TES_STATE, st_update_tep)
 ST_STATE(ST_NEW_TCS_STATE, st_update_tcp)
 ST_STATE(ST_NEW_VS_STATE, st_update_vp)
 
+/* Update constants after shaders, so that any dangling constant buffer 0 userptrs are removed */
+ST_STATE(ST_NEW_VS_CONSTANTS, st_update_vs_constants)
+ST_STATE(ST_NEW_TCS_CONSTANTS, st_update_tcs_constants)
+ST_STATE(ST_NEW_TES_CONSTANTS, st_update_tes_constants)
+ST_STATE(ST_NEW_GS_CONSTANTS, st_update_gs_constants)
+ST_STATE(ST_NEW_FS_CONSTANTS, st_update_fs_constants)
+
 ST_STATE(ST_NEW_POLY_STIPPLE, st_update_polygon_stipple)
 ST_STATE(ST_NEW_WINDOW_RECTANGLES, st_update_window_rectangles)
 ST_STATE(ST_NEW_BLEND_COLOR, st_update_blend_color)
@@ -39,12 +46,6 @@ ST_STATE(ST_NEW_SAMPLE_SHADING, st_update_sample_shading)
 ST_STATE(ST_NEW_SCISSOR, st_update_scissor) /* depends on update_framebuffer_state */
 ST_STATE(ST_NEW_VIEWPORT, st_update_viewport) /* depends on update_framebuffer_state */
 
-ST_STATE(ST_NEW_VS_CONSTANTS, st_update_vs_constants)
-ST_STATE(ST_NEW_TCS_CONSTANTS, st_update_tcs_constants)
-ST_STATE(ST_NEW_TES_CONSTANTS, st_update_tes_constants)
-ST_STATE(ST_NEW_GS_CONSTANTS, st_update_gs_constants)
-ST_STATE(ST_NEW_FS_CONSTANTS, st_update_fs_constants)
-
 ST_STATE(ST_NEW_VS_UBOS, st_bind_vs_ubos)
 ST_STATE(ST_NEW_TCS_UBOS, st_bind_tcs_ubos)
 ST_STATE(ST_NEW_TES_UBOS, st_bind_tes_ubos)
-- 
GitLab

