From 5f890bc5ee93ee0b499b0c19cd58bcece9b9e399 Mon Sep 17 00:00:00 2001
From: Yonggang Luo <luoyonggang@gmail.com>
Date: Wed, 28 Jun 2023 16:17:31 +0800
Subject: [PATCH] nir: Optimize nir_foreach_function_with_impl_next a bit

Now the performance nir_foreach_function_with_impl are more close to
nir_foreach_function(func, shader) {
 if (func->impl != NULL) {
 }
}

bench code:
```
   int64_t begin = os_time_get_nano();
   int i = 0;
   nir_foreach_function_impl(impl, dup) {
      i += 1;
   }
   int64_t end = os_time_get_nano();
   printf("elapsed time:%.3lfms i:%d\n", (end - begin) / 1000000.0, i);
```

old bench result:
```
elapsed time:9.943ms i:500001
elapsed time:10.146ms i:500001
elapsed time:10.032ms i:500001
elapsed time:9.931ms i:500001
elapsed time:9.983ms i:500001
elapsed time:9.966ms i:500001
elapsed time:9.855ms i:500001
elapsed time:9.958ms i:500001
elapsed time:9.867ms i:500001
elapsed time:9.845ms i:500001
```
new bench result:
```
elapsed time:8.415ms i:500001
elapsed time:8.333ms i:500001
elapsed time:8.324ms i:500001
elapsed time:8.232ms i:500001
elapsed time:8.928ms i:500001
elapsed time:8.320ms i:500001
elapsed time:8.404ms i:500001
elapsed time:8.560ms i:500001
elapsed time:8.433ms i:500001
elapsed time:8.383ms i:500001
```

Signed-off-by: Yonggang Luo <luoyonggang@gmail.com>
---
 src/compiler/nir/nir.h | 23 +++++++++++++----------
 1 file changed, 13 insertions(+), 10 deletions(-)

diff --git a/src/compiler/nir/nir.h b/src/compiler/nir/nir.h
index 7d8256a9713a..0ae77ee1926c 100644
--- a/src/compiler/nir/nir.h
+++ b/src/compiler/nir/nir.h
@@ -4015,17 +4015,20 @@ nir_foreach_function_with_impl_first(const nir_shader *shader)
    return NULL;
 }
 
-static inline nir_function_impl *
-nir_foreach_function_with_impl_next(nir_function **it)
+static ALWAYS_INLINE nir_function *
+nir_foreach_function_with_impl_next(nir_function *it, nir_function_impl **impl_it)
 {
-   foreach_list_typed_from(nir_function, func, node, _, (*it)->node.next) {
-      if (func->impl != NULL) {
-         *it = func;
-         return func->impl;
+   while (true) {
+      struct exec_node *next = it->node.next;
+      if (unlikely(exec_node_is_tail_sentinel(next))) {
+         return NULL;
+      }
+      it = exec_node_data(nir_function, next, node);
+      if (likely(it->impl != NULL)) {
+         *impl_it = it->impl;
+         return it;
       }
    }
-
-   return NULL;
 }
 
 #define nir_foreach_function_with_impl(it, impl_it, shader)             \
@@ -4034,8 +4037,8 @@ nir_foreach_function_with_impl_next(nir_function **it)
         it = NULL)                                                      \
                                                                         \
       for (nir_function_impl *impl_it = it->impl;                       \
-           impl_it != NULL;                                             \
-           impl_it = nir_foreach_function_with_impl_next(&it))
+           it != NULL;                                                  \
+           it = nir_foreach_function_with_impl_next(it, &impl_it))
 
 /* Equivalent to
  *
-- 
GitLab

