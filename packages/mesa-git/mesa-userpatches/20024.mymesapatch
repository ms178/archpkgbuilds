From 93d3a9422c5a10605e2c1ae9ab04aa6e1bedcf35 Mon Sep 17 00:00:00 2001
From: Joshua Ashton <joshua@froggi.es>
Date: Sun, 27 Nov 2022 10:19:27 +0000
Subject: [PATCH 1/3] vulkan: Add vk_image_type_sanitize_extent helper

This will be useful in future commits.

Signed-off-by: Joshua Ashton <joshua@froggi.es>

Reviewed-by: Friedrich Vock <friedrich.vock@gmx.de>
Reviewed-by: Samuel Pitoiset <samuel.pitoiset@gmail.com>
---
 src/vulkan/runtime/vk_image.h | 11 +++++++++--
 1 file changed, 9 insertions(+), 2 deletions(-)

diff --git a/src/vulkan/runtime/vk_image.h b/src/vulkan/runtime/vk_image.h
index 6557a45b337b..0004f0aa1618 100644
--- a/src/vulkan/runtime/vk_image.h
+++ b/src/vulkan/runtime/vk_image.h
@@ -133,10 +133,10 @@ vk_image_subresource_level_count(const struct vk_image *image,
 }
 
 static inline VkExtent3D
-vk_image_sanitize_extent(const struct vk_image *image,
+vk_image_type_sanitize_extent(VkImageType imageType,
                          const VkExtent3D imageExtent)
 {
-   switch (image->image_type) {
+   switch (imageType) {
    case VK_IMAGE_TYPE_1D:
       return (VkExtent3D) { imageExtent.width, 1, 1 };
    case VK_IMAGE_TYPE_2D:
@@ -148,6 +148,13 @@ vk_image_sanitize_extent(const struct vk_image *image,
    }
 }
 
+static inline VkExtent3D
+vk_image_sanitize_extent(const struct vk_image *image,
+                         const VkExtent3D imageExtent)
+{
+   return vk_image_type_sanitize_extent(image->image_type, imageExtent);
+}
+
 VkExtent3D
 vk_image_extent_to_elements(const struct vk_image *image, VkExtent3D extent);
 
-- 
GitLab


From 68ba610605ae2233ed7f25c7ff4e3cb6bd45c220 Mon Sep 17 00:00:00 2001
From: Joshua Ashton <joshua@froggi.es>
Date: Sun, 27 Nov 2022 10:26:12 +0000
Subject: [PATCH 2/3] vulkan: Add vk_extent_to_elements helper

Allows more explicit-ness when needed, for example when copying multiple
layers of a 2D image to a 3D image, the source image's format must be
used, but the dest image's type.

See 20.2 in the Vulkan spec:
https://registry.khronos.org/vulkan/specs/1.3-extensions/html/vkspec.html#copies-images

Signed-off-by: Joshua Ashton <joshua@froggi.es>

Reviewed-by: Friedrich Vock <friedrich.vock@gmx.de>
Reviewed-by: Samuel Pitoiset <samuel.pitoiset@gmail.com>
---
 src/vulkan/runtime/vk_image.c | 6 +++---
 src/vulkan/runtime/vk_image.h | 8 +++++++-
 2 files changed, 10 insertions(+), 4 deletions(-)

diff --git a/src/vulkan/runtime/vk_image.c b/src/vulkan/runtime/vk_image.c
index 6af538867b2d..85eb81467523 100644
--- a/src/vulkan/runtime/vk_image.c
+++ b/src/vulkan/runtime/vk_image.c
@@ -253,12 +253,12 @@ vk_image_expand_aspect_mask(const struct vk_image *image,
 }
 
 VkExtent3D
-vk_image_extent_to_elements(const struct vk_image *image, VkExtent3D extent)
+vk_extent_to_elements(VkFormat format, VkImageType type, VkExtent3D extent)
 {
    const struct util_format_description *fmt =
-      vk_format_description(image->format);
+      vk_format_description(format);
 
-   extent = vk_image_sanitize_extent(image, extent);
+   extent = vk_image_type_sanitize_extent(type, extent);
    extent.width = DIV_ROUND_UP(extent.width, fmt->block.width);
    extent.height = DIV_ROUND_UP(extent.height, fmt->block.height);
    extent.depth = DIV_ROUND_UP(extent.depth, fmt->block.depth);
diff --git a/src/vulkan/runtime/vk_image.h b/src/vulkan/runtime/vk_image.h
index 0004f0aa1618..55936361e247 100644
--- a/src/vulkan/runtime/vk_image.h
+++ b/src/vulkan/runtime/vk_image.h
@@ -156,7 +156,13 @@ vk_image_sanitize_extent(const struct vk_image *image,
 }
 
 VkExtent3D
-vk_image_extent_to_elements(const struct vk_image *image, VkExtent3D extent);
+vk_extent_to_elements(VkFormat format, VkImageType type, VkExtent3D extent);
+
+static inline VkExtent3D
+vk_image_extent_to_elements(const struct vk_image *image, VkExtent3D extent)
+{
+   return vk_extent_to_elements(image->format, image->image_type, extent);
+}
 
 static inline VkOffset3D
 vk_image_sanitize_offset(const struct vk_image *image,
-- 
GitLab


From 8b8bb85fe49aef999b3ccb33f7c43d376c7b138b Mon Sep 17 00:00:00 2001
From: Joshua Ashton <joshua@froggi.es>
Date: Sun, 27 Nov 2022 10:30:26 +0000
Subject: [PATCH 3/3] radv: Use src format + dst type in copy_image for extent
 calculations

When copying multiple layers of a 2D image to a 3D image, the source
image's format must be used, but the dest image's type.

The original RADV code for what is now `vk_image_extent_to_elements`
(`meta_region_extent_el` and `radv_sanitize_image_offset`) had an option
to set the DST image_type to be used which was used in copy_image in
radv_meta_copy.c for img_extent_el which got lost in the transition
to the common code.

See 20.2 in the Vulkan spec:
https://registry.khronos.org/vulkan/specs/1.3-extensions/html/vkspec.html#copies-images

Fixes: 1436fa55 ("radv: Use the common image offset/extent sanitize helpers")

Signed-off-by: Joshua Ashton <joshua@froggi.es>

Reported-by: shansheng wang <shansheng.wang@amd.com>

Reviewed-by: Friedrich Vock <friedrich.vock@gmx.de>
Reviewed-by: Samuel Pitoiset <samuel.pitoiset@gmail.com>
---
 src/amd/vulkan/radv_meta_copy.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/amd/vulkan/radv_meta_copy.c b/src/amd/vulkan/radv_meta_copy.c
index 25f88b9df6d3..beebdb5eb93d 100644
--- a/src/amd/vulkan/radv_meta_copy.c
+++ b/src/amd/vulkan/radv_meta_copy.c
@@ -484,7 +484,7 @@ copy_image(struct radv_cmd_buffer *cmd_buffer, struct radv_image *src_image,
        * clamping depth when copying multiple layers of a 2D image to
        * a 3D image.
        */
-      const VkExtent3D img_extent_el = vk_image_extent_to_elements(&src_image->vk, region->extent);
+      const VkExtent3D img_extent_el = vk_extent_to_elements(src_image->vk.format, dst_image->vk.image_type, region->extent);
 
       /* Start creating blit rect */
       struct radv_meta_blit2d_rect rect = {
-- 
GitLab

