From dac6f094513ff348c2312fc9c1b4bf42d9c2c4ac Mon Sep 17 00:00:00 2001
From: Natalie Vock <natalie.vock@gmx.de>
Date: Sun, 25 May 2025 15:00:24 +0200
Subject: [PATCH] radv/rt: Report 256 byte alignment for scratch

This mirrors AMDVLK. 128-byte alignment is possible, but DOOM: The Dark
Ages screws up scratch allocation with alignments <256 bytes.

Fixes hangs in DOOM: The Dark Ages.

Cc: mesa-stable
Part-of: <https://gitlab.freedesktop.org/mesa/mesa/-/merge_requests/35152>
---
 src/amd/vulkan/radv_physical_device.c | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/src/amd/vulkan/radv_physical_device.c b/src/amd/vulkan/radv_physical_device.c
index 0c98cac2c19f7..53ddf3a39110a 100644
--- a/src/amd/vulkan/radv_physical_device.c
+++ b/src/amd/vulkan/radv_physical_device.c
@@ -1791,7 +1791,10 @@ radv_get_physical_device_properties(struct radv_physical_device *pdev)
       .maxPerStageDescriptorUpdateAfterBindAccelerationStructures = max_descriptor_set_size,
       .maxDescriptorSetAccelerationStructures = max_descriptor_set_size,
       .maxDescriptorSetUpdateAfterBindAccelerationStructures = max_descriptor_set_size,
-      .minAccelerationStructureScratchOffsetAlignment = 128,
+      /* Technically we can work with 128-byte alignment, but DOOM: The Dark Ages breaks if
+       * the alignment is lower than this.
+       */
+      .minAccelerationStructureScratchOffsetAlignment = 256,
 
       /* VK_EXT_multi_draw */
       .maxMultiDrawCount = 2048,
-- 
GitLab

