From 68349aea392cf540715a5d1288e8a81a86278fe5 Mon Sep 17 00:00:00 2001
From: Qiang Yu <yuq825@gmail.com>
Date: Tue, 6 Jun 2023 10:04:52 +0800
Subject: [PATCH 1/4] radeonsi: add scratch_offset arg for aco cs
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Reviewed-by: Marek Olšák <marek.olsak@amd.com>
Signed-off-by: Qiang Yu <yuq825@gmail.com>
---
 src/gallium/drivers/radeonsi/si_shader.c | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/src/gallium/drivers/radeonsi/si_shader.c b/src/gallium/drivers/radeonsi/si_shader.c
index b4524aaf4533..5fd58d338bca 100644
--- a/src/gallium/drivers/radeonsi/si_shader.c
+++ b/src/gallium/drivers/radeonsi/si_shader.c
@@ -750,6 +750,10 @@ void si_init_shader_args(struct si_shader *shader, struct si_shader_args *args)
       if (shader->selector->info.uses_subgroup_info)
          ac_add_arg(&args->ac, AC_ARG_SGPR, 1, AC_ARG_INT, &args->ac.tg_size);
 
+      /* GFX11 set FLAT_SCRATCH directly instead of using this arg. */
+      if (shader->use_aco && sel->screen->info.gfx_level < GFX11)
+         ac_add_arg(&args->ac, AC_ARG_SGPR, 1, AC_ARG_INT, &args->ac.scratch_offset);
+
       /* Hardware VGPRs. */
       /* Thread IDs are packed in VGPR0, 10 bits per component or stored in 3 separate VGPRs */
       if (sel->screen->info.gfx_level >= GFX11 ||
-- 
GitLab


From 0624411b7157f24460f97fa0d0c0b25617dfc713 Mon Sep 17 00:00:00 2001
From: Qiang Yu <yuq825@gmail.com>
Date: Tue, 6 Jun 2023 11:26:56 +0800
Subject: [PATCH 2/4] ac/llvm,radeonsi: lower nir_load_user_data_amd in abi
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Reviewed-by: Marek Olšák <marek.olsak@amd.com>
Signed-off-by: Qiang Yu <yuq825@gmail.com>
---
 src/amd/llvm/ac_nir_to_llvm.c                   | 4 ----
 src/amd/llvm/ac_shader_abi.h                    | 1 -
 src/gallium/drivers/radeonsi/si_nir_lower_abi.c | 4 ++++
 src/gallium/drivers/radeonsi/si_shader_llvm.c   | 6 ------
 4 files changed, 4 insertions(+), 11 deletions(-)

diff --git a/src/amd/llvm/ac_nir_to_llvm.c b/src/amd/llvm/ac_nir_to_llvm.c
index 0e36b6ea9a39..077b5d76809b 100644
--- a/src/amd/llvm/ac_nir_to_llvm.c
+++ b/src/amd/llvm/ac_nir_to_llvm.c
@@ -3172,10 +3172,6 @@ static bool visit_intrinsic(struct ac_nir_context *ctx, nir_intrinsic_instr *ins
    case nir_intrinsic_is_helper_invocation:
       result = ac_build_load_helper_invocation(&ctx->ac);
       break;
-   case nir_intrinsic_load_user_data_amd:
-      assert(LLVMTypeOf(ctx->abi->user_data) == ctx->ac.v4i32);
-      result = ctx->abi->user_data;
-      break;
    case nir_intrinsic_load_instance_id:
       result = ctx->abi->instance_id_replaced ?
          ctx->abi->instance_id_replaced : ctx->abi->instance_id;
diff --git a/src/amd/llvm/ac_shader_abi.h b/src/amd/llvm/ac_shader_abi.h
index 5b6f5a8fce59..d505482b77ff 100644
--- a/src/amd/llvm/ac_shader_abi.h
+++ b/src/amd/llvm/ac_shader_abi.h
@@ -29,7 +29,6 @@ struct ac_shader_abi {
    LLVMValueRef vertex_id;
    LLVMValueRef vs_rel_patch_id;
    LLVMValueRef instance_id;
-   LLVMValueRef user_data;
 
    /* replaced registers when culling enabled */
    LLVMValueRef vertex_id_replaced;
diff --git a/src/gallium/drivers/radeonsi/si_nir_lower_abi.c b/src/gallium/drivers/radeonsi/si_nir_lower_abi.c
index f991ebcd8def..02d48ef9d29d 100644
--- a/src/gallium/drivers/radeonsi/si_nir_lower_abi.c
+++ b/src/gallium/drivers/radeonsi/si_nir_lower_abi.c
@@ -708,6 +708,10 @@ static bool lower_intrinsic(nir_builder *b, nir_instr *instr, struct lower_abi_s
          s->gsvs_ring[stream_id] : nir_ssa_undef(b, 4, 32);
       break;
    }
+   case nir_intrinsic_load_user_data_amd:
+      replacement = ac_nir_load_arg(b, &args->ac, args->cs_user_data);
+      replacement = nir_pad_vec4(b, replacement);
+      break;
    default:
       return false;
    }
diff --git a/src/gallium/drivers/radeonsi/si_shader_llvm.c b/src/gallium/drivers/radeonsi/si_shader_llvm.c
index 44a38b6408cf..a2f3ed2232e4 100644
--- a/src/gallium/drivers/radeonsi/si_shader_llvm.c
+++ b/src/gallium/drivers/radeonsi/si_shader_llvm.c
@@ -793,12 +793,6 @@ static bool si_llvm_translate_nir(struct si_shader_context *ctx, struct si_shade
    }
 
    case MESA_SHADER_COMPUTE:
-      if (nir->info.cs.user_data_components_amd) {
-         ctx->abi.user_data = ac_get_arg(&ctx->ac, ctx->args->cs_user_data);
-         ctx->abi.user_data = ac_build_expand_to_vec4(&ctx->ac, ctx->abi.user_data,
-                                                      nir->info.cs.user_data_components_amd);
-      }
-
       if (ctx->shader->selector->info.base.shared_size)
          si_llvm_declare_compute_memory(ctx);
       break;
-- 
GitLab


From 10c19d10f58c7300352d3b4686d54ee92ba33015 Mon Sep 17 00:00:00 2001
From: Qiang Yu <yuq825@gmail.com>
Date: Wed, 7 Jun 2023 14:47:12 +0800
Subject: [PATCH 3/4] radeonsi: fix crash when AMD_DEBUG=cs,initnir
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Reviewed-by: Marek Olšák <marek.olsak@amd.com>
Signed-off-by: Qiang Yu <yuq825@gmail.com>
---
 src/gallium/drivers/radeonsi/si_compute.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/src/gallium/drivers/radeonsi/si_compute.c b/src/gallium/drivers/radeonsi/si_compute.c
index 9dc5b778fa8e..da5903304c77 100644
--- a/src/gallium/drivers/radeonsi/si_compute.c
+++ b/src/gallium/drivers/radeonsi/si_compute.c
@@ -227,9 +227,6 @@ static void *si_create_compute_state(struct pipe_context *ctx, const struct pipe
    program->ir_type = cso->ir_type;
    program->input_size = cso->req_input_mem;
 
-   if (si_can_dump_shader(sscreen, sel->stage, SI_DUMP_INIT_NIR))
-      nir_print_shader(sel->nir, stderr);
-
    if (cso->ir_type != PIPE_SHADER_IR_NATIVE) {
       if (cso->ir_type == PIPE_SHADER_IR_TGSI) {
          program->ir_type = PIPE_SHADER_IR_NIR;
@@ -239,6 +236,9 @@ static void *si_create_compute_state(struct pipe_context *ctx, const struct pipe
          sel->nir = (struct nir_shader *)cso->prog;
       }
 
+      if (si_can_dump_shader(sscreen, sel->stage, SI_DUMP_INIT_NIR))
+         nir_print_shader(sel->nir, stderr);
+
       sel->compiler_ctx_state.debug = sctx->debug;
       sel->compiler_ctx_state.is_debug_context = sctx->is_debug;
       p_atomic_inc(&sscreen->num_shaders_created);
-- 
GitLab


From 5f7a6c4430b7aaa4a1816f20b4c51a264cb465af Mon Sep 17 00:00:00 2001
From: Qiang Yu <yuq825@gmail.com>
Date: Tue, 6 Jun 2023 10:04:11 +0800
Subject: [PATCH 4/4] radeonsi: enable aco support for compute shader
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Reviewed-by: Marek Olšák <marek.olsak@amd.com>
Signed-off-by: Qiang Yu <yuq825@gmail.com>
---
 src/gallium/drivers/radeonsi/si_shader.c | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/src/gallium/drivers/radeonsi/si_shader.c b/src/gallium/drivers/radeonsi/si_shader.c
index 5fd58d338bca..05a0aef76379 100644
--- a/src/gallium/drivers/radeonsi/si_shader.c
+++ b/src/gallium/drivers/radeonsi/si_shader.c
@@ -2329,6 +2329,10 @@ static void si_determine_use_aco(struct si_shader *shader)
    if (!(sel->screen->debug_flags & DBG(USE_ACO)))
       return;
 
+   /* ACO does not support compute cards yet. */
+   if (!sel->screen->info.has_graphics)
+      return;
+
    switch (sel->stage) {
    case MESA_SHADER_VERTEX:
    case MESA_SHADER_TESS_CTRL:
@@ -2341,6 +2345,8 @@ static void si_determine_use_aco(struct si_shader *shader)
    case MESA_SHADER_FRAGMENT:
       shader->use_aco = shader->is_monolithic;
       break;
+   case MESA_SHADER_COMPUTE:
+      shader->use_aco = true;
    default:
       break;
    }
-- 
GitLab

