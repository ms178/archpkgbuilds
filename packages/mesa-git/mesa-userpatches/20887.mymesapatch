From f6127dde4f4b2f067d6817b8d1bffc81b33fa6a2 Mon Sep 17 00:00:00 2001
From: Pierre-Eric Pelloux-Prayer <pierre-eric.pelloux-prayer@amd.com>
Date: Tue, 24 Jan 2023 21:42:49 +0100
Subject: [PATCH 1/2] egl/wayland: fix glthread deadlocks

We need to make sure that glthread is idle before using wl_*
functions or they might be used from 2 threads at the same
time.

Thanks to @deltib for the investigation of this issue.

Fixes: 58f90fd03f4 ("egl/wayland: fix glthread crashes")
Closes: https://gitlab.freedesktop.org/mesa/mesa/-/issues/7624
Closes: https://gitlab.freedesktop.org/mesa/mesa/-/issues/8136
---
 src/egl/drivers/dri2/platform_wayland.c | 20 +++++++++++---------
 1 file changed, 11 insertions(+), 9 deletions(-)

diff --git a/src/egl/drivers/dri2/platform_wayland.c b/src/egl/drivers/dri2/platform_wayland.c
index 34e356e986b0..6b8198c709b1 100644
--- a/src/egl/drivers/dri2/platform_wayland.c
+++ b/src/egl/drivers/dri2/platform_wayland.c
@@ -1587,15 +1587,6 @@ dri2_wl_swap_buffers_with_damage(_EGLDisplay *disp,
    if (!dri2_surf->wl_win)
       return _eglError(EGL_BAD_NATIVE_WINDOW, "dri2_swap_buffers");
 
-   while (dri2_surf->throttle_callback != NULL)
-      if (wl_display_dispatch_queue(dri2_dpy->wl_dpy,
-                                    dri2_surf->wl_queue) == -1)
-         return -1;
-
-   for (int i = 0; i < ARRAY_SIZE(dri2_surf->color_buffers); i++)
-      if (dri2_surf->color_buffers[i].age > 0)
-         dri2_surf->color_buffers[i].age++;
-
    /* Flush (and finish glthread) before:
     *   - update_buffers_if_needed because the unmarshalling thread
     *     may be running currently, and we would concurrently alloc/free
@@ -1603,10 +1594,21 @@ dri2_wl_swap_buffers_with_damage(_EGLDisplay *disp,
     *   - swapping current/back because flushing may free the buffer and
     *     dri_image and reallocate them using get_back_bo (which causes a
     *     a crash because 'current' becomes NULL).
+    *   - using any wl_* function because accessing them from this thread
+    *     and glthread causes troubles (see #7624 and #8136)
     */
    dri2_flush_drawable_for_swapbuffers(disp, draw);
    dri2_dpy->flush->invalidate(dri2_surf->dri_drawable);
 
+   while (dri2_surf->throttle_callback != NULL)
+      if (wl_display_dispatch_queue(dri2_dpy->wl_dpy,
+                                    dri2_surf->wl_queue) == -1)
+         return -1;
+
+   for (int i = 0; i < ARRAY_SIZE(dri2_surf->color_buffers); i++)
+      if (dri2_surf->color_buffers[i].age > 0)
+         dri2_surf->color_buffers[i].age++;
+
    /* Make sure we have a back buffer in case we're swapping without ever
     * rendering. */
    if (update_buffers_if_needed(dri2_surf) < 0)
-- 
GitLab


From c2cb8696b80b9fd0959fca51c838715923db2195 Mon Sep 17 00:00:00 2001
From: Pierre-Eric Pelloux-Prayer <pierre-eric.pelloux-prayer@amd.com>
Date: Tue, 24 Jan 2023 21:44:24 +0100
Subject: [PATCH 2/2] Revert "driconf: add a workaround for plasmashell
 freezing"

This reverts commit 41eb491fb6460f401a4c845fc28a53de92e9075b.

The underlying issue was fixed by the previous commit.
---
 src/util/00-mesa-defaults.conf | 3 ---
 1 file changed, 3 deletions(-)

diff --git a/src/util/00-mesa-defaults.conf b/src/util/00-mesa-defaults.conf
index 22ccdbf32e7d..8c9907394625 100644
--- a/src/util/00-mesa-defaults.conf
+++ b/src/util/00-mesa-defaults.conf
@@ -662,9 +662,6 @@ TODO: document the other workarounds.
                  See: https://gitlab.freedesktop.org/mesa/mesa/-/issues/7351#note_1581105 -->
             <option name="mesa_glthread" value="false"/>
         </application>
-        <application name="plasmashell" executable="plasmashell">
-            <option name="mesa_glthread" value="false"/>
-        </application>
 
         <!-- Adaptive sync denylist follows below: -->
         <application name="gnome-shell" executable="gnome-shell">
-- 
GitLab

