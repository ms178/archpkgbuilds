From 7faebb0480332394dd208cee14eb2e9cb6937609 Mon Sep 17 00:00:00 2001
From: Italo Nicola <italonicola@collabora.com>
Date: Fri, 14 May 2021 11:25:42 +0000
Subject: [PATCH 1/2] mesa/main: account for RTT samples when updating
 framebuffer

For EXT_multisampled_render_to_texture, we store the number of samples
in Attachment->NumSamples instead of Renderbuffer->NumSamples. This
meant that the previous code ignored that the framebuffer was
multisampled, leading to visual artifacts for drivers that support that
extension, such as panfrost.

Signed-off-by: Italo Nicola <italonicola@collabora.com>
---
 src/mesa/main/framebuffer.c | 27 ++++++++++++++++++++++++---
 1 file changed, 24 insertions(+), 3 deletions(-)

diff --git a/src/mesa/main/framebuffer.c b/src/mesa/main/framebuffer.c
index 9df30129aed2..2f53b924a90b 100644
--- a/src/mesa/main/framebuffer.c
+++ b/src/mesa/main/framebuffer.c
@@ -421,15 +421,36 @@ _mesa_update_framebuffer_visual(struct gl_context *ctx,
    /* find first RGB renderbuffer */
    for (unsigned i = 0; i < BUFFER_COUNT; i++) {
       if (fb->Attachment[i].Renderbuffer) {
-         const struct gl_renderbuffer *rb = fb->Attachment[i].Renderbuffer;
+         const struct gl_renderbuffer_attachment *att = &fb->Attachment[i];
+         const struct gl_renderbuffer *rb = att->Renderbuffer;
          const GLenum baseFormat = _mesa_get_format_base_format(rb->Format);
          const mesa_format fmt = rb->Format;
 
          /* Grab samples and sampleBuffers from any attachment point (assuming
           * the framebuffer is complete, we'll get the same answer from all
-          * attachments).
+          * attachments). If using EXT_multisampled_render_to_texture, the
+          * number of samples will be on fb->Attachment[i].NumSamples instead
+          * of the usual rb->NumSamples, but it's still guarantted to be the
+          * same for every attachment.
+          *
+          * From EXT_multisampled_render_to_texture:
+          *
+          *    Also, FBOs cannot combine attachments that have associated
+          *    multisample data specified by the mechanisms described in this
+          *    extension with attachments allocated using the core OpenGL ES
+          *    3.1 mechanisms, such as TexStorage2DMultisample. Add to section
+          *    9.4.2 "Whole Framebuffer Completeness":
+          *
+          *    "* If the value of RENDERBUFFER_SAMPLES is non-zero, all or
+          *       none of the attached renderbuffers have been allocated
+          *       using RenderbufferStorage- MultisampleEXT; if the value of
+          *       TEXTURES_SAMPLES is non-zero, all or none of the attached
+          *       textures have been attached using Framebuffer-
+          *       Texture2DMultisampleEXT.
+          *       { GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT }"
           */
-         fb->Visual.samples = rb->NumSamples;
+         fb->Visual.samples =
+            att->NumSamples ? att->NumSamples : rb->NumSamples;
 
          if (_mesa_is_legal_color_format(ctx, baseFormat)) {
             fb->Visual.redBits = _mesa_get_format_bits(fmt, GL_RED_BITS);
-- 
GitLab


From ef3103ea8b863e329d2e7d08ef90608c36b01a75 Mon Sep 17 00:00:00 2001
From: Italo Nicola <italonicola@collabora.com>
Date: Tue, 21 Feb 2023 16:32:03 +0000
Subject: [PATCH 2/2] mesa/main/readpix: allow reading from implicitly
 multisampled fbos

The GL_EXT_multisampled_render_to_texture spec explicitly allow reading
from these FBOs.

"Similarly, for ReadPixels:
 'An INVALID_OPERATION error is generated if the value of READ_-
FRAMEBUFFER_BINDING (see section 9) is non-zero, the read framebuffer is
framebuffer complete, and the value of SAMPLE_BUFFERS for the read
framebuffer is one.'

 These errors do not apply to textures and renderbuffers that have
associated multisample data specified by the mechanisms described in
this extension, i.e., the above operations are allowed even when
SAMPLE_BUFFERS is non-zero for renderbuffers created via Renderbuffer-
StorageMultisampleEXT or textures attached via FramebufferTexture2D-
MultisampleEXT."

Signed-off-by: Italo Nicola <italonicola@collabora.com>
---
 src/mesa/main/framebuffer.c |  2 ++
 src/mesa/main/glconfig.h    |  3 +++
 src/mesa/main/readpix.c     | 19 ++++++++++++++++++-
 3 files changed, 23 insertions(+), 1 deletion(-)

diff --git a/src/mesa/main/framebuffer.c b/src/mesa/main/framebuffer.c
index 2f53b924a90b..f88121bfb868 100644
--- a/src/mesa/main/framebuffer.c
+++ b/src/mesa/main/framebuffer.c
@@ -452,6 +452,8 @@ _mesa_update_framebuffer_visual(struct gl_context *ctx,
          fb->Visual.samples =
             att->NumSamples ? att->NumSamples : rb->NumSamples;
 
+         fb->Visual.implicit_resolve = !!att->NumSamples;
+
          if (_mesa_is_legal_color_format(ctx, baseFormat)) {
             fb->Visual.redBits = _mesa_get_format_bits(fmt, GL_RED_BITS);
             fb->Visual.greenBits = _mesa_get_format_bits(fmt, GL_GREEN_BITS);
diff --git a/src/mesa/main/glconfig.h b/src/mesa/main/glconfig.h
index 12255c0e799a..4d58d8cf56ae 100644
--- a/src/mesa/main/glconfig.h
+++ b/src/mesa/main/glconfig.h
@@ -26,6 +26,9 @@ struct gl_config
    /* ARB_multisample / SGIS_multisample */
    GLuint samples;
 
+   /* EXT_multisampled_render_to_texture */
+   GLboolean implicit_resolve;
+
    /* OML_swap_method */
    GLint swapMethod;
 
diff --git a/src/mesa/main/readpix.c b/src/mesa/main/readpix.c
index 202357ce02c0..c10bc013c6ac 100644
--- a/src/mesa/main/readpix.c
+++ b/src/mesa/main/readpix.c
@@ -1119,8 +1119,25 @@ read_pixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format,
          return;
       }
 
+      /**
+       * From the GL_EXT_multisampled_render_to_texture spec:
+       *
+       * Similarly, for ReadPixels:
+       * "An INVALID_OPERATION error is generated if the value of READ_-
+       *  FRAMEBUFFER_BINDING (see section 9) is non-zero, the read framebuffer
+       *  is framebuffer complete, and the value of SAMPLE_BUFFERS for the read
+       *  framebuffer is one."
+       *
+       * These errors do not apply to textures and renderbuffers that have
+       * associated multisample data specified by the mechanisms described in
+       * this extension, i.e., the above operations are allowed even when
+       * SAMPLE_BUFFERS is non-zero for renderbuffers created via Renderbuffer-
+       * StorageMultisampleEXT or textures attached via FramebufferTexture2D-
+       * MultisampleEXT.
+       */
       if (_mesa_is_user_fbo(ctx->ReadBuffer) &&
-          ctx->ReadBuffer->Visual.samples > 0) {
+          ctx->ReadBuffer->Visual.samples > 0 &&
+          !ctx->ReadBuffer->Visual.implicit_resolve) {
          _mesa_error(ctx, GL_INVALID_OPERATION, "glReadPixels(multisample FBO)");
          return;
       }
-- 
GitLab

