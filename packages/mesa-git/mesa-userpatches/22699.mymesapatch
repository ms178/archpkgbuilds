From f943d1b7fc1058f2460daefd9ef948d6720fcf8c Mon Sep 17 00:00:00 2001
From: Thong Thai <thong.thai@amd.com>
Date: Wed, 26 Apr 2023 14:57:43 -0400
Subject: [PATCH 1/3] mesa/main: rework locale setup/teardown

Signed-off-by: Thong Thai <thong.thai@amd.com>
Acked-by: Pierre-Eric Pelloux-Prayer <pierre-eric.pelloux-prayer@amd.com>
---
 src/mesa/main/context.c |  1 -
 src/util/strtod.c       | 14 +++++++++++---
 2 files changed, 11 insertions(+), 4 deletions(-)

diff --git a/src/mesa/main/context.c b/src/mesa/main/context.c
index f16d8caa63b7..d8eea2ea8675 100644
--- a/src/mesa/main/context.c
+++ b/src/mesa/main/context.c
@@ -184,7 +184,6 @@ static void
 one_time_fini(void)
 {
    glsl_type_singleton_decref();
-   _mesa_locale_fini();
 }
 
 /**
diff --git a/src/util/strtod.c b/src/util/strtod.c
index de695d64b474..b42dc2e55b9d 100644
--- a/src/util/strtod.c
+++ b/src/util/strtod.c
@@ -35,14 +35,22 @@ static locale_t loc;
 #endif
 
 #include "strtod.h"
+#include "util/u_call_once.h"
 
+static void
+_mesa_locale_init_once(void)
+{
+   #if defined(_GNU_SOURCE) && defined(HAVE_STRTOD_L)
+   loc = newlocale(LC_CTYPE_MASK, "C", NULL);
+   atexit(_mesa_locale_fini);
+   #endif
+}
 
 void
 _mesa_locale_init(void)
 {
-#if defined(_GNU_SOURCE) && defined(HAVE_STRTOD_L)
-   loc = newlocale(LC_CTYPE_MASK, "C", NULL);
-#endif
+   static util_once_flag once = UTIL_ONCE_FLAG_INIT;
+   util_call_once(&once, _mesa_locale_init_once);
 }
 
 void
-- 
GitLab


From c5194f467fc35584ba7660224fdecd4478e3c3d2 Mon Sep 17 00:00:00 2001
From: Thong Thai <thong.thai@amd.com>
Date: Tue, 25 Apr 2023 16:12:53 -0400
Subject: [PATCH 2/3] util: check and initialize locale before using it
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Signed-off-by: Thong Thai <thong.thai@amd.com>
Acked-by: Marek Ol코치k <marek.olsak@amd.com>
Acked-by: Pierre-Eric Pelloux-Prayer <pierre-eric.pelloux-prayer@amd.com>
---
 src/util/strtod.c | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/src/util/strtod.c b/src/util/strtod.c
index b42dc2e55b9d..3f65eca93c0b 100644
--- a/src/util/strtod.c
+++ b/src/util/strtod.c
@@ -69,6 +69,7 @@ double
 _mesa_strtod(const char *s, char **end)
 {
 #if defined(_GNU_SOURCE) && defined(HAVE_STRTOD_L)
+   if (!loc) _mesa_locale_init();
    return strtod_l(s, end, loc);
 #else
    return strtod(s, end);
@@ -84,6 +85,7 @@ float
 _mesa_strtof(const char *s, char **end)
 {
 #if defined(_GNU_SOURCE) && defined(HAVE_STRTOD_L)
+   if (!loc) _mesa_locale_init();
    return strtof_l(s, end, loc);
 #elif defined(HAVE_STRTOF)
    return strtof(s, end);
-- 
GitLab


From 395fd49d20319bcf23e9c62ee04a6274fb2ec60f Mon Sep 17 00:00:00 2001
From: Thong Thai <thong.thai@amd.com>
Date: Tue, 25 Apr 2023 16:05:34 -0400
Subject: [PATCH 3/3] tgsi: use locale independent float and double parsing
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

The atof and strtod functions use the locale of the user when
determining if a decimal is a comma, ',' or a period, '.'. Thanks to
@fzwoch for helping find the cause of a shader-related issue.

Closes: https://gitlab.freedesktop.org/mesa/mesa/-/issues/5760
Signed-off-by: Thong Thai <thong.thai@amd.com>
Acked-by: Marek Ol코치k <marek.olsak@amd.com>
---
 src/gallium/auxiliary/tgsi/tgsi_text.c | 50 +++-----------------------
 1 file changed, 4 insertions(+), 46 deletions(-)

diff --git a/src/gallium/auxiliary/tgsi/tgsi_text.c b/src/gallium/auxiliary/tgsi/tgsi_text.c
index 7802f10498d5..29e3372781b0 100644
--- a/src/gallium/auxiliary/tgsi/tgsi_text.c
+++ b/src/gallium/auxiliary/tgsi/tgsi_text.c
@@ -30,6 +30,7 @@
 #include "util/u_prim.h"
 #include "pipe/p_defines.h"
 #include "util/u_inlines.h"
+#include "util/strtod.h"
 #include "tgsi_text.h"
 #include "tgsi_build.h"
 #include "tgsi_info.h"
@@ -231,52 +232,9 @@ static boolean parse_identifier( const char **pcur, char *ret, size_t len )
 static boolean parse_float( const char **pcur, float *val )
 {
    const char *cur = *pcur;
-   boolean integral_part = FALSE;
-   boolean fractional_part = FALSE;
-
-   if (*cur == '0' && *(cur + 1) == 'x') {
-      union fi fi;
-      fi.ui = strtoul(cur, NULL, 16);
-      *val = fi.f;
-      cur += 10;
-      goto out;
-   }
-
-   *val = (float) atof( cur );
-   if (*cur == '-' || *cur == '+')
-      cur++;
-   if (is_digit( cur )) {
-      cur++;
-      integral_part = TRUE;
-      while (is_digit( cur ))
-         cur++;
-   }
-   if (*cur == '.') {
-      cur++;
-      if (is_digit( cur )) {
-         cur++;
-         fractional_part = TRUE;
-         while (is_digit( cur ))
-            cur++;
-      }
-   }
-   if (!integral_part && !fractional_part)
+   *val = _mesa_strtof(cur, (char**)pcur);
+   if (*pcur == cur)
       return FALSE;
-   if (uprcase( *cur ) == 'E') {
-      cur++;
-      if (*cur == '-' || *cur == '+')
-         cur++;
-      if (is_digit( cur )) {
-         cur++;
-         while (is_digit( cur ))
-            cur++;
-      }
-      else
-         return FALSE;
-   }
-
-out:
-   *pcur = cur;
    return TRUE;
 }
 
@@ -288,7 +246,7 @@ static boolean parse_double( const char **pcur, uint32_t *val0, uint32_t *val1)
       uint32_t uval[2];
    } v;
 
-   v.dval = strtod(cur, (char**)pcur);
+   v.dval = _mesa_strtod(cur, (char**)pcur);
    if (*pcur == cur)
       return FALSE;
 
-- 
GitLab

