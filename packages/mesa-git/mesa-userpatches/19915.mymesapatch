From 2b1938d2a0076388df37ec990cd1c69728928844 Mon Sep 17 00:00:00 2001
From: Thong Thai <thong.thai@amd.com>
Date: Mon, 21 Nov 2022 19:21:30 -0500
Subject: [PATCH 1/4] gallium/auxiliary/vl: fix scale and translate parameters

Fixes the scale and translate portion of the code to allow for
scale and crop to work properly.

Signed-off-by: Thong Thai <thong.thai@amd.com>
Reviewed-by: Leo Liu <leo.liu@amd.com>
---
 src/gallium/auxiliary/vl/vl_compositor_cs.c | 21 ++++++++++-----------
 1 file changed, 10 insertions(+), 11 deletions(-)

diff --git a/src/gallium/auxiliary/vl/vl_compositor_cs.c b/src/gallium/auxiliary/vl/vl_compositor_cs.c
index ad2175213efa..f74a4b3810bb 100644
--- a/src/gallium/auxiliary/vl/vl_compositor_cs.c
+++ b/src/gallium/auxiliary/vl/vl_compositor_cs.c
@@ -670,8 +670,8 @@ set_viewport(struct vl_compositor_state *s,
    *ptr_int++ = drawn->area.y0;
    *ptr_int++ = drawn->area.x1;
    *ptr_int++ = drawn->area.y1;
-   *ptr_int++ = drawn->translate_x;
-   *ptr_int++ = drawn->translate_y;
+   *ptr_int++ = -drawn->translate_x;
+   *ptr_int++ = -drawn->translate_y;
 
    ptr_float = (float *)ptr_int;
    *ptr_float++ = drawn->sampler0_w;
@@ -711,15 +711,14 @@ draw_layers(struct vl_compositor       *c,
 
          drawn.area = calc_drawn_area(s, layer);
          drawn.scale_x = layer->viewport.scale[0] /
-                  (float)layer->sampler_views[0]->texture->width0 * 
-                  (layer->src.br.x - layer->src.tl.x);
-         drawn.scale_y = layer->viewport.scale[1] /
-                  ((float)layer->sampler_views[0]->texture->height0 * 
-                   (s->interlaced ? 2.0 : 1.0) * 
-                   (layer->src.br.y - layer->src.tl.y));
-
-         drawn.translate_x = (int)layer->viewport.translate[0];
-         drawn.translate_y = (int)layer->viewport.translate[1];
+            ((float)layer->sampler_views[0]->texture->width0 *
+             (layer->src.br.x - layer->src.tl.x));
+         drawn.scale_y  = layer->viewport.scale[1] /
+            ((float)layer->sampler_views[0]->texture->height0 *
+             (s->interlaced ? 2.0 : 1.0) *
+             (layer->src.br.y - layer->src.tl.y));
+         drawn.translate_x = (int)(layer->src.tl.x * layer->sampler_views[0]->texture->width0);
+         drawn.translate_y = (int)(layer->src.tl.y * layer->sampler_views[0]->texture->height0);
          drawn.sampler0_w = (float)layer->sampler_views[0]->texture->width0;
          drawn.sampler0_h = (float)layer->sampler_views[0]->texture->height0;
          set_viewport(s, &drawn, samplers);
-- 
GitLab


From 6bd49e5f9009750227c63632121c3affac18f9c1 Mon Sep 17 00:00:00 2001
From: Thong Thai <thong.thai@amd.com>
Date: Fri, 25 Nov 2022 17:38:53 -0500
Subject: [PATCH 2/4] frontends/va/postproc: default to weave when
 deinterlacing

Signed-off-by: Thong Thai <thong.thai@amd.com>
---
 src/gallium/frontends/va/postproc.c | 1 +
 1 file changed, 1 insertion(+)

diff --git a/src/gallium/frontends/va/postproc.c b/src/gallium/frontends/va/postproc.c
index 4e6dd722405a..74de1fe3518c 100644
--- a/src/gallium/frontends/va/postproc.c
+++ b/src/gallium/frontends/va/postproc.c
@@ -252,6 +252,7 @@ static VAStatus vlVaPostProcBlit(vlVaDriver *drv, vlVaContext *context,
    }
 
    if (src->interlaced != dst->interlaced) {
+      deinterlace = deinterlace ? deinterlace : VL_COMPOSITOR_WEAVE;
       vl_compositor_yuv_deint_full(&drv->cstate, &drv->compositor,
                                    src, dst, &src_rect, &dst_rect,
                                    deinterlace);
-- 
GitLab


From b2dc8feca566c4cac2fe6c6f96c82b7038540e1d Mon Sep 17 00:00:00 2001
From: Thong Thai <thong.thai@amd.com>
Date: Mon, 21 Nov 2022 19:11:09 -0500
Subject: [PATCH 3/4] gallium/auxiliary/vl: compute shaders for progressive yuv

v2: Add a one line offset to the compute shader, to get the
correct output, as suggested by Suresh <Suresh.Guttula@amd.com>.

Signed-off-by: Thong Thai <thong.thai@amd.com>
Reviewed-by: Leo Liu <leo.liu@amd.com>
---
 src/gallium/auxiliary/vl/vl_compositor.c    |   6 ++
 src/gallium/auxiliary/vl/vl_compositor.h    |   4 +
 src/gallium/auxiliary/vl/vl_compositor_cs.c | 111 ++++++++++++++++++++
 3 files changed, 121 insertions(+)

diff --git a/src/gallium/auxiliary/vl/vl_compositor.c b/src/gallium/auxiliary/vl/vl_compositor.c
index b545b9c297b5..c335ef908b1a 100644
--- a/src/gallium/auxiliary/vl/vl_compositor.c
+++ b/src/gallium/auxiliary/vl/vl_compositor.c
@@ -363,6 +363,12 @@ set_yuv_layer(struct vl_compositor_state *s, struct vl_compositor *c,
           s->layers[layer].cs = (y) ? c->cs_yuv.bob.y : c->cs_yuv.bob.uv;
       break;
 
+   case VL_COMPOSITOR_NONE:
+      if (c->pipe_cs_composit_supported) {
+          s->layers[layer].cs = (y) ? c->cs_yuv.progressive.y : c->cs_yuv.progressive.uv;
+          break;
+      }
+
    default:
       if (c->pipe_gfx_supported)
           s->layers[layer].fs = (y) ? c->fs_yuv.weave.y : c->fs_yuv.weave.uv;
diff --git a/src/gallium/auxiliary/vl/vl_compositor.h b/src/gallium/auxiliary/vl/vl_compositor.h
index 32ce82f73208..be82e156cbc6 100644
--- a/src/gallium/auxiliary/vl/vl_compositor.h
+++ b/src/gallium/auxiliary/vl/vl_compositor.h
@@ -149,6 +149,10 @@ struct vl_compositor
          void *y;
          void *uv;
       } bob;
+      struct {
+         void *y;
+         void *uv;
+      } progressive;
    } cs_yuv;
 
    struct {
diff --git a/src/gallium/auxiliary/vl/vl_compositor_cs.c b/src/gallium/auxiliary/vl/vl_compositor_cs.c
index f74a4b3810bb..8a4fc6398c47 100644
--- a/src/gallium/auxiliary/vl/vl_compositor_cs.c
+++ b/src/gallium/auxiliary/vl/vl_compositor_cs.c
@@ -584,6 +584,111 @@ static const char *compute_shader_yuv_bob_uv =
 
       "END\n";
 
+static const char *compute_shader_yuv_y =
+      "COMP\n"
+      "PROPERTY CS_FIXED_BLOCK_WIDTH 8\n"
+      "PROPERTY CS_FIXED_BLOCK_HEIGHT 8\n"
+      "PROPERTY CS_FIXED_BLOCK_DEPTH 1\n"
+
+      "DCL SV[0], THREAD_ID\n"
+      "DCL SV[1], BLOCK_ID\n"
+
+      "DCL CONST[0..5]\n"
+      "DCL SVIEW[0..2], RECT, FLOAT\n"
+      "DCL SAMP[0..2]\n"
+
+      "DCL IMAGE[0], 2D, WR\n"
+      "DCL TEMP[0..4]\n"
+
+      "IMM[0] UINT32 { 8, 8, 1, 0}\n"
+      "IMM[1] FLT32 { 1.0, 2.0, 0.0, 0.0}\n"
+
+      "UMAD TEMP[0], SV[1], IMM[0], SV[0]\n"
+
+      /* Drawn area check */
+      "USGE TEMP[1].xy, TEMP[0].xyxy, CONST[4].xyxy\n"
+      "USLT TEMP[1].zw, TEMP[0].xyxy, CONST[4].zwzw\n"
+      "AND TEMP[1].x, TEMP[1].xxxx, TEMP[1].yyyy\n"
+      "AND TEMP[1].x, TEMP[1].xxxx, TEMP[1].zzzz\n"
+      "AND TEMP[1].x, TEMP[1].xxxx, TEMP[1].wwww\n"
+
+      "UIF TEMP[1]\n"
+         "MOV TEMP[2], TEMP[0]\n"
+         "U2F TEMP[2], TEMP[2]\n"
+
+         /* Scale */
+         "DIV TEMP[2], TEMP[2], CONST[3].zwzw\n"
+
+         /* Translate */
+         "MOV TEMP[4].xy, CONST[5]\n"
+         "I2F TEMP[4], -TEMP[4]\n"
+         "ADD TEMP[2], TEMP[2], TEMP[4]\n"
+         "ADD TEMP[2].y, TEMP[2].yyyy, IMM[1].xxxx\n"
+
+         /* Fetch texels */
+         "TEX_LZ TEMP[4].x, TEMP[2], SAMP[0], RECT\n"
+
+         "MOV TEMP[4].yzw, IMM[1].xxxx\n"
+
+         "STORE IMAGE[0], TEMP[0], TEMP[4], 2D\n"
+      "ENDIF\n"
+
+      "END\n";
+
+static const char *compute_shader_yuv_uv =
+      "COMP\n"
+      "PROPERTY CS_FIXED_BLOCK_WIDTH 8\n"
+      "PROPERTY CS_FIXED_BLOCK_HEIGHT 8\n"
+      "PROPERTY CS_FIXED_BLOCK_DEPTH 1\n"
+
+      "DCL SV[0], THREAD_ID\n"
+      "DCL SV[1], BLOCK_ID\n"
+
+      "DCL CONST[0..5]\n"
+      "DCL SVIEW[0..2], RECT, FLOAT\n"
+      "DCL SAMP[0..2]\n"
+
+      "DCL IMAGE[0], 2D, WR\n"
+      "DCL TEMP[0..5]\n"
+
+      "IMM[0] UINT32 { 8, 8, 1, 0}\n"
+      "IMM[1] FLT32 { 1.0, 2.0, 0.0, 0.0}\n"
+
+      "UMAD TEMP[0], SV[1], IMM[0], SV[0]\n"
+
+      /* Drawn area check */
+      "USGE TEMP[1].xy, TEMP[0].xyxy, CONST[4].xyxy\n"
+      "USLT TEMP[1].zw, TEMP[0].xyxy, CONST[4].zwzw\n"
+      "AND TEMP[1].x, TEMP[1].xxxx, TEMP[1].yyyy\n"
+      "AND TEMP[1].x, TEMP[1].xxxx, TEMP[1].zzzz\n"
+      "AND TEMP[1].x, TEMP[1].xxxx, TEMP[1].wwww\n"
+
+      "UIF TEMP[1]\n"
+         "MOV TEMP[2], TEMP[0]\n"
+         "U2F TEMP[2], TEMP[2]\n"
+
+         /* Scale */
+         "DIV TEMP[2], TEMP[2], CONST[3].zwzw\n"
+
+         /* Translate */
+         "MOV TEMP[4].xy, CONST[5]\n"
+         "I2F TEMP[4], -TEMP[4]\n"
+         "ADD TEMP[2], TEMP[2], TEMP[4]\n"
+         "ADD TEMP[2].y, TEMP[2].yyyy, IMM[1].xxxx\n"
+
+         /* Fetch texels */
+         "TEX_LZ TEMP[4].y, TEMP[2], SAMP[1], RECT\n"
+         "TEX_LZ TEMP[4].z, TEMP[2], SAMP[2], RECT\n"
+
+         "MOV TEMP[4].w, IMM[1].xxxx\n"
+
+         "MOV TEMP[5].xy, TEMP[4].yzww\n"
+
+         "STORE IMAGE[0], TEMP[0], TEMP[5], 2D\n"
+      "ENDIF\n"
+
+      "END\n";
+
 static void
 cs_launch(struct vl_compositor *c,
           void                 *cs,
@@ -825,11 +930,17 @@ bool vl_compositor_cs_init_shaders(struct vl_compositor *c)
         c->cs_yuv.weave.uv = vl_compositor_cs_create_shader(c, compute_shader_yuv_weave_uv);
         c->cs_yuv.bob.y = vl_compositor_cs_create_shader(c, compute_shader_yuv_bob_y);
         c->cs_yuv.bob.uv = vl_compositor_cs_create_shader(c, compute_shader_yuv_bob_uv);
+        c->cs_yuv.progressive.y = vl_compositor_cs_create_shader(c, compute_shader_yuv_y);
+        c->cs_yuv.progressive.uv = vl_compositor_cs_create_shader(c, compute_shader_yuv_uv);
         if (!c->cs_yuv.weave.y || !c->cs_yuv.weave.uv ||
             !c->cs_yuv.bob.y || !c->cs_yuv.bob.uv) {
                 debug_printf("Unable to create YCbCr i-to-YCbCr p deint compute shader.\n");
                 return false;
         }
+        if (!c->cs_yuv.progressive.y || !c->cs_yuv.progressive.uv) {
+                debug_printf("Unable to create YCbCr p-to-NV12 compute shader.\n");
+                return false;
+        }
 
         return true;
 }
-- 
GitLab


From b304bd669c1e6f905ed6e26fb6b5e3ecd0583734 Mon Sep 17 00:00:00 2001
From: Thong Thai <thong.thai@amd.com>
Date: Mon, 21 Nov 2022 19:13:35 -0500
Subject: [PATCH 4/4] frontends/va/postproc: yuv422 to nv12

Signed-off-by: Thong Thai <thong.thai@amd.com>
Reviewed-by: Leo Liu <leo.liu@amd.com>
---
 src/gallium/frontends/va/postproc.c | 9 +++++++++
 1 file changed, 9 insertions(+)

diff --git a/src/gallium/frontends/va/postproc.c b/src/gallium/frontends/va/postproc.c
index 74de1fe3518c..11285a6c1086 100644
--- a/src/gallium/frontends/va/postproc.c
+++ b/src/gallium/frontends/va/postproc.c
@@ -251,6 +251,15 @@ static VAStatus vlVaPostProcBlit(vlVaDriver *drv, vlVaContext *context,
       return VA_STATUS_SUCCESS;
    }
 
+   if (src->buffer_format == PIPE_FORMAT_YUYV ||
+       src->buffer_format == PIPE_FORMAT_UYVY) {
+      vl_compositor_yuv_deint_full(&drv->cstate, &drv->compositor,
+                                   src, dst, &src_rect, &dst_rect,
+                                   VL_COMPOSITOR_NONE);
+
+      return VA_STATUS_SUCCESS;
+   }
+
    if (src->interlaced != dst->interlaced) {
       deinterlace = deinterlace ? deinterlace : VL_COMPOSITOR_WEAVE;
       vl_compositor_yuv_deint_full(&drv->cstate, &drv->compositor,
-- 
GitLab

