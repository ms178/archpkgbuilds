From 98d1ebf4d926e2ca15e8d8dcdd199dde873839d6 Mon Sep 17 00:00:00 2001
From: Tatsuyuki Ishi <ishitatsuyuki@gmail.com>
Date: Tue, 10 May 2022 14:03:03 +0900
Subject: [PATCH] radv: Implement radv_flush_before_query_copy to workaround UE
 Vulkan bugs.

Closes: https://gitlab.freedesktop.org/mesa/mesa/-/issues/5740
---
 src/amd/vulkan/00-radv-defaults.conf | 4 ++++
 src/amd/vulkan/radv_device.c         | 4 ++++
 src/amd/vulkan/radv_private.h        | 1 +
 src/amd/vulkan/radv_query.c          | 5 +++++
 src/util/driconf.h                   | 5 +++++
 5 files changed, 19 insertions(+)

diff --git a/src/amd/vulkan/00-radv-defaults.conf b/src/amd/vulkan/00-radv-defaults.conf
index 10ea1af18741..94cb3bde948f 100644
--- a/src/amd/vulkan/00-radv-defaults.conf
+++ b/src/amd/vulkan/00-radv-defaults.conf
@@ -51,6 +51,10 @@ Application bugs worked around in this file:
             <option name="radv_disable_tc_compat_htile_general" value="true" />
         </engine>
 
+        <engine engine_name_match="^UnrealEngine"> <!-- UE4/5 Vulkan RHI -->
+            <option name="radv_flush_before_query_copy" value="true" />
+        </engine>
+
         <!-- Game workarounds -->
         <application name="Shadow Of The Tomb Raider (Native)" application_name_match="ShadowOfTheTomb">
             <option name="radv_report_llvm9_version_string" value="true" />
diff --git a/src/amd/vulkan/radv_device.c b/src/amd/vulkan/radv_device.c
index 66af2ef4664d..4c43ce2fd59d 100644
--- a/src/amd/vulkan/radv_device.c
+++ b/src/amd/vulkan/radv_device.c
@@ -976,6 +976,7 @@ static const driOptionDescription radv_dri_options[] = {
       DRI_CONF_RADV_REQUIRE_ETC2(false)
       DRI_CONF_RADV_DISABLE_ANISO_SINGLE_LEVEL(false)
       DRI_CONF_RADV_DISABLE_SINKING_LOAD_INPUT_FS(false)
+      DRI_CONF_RADV_FLUSH_BEFORE_QUERY_COPY(false)
    DRI_CONF_SECTION_END
 };
 // clang-format on
@@ -1027,6 +1028,9 @@ radv_init_dri_options(struct radv_instance *instance)
 
    instance->disable_sinking_load_input_fs =
       driQueryOptionb(&instance->dri_options, "radv_disable_sinking_load_input_fs");
+
+   instance->flush_before_query_copy =
+      driQueryOptionb(&instance->dri_options, "radv_flush_before_query_copy");
 }
 
 VKAPI_ATTR VkResult VKAPI_CALL
diff --git a/src/amd/vulkan/radv_private.h b/src/amd/vulkan/radv_private.h
index b681087e247d..a897c026f9fb 100644
--- a/src/amd/vulkan/radv_private.h
+++ b/src/amd/vulkan/radv_private.h
@@ -360,6 +360,7 @@ struct radv_instance {
    bool disable_aniso_single_level;
    bool zero_vram;
    bool disable_sinking_load_input_fs;
+   bool flush_before_query_copy;
 };
 
 VkResult radv_init_wsi(struct radv_physical_device *physical_device);
diff --git a/src/amd/vulkan/radv_query.c b/src/amd/vulkan/radv_query.c
index c38385a23f57..a8c08318645b 100644
--- a/src/amd/vulkan/radv_query.c
+++ b/src/amd/vulkan/radv_query.c
@@ -1472,6 +1472,11 @@ radv_CmdCopyQueryPoolResults(VkCommandBuffer commandBuffer, VkQueryPool queryPoo
    radv_cs_add_buffer(cmd_buffer->device->ws, cmd_buffer->cs, pool->bo);
    radv_cs_add_buffer(cmd_buffer->device->ws, cmd_buffer->cs, dst_buffer->bo);
 
+   /* Workaround engines that forget to properly specify WAIT_BIT because some driver implicitly
+    * synchronizes before query copy. */
+   if (cmd_buffer->device->instance->flush_before_query_copy)
+      cmd_buffer->state.flush_bits |= cmd_buffer->active_query_flush_bits;
+
    /* From the Vulkan spec 1.1.108:
     *
     * "vkCmdCopyQueryPoolResults is guaranteed to see the effect of
diff --git a/src/util/driconf.h b/src/util/driconf.h
index ad4826abf8df..f1521f49e244 100644
--- a/src/util/driconf.h
+++ b/src/util/driconf.h
@@ -582,6 +582,11 @@
    DRI_CONF_OPT_B(radv_disable_sinking_load_input_fs, def, \
                   "Disable sinking load inputs for fragment shaders")
 
+#define DRI_CONF_RADV_FLUSH_BEFORE_QUERY_COPY(def) \
+  DRI_CONF_OPT_B( \
+      radv_flush_before_query_copy, def, \
+      "Wait for timestamps to be written before a query copy command")
+
 /**
  * \brief ANV specific configuration options
  */
-- 
GitLab

