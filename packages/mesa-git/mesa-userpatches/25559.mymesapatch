From 54e2c82969cac1b68138bd394cabd0d4ee010d37 Mon Sep 17 00:00:00 2001
From: Rhys Perry <pendingchaos02@gmail.com>
Date: Wed, 4 Oct 2023 17:28:38 +0100
Subject: [PATCH 1/2] aco: add VALU/SALU/VMEM/SMEM statistics

This lets us measure optimizations without interference of waitcnt
instructions.

Signed-off-by: Rhys Perry <pendingchaos02@gmail.com>
---
 src/amd/compiler/aco_interface.cpp  |  8 ++++++++
 src/amd/compiler/aco_shader_info.h  |  4 ++++
 src/amd/compiler/aco_statistics.cpp | 10 ++++++++--
 3 files changed, 20 insertions(+), 2 deletions(-)

diff --git a/src/amd/compiler/aco_interface.cpp b/src/amd/compiler/aco_interface.cpp
index 4eefd188edd3f..afe9cc8d5f161 100644
--- a/src/amd/compiler/aco_interface.cpp
+++ b/src/amd/compiler/aco_interface.cpp
@@ -54,6 +54,14 @@ static const std::array<aco_compiler_statistic_info, aco_num_statistics> statist
       aco_compiler_statistic_info{"Pre-Sched SGPRs", "SGPR usage before scheduling"};
    ret[aco_statistic_vgpr_presched] =
       aco_compiler_statistic_info{"Pre-Sched VGPRs", "VGPR usage before scheduling"};
+   ret[aco_statistic_valu] =
+      aco_compiler_statistic_info{"VALU", "Number of VALU instructions"};
+   ret[aco_statistic_salu] =
+      aco_compiler_statistic_info{"SALU", "Number of SALU instructions"};
+   ret[aco_statistic_vmem] =
+      aco_compiler_statistic_info{"VMEM", "Number of VMEM instructions"};
+   ret[aco_statistic_smem] =
+      aco_compiler_statistic_info{"SMEM", "Number of SMEM instructions"};
    return ret;
 }();
 
diff --git a/src/amd/compiler/aco_shader_info.h b/src/amd/compiler/aco_shader_info.h
index c739100c1c6f9..7b2e0686eb588 100644
--- a/src/amd/compiler/aco_shader_info.h
+++ b/src/amd/compiler/aco_shader_info.h
@@ -186,6 +186,10 @@ enum aco_statistic {
    aco_statistic_smem_clauses,
    aco_statistic_sgpr_presched,
    aco_statistic_vgpr_presched,
+   aco_statistic_valu,
+   aco_statistic_salu,
+   aco_statistic_vmem,
+   aco_statistic_smem,
    aco_num_statistics
 };
 
diff --git a/src/amd/compiler/aco_statistics.cpp b/src/amd/compiler/aco_statistics.cpp
index 9b0ee8a24ba44..a607dfc95a1d8 100644
--- a/src/amd/compiler/aco_statistics.cpp
+++ b/src/amd/compiler/aco_statistics.cpp
@@ -529,8 +529,10 @@ collect_preasm_stats(Program* program)
          if (instr->isSOPP() && instr->sopp().block != -1)
             program->statistics[aco_statistic_branches]++;
 
-         if (instr->opcode == aco_opcode::p_constaddr)
-            program->statistics[aco_statistic_instructions] += 2;
+         if (instr->isVALU() || instr->isVINTRP())
+            program->statistics[aco_statistic_valu]++;
+         if (instr->isSALU())
+            program->statistics[aco_statistic_salu]++;
 
          if ((instr->isVMEM() || instr->isScratch() || instr->isGlobal()) &&
              !instr->operands.empty()) {
@@ -539,6 +541,8 @@ collect_preasm_stats(Program* program)
                              { return should_form_clause(instr.get(), other); }))
                program->statistics[aco_statistic_vmem_clauses]++;
             vmem_clause.insert(instr.get());
+
+            program->statistics[aco_statistic_vmem]++;
          } else {
             vmem_clause.clear();
          }
@@ -549,6 +553,8 @@ collect_preasm_stats(Program* program)
                              { return should_form_clause(instr.get(), other); }))
                program->statistics[aco_statistic_smem_clauses]++;
             smem_clause.insert(instr.get());
+
+            program->statistics[aco_statistic_smem]++;
          } else {
             smem_clause.clear();
          }
-- 
GitLab


From 4dbdb7c738e9e971a2f2164dc84db1fe4def55f4 Mon Sep 17 00:00:00 2001
From: Rhys Perry <pendingchaos02@gmail.com>
Date: Tue, 10 Oct 2023 11:24:03 +0100
Subject: [PATCH 2/2] aco: collect Pre-Sched SGPRs/VGPRs before spilling

The usage after spilling is usually either the same as before or the
maximum.

Signed-off-by: Rhys Perry <pendingchaos02@gmail.com>
---
 src/amd/compiler/aco_interface.cpp | 5 ++---
 1 file changed, 2 insertions(+), 3 deletions(-)

diff --git a/src/amd/compiler/aco_interface.cpp b/src/amd/compiler/aco_interface.cpp
index afe9cc8d5f161..514239fbe154a 100644
--- a/src/amd/compiler/aco_interface.cpp
+++ b/src/amd/compiler/aco_interface.cpp
@@ -149,6 +149,8 @@ aco_postprocess_shader(const struct aco_compiler_options* options,
 
       /* spilling and scheduling */
       live_vars = aco::live_var_analysis(program.get());
+      if (program->collect_statistics)
+         aco::collect_presched_stats(program.get());
       aco::spill(program.get(), live_vars);
    }
 
@@ -167,9 +169,6 @@ aco_postprocess_shader(const struct aco_compiler_options* options,
       free(data);
    }
 
-   if (program->collect_statistics)
-      aco::collect_presched_stats(program.get());
-
    if ((aco::debug_flags & aco::DEBUG_LIVE_INFO) && options->dump_shader)
       aco_print_program(program.get(), stderr, live_vars, aco::print_live_vars | aco::print_kill);
 
-- 
GitLab

