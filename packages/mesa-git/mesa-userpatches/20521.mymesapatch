From 01b4915454925c169c62c56e2133e20e8bcf455a Mon Sep 17 00:00:00 2001
From: Konstantin Seurer <konstantin.seurer@gmail.com>
Date: Wed, 4 Jan 2023 16:48:29 +0100
Subject: [PATCH 1/2] radv/llvm: Use the shader names as module name

This makes it easier to identify which (if any) shaders fail validation.
---
 src/amd/vulkan/radv_nir_to_llvm.c | 24 ++++++++++++++++++++++++
 1 file changed, 24 insertions(+)

diff --git a/src/amd/vulkan/radv_nir_to_llvm.c b/src/amd/vulkan/radv_nir_to_llvm.c
index bb709d58b9d3..677367fcbd17 100644
--- a/src/amd/vulkan/radv_nir_to_llvm.c
+++ b/src/amd/vulkan/radv_nir_to_llvm.c
@@ -1215,6 +1215,28 @@ ac_translate_nir_to_llvm(struct ac_llvm_compiler *ac_llvm,
    ac_llvm_context_init(&ctx.ac, ac_llvm, options->gfx_level, options->family,
                         options->has_3d_cube_border_color_mipmap,
                         float_mode, info->wave_size, info->ballot_bit_size, exports_color_null, exports_mrtz);
+
+   uint32_t length = 1;
+   for (uint32_t i = 0; i < shader_count; i++)
+      if (shaders[i]->info.name)
+         length += strlen(shaders[i]->info.name) + 1;
+
+   char *name = malloc(length);
+   if (name) {
+      uint32_t offset = 0;
+      for (uint32_t i = 0; i < shader_count; i++) {
+         if (!shaders[i]->info.name)
+            continue;
+
+         strcpy(name + offset, shaders[i]->info.name);
+         offset += strlen(shaders[i]->info.name);
+         if (i != shader_count - 1)
+            name[offset++] = ',';
+      }
+
+      LLVMSetSourceFileName(ctx.ac.module, name, offset);
+   }
+
    ctx.context = ctx.ac.context;
 
    ctx.max_workgroup_size = info->workgroup_size;
@@ -1360,6 +1382,8 @@ ac_translate_nir_to_llvm(struct ac_llvm_compiler *ac_llvm,
 
    ac_llvm_finalize_module(&ctx, ac_llvm->passmgr);
 
+   free(name);
+
    return ctx.ac.module;
 }
 
-- 
GitLab


From 8fcbcc1d761e91ab32e6d8af2854cf3e6beedc52 Mon Sep 17 00:00:00 2001
From: Konstantin Seurer <konstantin.seurer@gmail.com>
Date: Wed, 4 Jan 2023 16:49:08 +0100
Subject: [PATCH 2/2] ac/llvm: Fix validation error with global io

Fixes: afd645f0576 ("ac/llvm: remove LLVMBuildGEP usages")
Reviewed-by: Pierre-Eric Pelloux-Prayer <pierre-eric.pelloux-prayer@amd.com>
---
 src/amd/llvm/ac_nir_to_llvm.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/amd/llvm/ac_nir_to_llvm.c b/src/amd/llvm/ac_nir_to_llvm.c
index cfcdb8b74bb4..99a70a007c3c 100644
--- a/src/amd/llvm/ac_nir_to_llvm.c
+++ b/src/amd/llvm/ac_nir_to_llvm.c
@@ -2152,7 +2152,7 @@ static LLVMValueRef get_global_address(struct ac_nir_context *ctx,
       LLVMTypeRef i8_ptr_type = LLVMPointerType(ctx->ac.i8, AC_ADDR_SPACE_GLOBAL);
       addr = LLVMBuildIntToPtr(ctx->ac.builder, addr, i8_ptr_type, "");
       addr = LLVMBuildGEP2(ctx->ac.builder, ctx->ac.i8, addr, &offset, 1, "");
-      return addr;
+      return LLVMBuildPointerCast(ctx->ac.builder, addr, ptr_type, "");
    } else {
       return LLVMBuildIntToPtr(ctx->ac.builder, addr, ptr_type, "");
    }
-- 
GitLab

