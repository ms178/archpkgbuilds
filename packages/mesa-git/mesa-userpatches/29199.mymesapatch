From 2e00953b80b4b0903f24edf3cf3c7aa15fec61bb Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Michel=20D=C3=A4nzer?= <mdaenzer@redhat.com>
Date: Fri, 10 May 2024 17:26:06 +0200
Subject: [PATCH 2/3] wsi: Swap middle entries of wsi_explicit_sync_free_levels
 array

The next commit will effectively swap the order as well as a side
effect. Doing this explicitly first will make it easier to keep apart
the effects of this and the rest of the next commit.
---
 src/vulkan/wsi/wsi_common_drm.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/src/vulkan/wsi/wsi_common_drm.c b/src/vulkan/wsi/wsi_common_drm.c
index ebb4530876696..d6bd7f18fa3d3 100644
--- a/src/vulkan/wsi/wsi_common_drm.c
+++ b/src/vulkan/wsi/wsi_common_drm.c
@@ -843,14 +843,14 @@ enum wsi_explicit_sync_state_flags
 
 /* Levels of "freeness"
  * 0 -> Acquire Signalled + Release Signalled
- * 1 -> Acquire Signalled + Release Materialized
- * 2 -> Release Signalled
+ * 1 -> Release Signalled
+ * 2 -> Acquire Signalled + Release Materialized
  * 3 -> Release Materialized
  */
 static const uint32_t wsi_explicit_sync_free_levels[] = {
    (WSI_ES_STATE_RELEASE_SIGNALLED | WSI_ES_STATE_RELEASE_MATERIALIZED | WSI_ES_STATE_ACQUIRE_SIGNALLED),
-   (WSI_ES_STATE_RELEASE_MATERIALIZED | WSI_ES_STATE_ACQUIRE_SIGNALLED),
    (WSI_ES_STATE_RELEASE_MATERIALIZED | WSI_ES_STATE_RELEASE_SIGNALLED),
+   (WSI_ES_STATE_RELEASE_MATERIALIZED | WSI_ES_STATE_ACQUIRE_SIGNALLED),
    (WSI_ES_STATE_RELEASE_MATERIALIZED),
 };
 
-- 
GitLab


From 653262f5b004fe78b58b8ba60d417d2d25803e34 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Michel=20D=C3=A4nzer?= <mdaenzer@redhat.com>
Date: Wed, 8 May 2024 17:24:55 +0200
Subject: [PATCH 3/3] wsi: Drop WSI_ES_STATE_RELEASE_MATERIALIZED

The separate drmSyncobjTimelineWait calls can incur significant
overhead, for relatively little benefit over the fallback call in
wsi_drm_wait_for_explicit_sync_release.
---
 src/vulkan/wsi/wsi_common_drm.c | 24 ++++++------------------
 1 file changed, 6 insertions(+), 18 deletions(-)

diff --git a/src/vulkan/wsi/wsi_common_drm.c b/src/vulkan/wsi/wsi_common_drm.c
index d6bd7f18fa3d3..89e37368d8d0c 100644
--- a/src/vulkan/wsi/wsi_common_drm.c
+++ b/src/vulkan/wsi/wsi_common_drm.c
@@ -836,22 +836,17 @@ wsi_drm_configure_image(const struct wsi_swapchain *chain,
 
 enum wsi_explicit_sync_state_flags
 {
-   WSI_ES_STATE_RELEASE_MATERIALIZED = (1u << 0),
-   WSI_ES_STATE_RELEASE_SIGNALLED    = (1u << 1),
-   WSI_ES_STATE_ACQUIRE_SIGNALLED    = (1u << 2),
+   WSI_ES_STATE_RELEASE_SIGNALLED    = (1u << 0),
+   WSI_ES_STATE_ACQUIRE_SIGNALLED    = (1u << 1),
 };
 
 /* Levels of "freeness"
  * 0 -> Acquire Signalled + Release Signalled
  * 1 -> Release Signalled
- * 2 -> Acquire Signalled + Release Materialized
- * 3 -> Release Materialized
  */
 static const uint32_t wsi_explicit_sync_free_levels[] = {
-   (WSI_ES_STATE_RELEASE_SIGNALLED | WSI_ES_STATE_RELEASE_MATERIALIZED | WSI_ES_STATE_ACQUIRE_SIGNALLED),
-   (WSI_ES_STATE_RELEASE_MATERIALIZED | WSI_ES_STATE_RELEASE_SIGNALLED),
-   (WSI_ES_STATE_RELEASE_MATERIALIZED | WSI_ES_STATE_ACQUIRE_SIGNALLED),
-   (WSI_ES_STATE_RELEASE_MATERIALIZED),
+   WSI_ES_STATE_RELEASE_SIGNALLED | WSI_ES_STATE_ACQUIRE_SIGNALLED,
+   WSI_ES_STATE_RELEASE_SIGNALLED,
 };
 
 static void
@@ -868,7 +863,7 @@ wsi_drm_images_explicit_sync_state(struct vk_device *device, int count, uint32_t
          /* This image has never been used in a timeline.
           * It must be free.
           */
-         flags[i] = WSI_ES_STATE_RELEASE_SIGNALLED | WSI_ES_STATE_RELEASE_MATERIALIZED | WSI_ES_STATE_ACQUIRE_SIGNALLED;
+         flags[i] = WSI_ES_STATE_RELEASE_SIGNALLED | WSI_ES_STATE_ACQUIRE_SIGNALLED;
          return;
       }
    }
@@ -896,14 +891,7 @@ wsi_drm_images_explicit_sync_state(struct vk_device *device, int count, uint32_t
          flags[i] |= WSI_ES_STATE_ACQUIRE_SIGNALLED;
 
       if (points[i * WSI_ES_COUNT + WSI_ES_RELEASE] >= image->explicit_sync[WSI_ES_RELEASE].timeline) {
-         flags[i] |= WSI_ES_STATE_RELEASE_SIGNALLED | WSI_ES_STATE_RELEASE_MATERIALIZED;
-      } else {
-         uint32_t first_signalled;
-         ret = drmSyncobjTimelineWait(device->drm_fd, &handles[i * WSI_ES_COUNT + WSI_ES_RELEASE],
-                                      &image->explicit_sync[WSI_ES_RELEASE].timeline, 1, 0,
-                                      DRM_SYNCOBJ_WAIT_FLAGS_WAIT_AVAILABLE, &first_signalled);
-         if (ret == 0)
-            flags[i] |= WSI_ES_STATE_RELEASE_MATERIALIZED;
+         flags[i] |= WSI_ES_STATE_RELEASE_SIGNALLED;
       }
    }
 
-- 
GitLab

