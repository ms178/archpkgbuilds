From 2819af037d3327436c481bf202a06956a73f699b Mon Sep 17 00:00:00 2001
From: Robert Mader <robert.mader@posteo.de>
Date: Sat, 16 Oct 2021 17:38:03 +0200
Subject: [PATCH 1/5] egl: Implement EGL_EXT_config_select_group

It allows us to influence the order of EGL configs for arbitrary
reasons, which will be used in the following commit.

Based on a patch by Freya Gentz <zegentzy@protonmail.com>, see
https://gitlab.freedesktop.org/mesa/mesa/-/merge_requests/2376

Reviewed-by: Faith Ekstrand <faith.ekstrand@collabora.com>
Reviewed-by: Adam Jackson <ajax@redhat.com>
Signed-off-by: David Heidelberg <david.heidelberg@collabora.com>
Signed-off-by: Robert Mader <robert.mader@posteo.de>
---
 src/egl/main/eglconfig.c  | 9 +++++++++
 src/egl/main/eglconfig.h  | 2 ++
 src/egl/main/eglglobals.c | 1 +
 3 files changed, 12 insertions(+)

diff --git a/src/egl/main/eglconfig.c b/src/egl/main/eglconfig.c
index add805bfd8f71..b7e8bf8efd9c1 100644
--- a/src/egl/main/eglconfig.c
+++ b/src/egl/main/eglconfig.c
@@ -249,6 +249,9 @@ static const struct {
    { EGL_COLOR_COMPONENT_TYPE_EXT,  ATTRIB_TYPE_ENUM,
                                     ATTRIB_CRITERION_EXACT,
                                     EGL_COLOR_COMPONENT_TYPE_FIXED_EXT },
+   { EGL_CONFIG_SELECT_GROUP_EXT,   ATTRIB_TYPE_INTEGER,
+                                    ATTRIB_CRITERION_IGNORE,
+                                    0 },
    /* clang-format on */
 };
 
@@ -287,6 +290,8 @@ _eglValidateConfig(const _EGLConfig *conf, EGLBoolean for_matching)
             if (val > 1 || val < 0)
                valid = EGL_FALSE;
             break;
+         case EGL_CONFIG_SELECT_GROUP_EXT:
+            break;
          default:
             if (val < 0)
                valid = EGL_FALSE;
@@ -587,6 +592,10 @@ _eglCompareConfigs(const _EGLConfig *conf1, const _EGLConfig *conf2,
    if (conf1 == conf2)
       return 0;
 
+   val1 = conf1->ConfigSelectGroup - conf2->ConfigSelectGroup;
+   if (val1)
+      return val1;
+
    /* the enum values have the desired ordering */
    STATIC_ASSERT(EGL_NONE < EGL_SLOW_CONFIG);
    STATIC_ASSERT(EGL_SLOW_CONFIG < EGL_NON_CONFORMANT_CONFIG);
diff --git a/src/egl/main/eglconfig.h b/src/egl/main/eglconfig.h
index 15a91d13e5fec..f7ba0385ef220 100644
--- a/src/egl/main/eglconfig.h
+++ b/src/egl/main/eglconfig.h
@@ -84,6 +84,7 @@ struct _egl_config {
    EGLint FramebufferTargetAndroid;
    EGLint RecordableAndroid;
    EGLint ComponentType;
+   EGLint ConfigSelectGroup;
 };
 
 /**
@@ -135,6 +136,7 @@ _eglOffsetOfConfig(EGLint attr)
       ATTRIB_MAP(EGL_FRAMEBUFFER_TARGET_ANDROID, FramebufferTargetAndroid);
       ATTRIB_MAP(EGL_RECORDABLE_ANDROID, RecordableAndroid);
       ATTRIB_MAP(EGL_COLOR_COMPONENT_TYPE_EXT, ComponentType);
+      ATTRIB_MAP(EGL_CONFIG_SELECT_GROUP_EXT, ConfigSelectGroup);
 #undef ATTRIB_MAP
    default:
       return -1;
diff --git a/src/egl/main/eglglobals.c b/src/egl/main/eglglobals.c
index 926332a7b66db..f0343a52364eb 100644
--- a/src/egl/main/eglglobals.c
+++ b/src/egl/main/eglglobals.c
@@ -73,6 +73,7 @@ struct _egl_global _eglGlobal = {
       " EGL_EXT_platform_base"
       " EGL_KHR_client_get_all_proc_addresses"
       " EGL_KHR_debug"
+      " EGL_EXT_config_select_group"
 
 #if USE_LIBGLVND
    ,
-- 
GitLab


From 8e30646825a2d54e9dddac9b68a99e6635f37f87 Mon Sep 17 00:00:00 2001
From: David Heidelberg <david.heidelberg@collabora.com>
Date: Sun, 24 Mar 2024 02:33:00 +0100
Subject: [PATCH 2/5] egl/x11: Move RGBA visuals in the second config selection
 group

This ensures that alpha-blended windows are at the bottom of the visuals
list, so they don't get picked up accidentally.

Based on: "egl-X11: Put RGBA visuals in the second config selection group"

Suggested-by: Freya Gentz <zegentzy@protonmail.com>  # original concept
Co-authored-by: Robert Mader <robert.mader@posteo.de>
Signed-off-by: David Heidelberg <david.heidelberg@collabora.com>
---
 src/egl/drivers/dri2/platform_x11.c | 17 ++++++++++++++++-
 1 file changed, 16 insertions(+), 1 deletion(-)

diff --git a/src/egl/drivers/dri2/platform_x11.c b/src/egl/drivers/dri2/platform_x11.c
index d6a3689c4f546..942f797b75d7f 100644
--- a/src/egl/drivers/dri2/platform_x11.c
+++ b/src/egl/drivers/dri2/platform_x11.c
@@ -821,6 +821,16 @@ dri2_x11_add_configs_for_visuals(struct dri2_egl_display *dri2_dpy,
             EGL_NONE,
          };
 
+         const EGLint config_attrs_2nd_group[] = {
+            EGL_NATIVE_VISUAL_ID,
+            visuals[i].visual_id,
+            EGL_NATIVE_VISUAL_TYPE,
+            visuals[i]._class,
+            EGL_CONFIG_SELECT_GROUP_EXT,
+            1,
+            EGL_NONE,
+         };
+
          for (int j = 0; dri2_dpy->driver_configs[j]; j++) {
             const __DRIconfig *config = dri2_dpy->driver_configs[j];
             int shifts[4];
@@ -854,7 +864,12 @@ dri2_x11_add_configs_for_visuals(struct dri2_egl_display *dri2_dpy,
                   continue;
             }
 
-            dri2_add_config(disp, config, surface_type, config_attrs);
+            unsigned int bit_per_pixel = sizes[0] + sizes[1] + sizes[2] + sizes[3];
+            if (sizes[3] != 0 && d.data->depth == bit_per_pixel) {
+               dri2_add_config(disp, config, surface_type, config_attrs_2nd_group);
+            } else {
+               dri2_add_config(disp, config, surface_type, config_attrs);
+            }
          }
       }
 
-- 
GitLab


From bd737fed893c30eaa27df60c5e453a0133e978ee Mon Sep 17 00:00:00 2001
From: Robert Mader <robert.mader@posteo.de>
Date: Sat, 16 Oct 2021 17:16:46 +0200
Subject: [PATCH 3/5] egl: Implement EGL_MESA_x11_native_visual_id

EGL 1.5 specification requires to not match on EGL_NATIVE_VISUAL_ID.

EGL_MESA_x11_native_visual_id extension allows us to remove this
restriction for X11, where we need to match EGL_NATIVE_VISUAL_ID to find
visuals which allow blending.

The reasoning is that on X11, compositors use the visual as "magic bit"
to decide whether to alpha-blend surface contents.
Unlike on most (all?) other windowing systems, requesting an alpha channel
for the config alone does not already imply blending on the compositor
level.

Thus, in order to allow clients to explicitly request configs with
"magic bit" and, similar to GLX, to order configs in a way so clients
not requesting alpha-blending do not get it by accident, do match
visual ids.

Note that one consequence of this is that more configs get
reported to clients.

Based on a patch by Freya Gentz <zegentzy@protonmail.com>, see
https://gitlab.freedesktop.org/mesa/mesa/-/merge_requests/2376

Signed-off-by: Robert Mader <robert.mader@posteo.de>
Signed-off-by: David Heidelberg <david.heidelberg@collabora.com>
---
 .../specs/EGL_MESA_x11_native_visual_id.txt   | 75 +++++++++++++++++++
 src/egl/drivers/dri2/egl_dri2.c               |  7 ++
 src/egl/main/eglglobals.c                     |  1 +
 3 files changed, 83 insertions(+)
 create mode 100644 docs/_static/specs/EGL_MESA_x11_native_visual_id.txt

diff --git a/docs/_static/specs/EGL_MESA_x11_native_visual_id.txt b/docs/_static/specs/EGL_MESA_x11_native_visual_id.txt
new file mode 100644
index 0000000000000..88ce3c4042064
--- /dev/null
+++ b/docs/_static/specs/EGL_MESA_x11_native_visual_id.txt
@@ -0,0 +1,75 @@
+Name
+
+    MESA_x11_native_visual_id
+
+Name Strings
+
+    EGL_MESA_x11_native_visual_id
+
+Contact
+
+    Eric Engestrom <eric@engestrom.ch>
+
+Status
+
+    Complete, shipping.
+
+Version
+
+    Version 2, March 28, 2024
+
+Number
+
+    EGL Extension #TBD
+
+Dependencies
+
+    None.  This extension is written against the
+    wording of the EGL 1.5 specification.
+
+Overview
+
+    This extension allows EGL_NATIVE_VISUAL_ID to be used in
+    eglChooseConfig() for a display of type EGL_PLATFORM_X11_EXT.
+
+IP Status
+
+    Open-source; freely implementable.
+
+New Types
+
+    None
+
+New Procedures and Functions
+
+    None
+
+New Tokens
+
+    None
+
+In section 3.4.1.1 "Selection of EGLConfigs" of the EGL 1.5
+Specification, replace:
+
+    If EGL_MAX_PBUFFER_WIDTH, EGL_MAX_PBUFFER_HEIGHT,
+    EGL_MAX_PBUFFER_PIXELS, or EGL_NATIVE_VISUAL_ID are specified in
+    attrib list, then they are ignored [...]
+
+with:
+
+    If EGL_MAX_PBUFFER_WIDTH, EGL_MAX_PBUFFER_HEIGHT,
+    or EGL_MAX_PBUFFER_PIXELS are specified in attrib list, then they
+    are ignored [...]. EGL_NATIVE_VISUAL_ID is ignored except on
+    a display of type EGL_PLATFORM_X11_EXT when EGL_ALPHA_SIZE is
+    greater than zero.
+
+Issues
+
+    None.
+
+Revision History
+
+    Version 1, March 27, 2024 (Eric Engestrom)
+        Initial draft
+    Version 2, March 28, 2024 (David Heidelberg)
+	add EGL_ALPHA_SIZE condition
diff --git a/src/egl/drivers/dri2/egl_dri2.c b/src/egl/drivers/dri2/egl_dri2.c
index 1533c4939d9e2..741bbbdcbb4df 100644
--- a/src/egl/drivers/dri2/egl_dri2.c
+++ b/src/egl/drivers/dri2/egl_dri2.c
@@ -288,6 +288,13 @@ dri2_get_dri_config(struct dri2_egl_config *conf, EGLint surface_type,
 static EGLBoolean
 dri2_match_config(const _EGLConfig *conf, const _EGLConfig *criteria)
 {
+#ifdef HAVE_X11_PLATFORM
+   if (conf->Display->Platform == _EGL_PLATFORM_X11 &&
+       conf->AlphaSize > 0 &&
+       conf->NativeVisualID != criteria->NativeVisualID)
+      return EGL_FALSE;
+#endif
+
    if (_eglCompareConfigs(conf, criteria, NULL, EGL_FALSE) != 0)
       return EGL_FALSE;
 
diff --git a/src/egl/main/eglglobals.c b/src/egl/main/eglglobals.c
index f0343a52364eb..cfbc1cd6b170e 100644
--- a/src/egl/main/eglglobals.c
+++ b/src/egl/main/eglglobals.c
@@ -93,6 +93,7 @@ struct _egl_global _eglGlobal = {
 #ifdef HAVE_X11_PLATFORM
       " EGL_EXT_platform_x11"
       " EGL_KHR_platform_x11"
+      " EGL_MESA_x11_native_visual_id"
 #endif
 #ifdef HAVE_XCB_PLATFORM
       " EGL_EXT_platform_xcb"
-- 
GitLab


From 0d7aeb475f735082178ba0f68b6823571c68a7f5 Mon Sep 17 00:00:00 2001
From: Robert Mader <robert.mader@posteo.de>
Date: Sat, 16 Oct 2021 17:16:46 +0200
Subject: [PATCH 4/5] egl/x11: Allow all RGB visuals to match 32-bit RGBA
 EGLConfigs

Drop the limitation to 24 or 30 bit configs. It was an abritrary
compromise to usually give apps what they wanted, but now we are about
to get a clean solution for alpha-blending on X11.

Based on a patch by Freya Gentz <zegentzy@protonmail.com>, see
https://gitlab.freedesktop.org/mesa/mesa/-/merge_requests/2376

Signed-off-by: Robert Mader <robert.mader@posteo.de>
Signed-off-by: David Heidelberg <david.heidelberg@collabora.com>
---
 src/egl/drivers/dri2/platform_x11.c | 6 +-----
 1 file changed, 1 insertion(+), 5 deletions(-)

diff --git a/src/egl/drivers/dri2/platform_x11.c b/src/egl/drivers/dri2/platform_x11.c
index 942f797b75d7f..c1bc51e46c248 100644
--- a/src/egl/drivers/dri2/platform_x11.c
+++ b/src/egl/drivers/dri2/platform_x11.c
@@ -843,8 +843,7 @@ dri2_x11_add_configs_for_visuals(struct dri2_egl_display *dri2_dpy,
                continue;
             }
 
-            /* Allow a 24-bit RGB visual to match a 32-bit RGBA EGLConfig.
-             * Ditto for 30-bit RGB visuals to match a 32-bit RGBA EGLConfig.
+            /* Allows RGB visuals to match a 32-bit RGBA EGLConfig.
              * Otherwise it will only match a 32-bit RGBA visual.  On a
              * composited window manager on X11, this will make all of the
              * EGLConfigs with destination alpha get blended by the
@@ -852,9 +851,6 @@ dri2_x11_add_configs_for_visuals(struct dri2_egl_display *dri2_dpy,
              * wants... especially on drivers that only have 32-bit RGBA
              * EGLConfigs! */
             if (sizes[3] != 0) {
-               if (d.data->depth != 24 && d.data->depth != 30)
-                  continue;
-
                unsigned int rgba_mask =
                   ~(visuals[i].red_mask | visuals[i].green_mask |
                     visuals[i].blue_mask);
-- 
GitLab


From 18ca26a4d37e8fc0c4a121795442c78ae8b38c8a Mon Sep 17 00:00:00 2001
From: David Heidelberg <david.heidelberg@collabora.com>
Date: Mon, 25 Mar 2024 10:58:00 +0100
Subject: [PATCH 5/5] mailmap: add Freya Gentz entry

Signed-off-by: David Heidelberg <david.heidelberg@collabora.com>
---
 .mailmap | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/.mailmap b/.mailmap
index 9f4f5d9fa5dca..e8cbdc0345d4e 100644
--- a/.mailmap
+++ b/.mailmap
@@ -246,6 +246,8 @@ Frank Binns <frank.binns@imgtec.com> <francisbinns@gmail.com>
 
 Frank Henigman <fjhenigman@google.com> <fjhenigman@chromium.org>
 
+Freya Gentz <zegentzy@protonmail.com>
+
 George Sapountzis <gsapountzis@gmail.com> George Sapountzis <gsap7@yahoo.gr>
 
 Gert Wollny <gert.wollny@collabora.com> <gw.fossdev@gmail.com>
-- 
GitLab

