From c02c2165ecdd95b55bdee2ae801e01efa07f3e85 Mon Sep 17 00:00:00 2001
From: Sviatoslav Peleshko <sviatoslav.peleshko@globallogic.com>
Date: Mon, 13 Nov 2023 13:40:10 +0200
Subject: [PATCH] nir/loop_analyze: Don't test non-positive iterations count

Testing negative iterations count makes no sense, and can cause issues
when the unsigned type is used.
Testing 0 iterations is already covered with
will_break_on_first_iteration, so it can be skipped too.

Fixes: 6772a17a ("nir: Add a loop analysis pass")
Closes: https://gitlab.freedesktop.org/mesa/mesa/-/issues/9913
Signed-off-by: Sviatoslav Peleshko <sviatoslav.peleshko@globallogic.com>
Reviewed-by: Ian Romanick <ian.d.romanick@intel.com>
---
 src/compiler/nir/nir_loop_analyze.c           |  4 +++-
 src/compiler/nir/tests/loop_analyze_tests.cpp | 11 +++++++++++
 2 files changed, 14 insertions(+), 1 deletion(-)

diff --git a/src/compiler/nir/nir_loop_analyze.c b/src/compiler/nir/nir_loop_analyze.c
index 4c39de9d949dc..155e1cc5ca9a6 100644
--- a/src/compiler/nir/nir_loop_analyze.c
+++ b/src/compiler/nir/nir_loop_analyze.c
@@ -1134,11 +1134,13 @@ calculate_iterations(nir_def *basis, nir_def *limit_basis,
     */
    for (int bias = -1; bias <= 1; bias++) {
       const int iter_bias = iter_int + bias;
+      if (iter_bias < 1)
+         continue;
 
       if (test_iterations(iter_bias, step, limit, alu_op, bit_size,
                           induction_base_type, initial,
                           limit_rhs, invert_cond, execution_mode)) {
-         return iter_bias > 0 ? iter_bias - trip_offset : iter_bias;
+         return iter_bias - trip_offset;
       }
    }
 
diff --git a/src/compiler/nir/tests/loop_analyze_tests.cpp b/src/compiler/nir/tests/loop_analyze_tests.cpp
index f7c3c41d75093..a530b7f226c17 100644
--- a/src/compiler/nir/tests/loop_analyze_tests.cpp
+++ b/src/compiler/nir/tests/loop_analyze_tests.cpp
@@ -285,6 +285,7 @@ COMPARE_REVERSE(ishl)
 
 INOT_COMPARE(ilt_rev)
 INOT_COMPARE(ine)
+INOT_COMPARE(uge_rev)
 
 #define KNOWN_COUNT_TEST(_init_value, _cond_value, _incr_value, cond, incr, count) \
    TEST_F(nir_loop_analyze_test, incr ## _ ## cond ## _known_count_ ## count)    \
@@ -567,6 +568,16 @@ KNOWN_COUNT_TEST_INVERT(0x00000000, 0x00000001, 0x00000006, ige, iadd, 5)
  */
 KNOWN_COUNT_TEST(0x0000000a, 0x00000005, 0xffffffff, inot_ilt_rev, iadd, 5)
 
+/*    uint i = 0;
+ *    while (true) {
+ *       if (!(0 >= i))
+ *          break;
+ *
+ *       i += 1;
+ *    }
+ */
+KNOWN_COUNT_TEST(0x00000000, 0x00000000, 0x00000001, inot_uge_rev, iadd, 1)
+
 /*    uint i = 0;
  *    while (true) {
  *       if (i != 0)
-- 
GitLab

