From 11ae2ba650e011ecfbed275180ec46764041929d Mon Sep 17 00:00:00 2001
From: Rhys Perry <pendingchaos02@gmail.com>
Date: Thu, 20 Oct 2022 14:54:18 +0100
Subject: [PATCH] radv/llvm: add clip distance outputs manually if they're
 missing

It's possible that undef is written to clip/cull distance outputs and
they're eliminated, and we never set any position export to done=1 because
outinfo->pos_exports was calculated with the expectation that clip/cull is
exported.

Eliminating the export and fixing the done=1 bit hangs because the
hardware is still expecting clip/cull distances.

Fixes dEQP-VK.rasterization.provoking_vertex.transform_feedback.first.line_list
hang with LLVM.

Signed-off-by: Rhys Perry <pendingchaos02@gmail.com>
---
 src/amd/vulkan/radv_nir_to_llvm.c | 17 +++++++++++++++++
 1 file changed, 17 insertions(+)

diff --git a/src/amd/vulkan/radv_nir_to_llvm.c b/src/amd/vulkan/radv_nir_to_llvm.c
index 08da30def76a..acf6aa5fd126 100644
--- a/src/amd/vulkan/radv_nir_to_llvm.c
+++ b/src/amd/vulkan/radv_nir_to_llvm.c
@@ -953,6 +953,23 @@ radv_llvm_export_vs(struct radv_shader_context *ctx, struct radv_shader_output_v
       }
    }
 
+   /* Add clip distance outputs manually if they're missing. */
+   uint8_t clip_cull_mask = outinfo->clip_dist_mask | outinfo->cull_dist_mask;
+   for (i = 2; i < 4; i++) {
+      uint8_t mask = 0xf << (i * 4 - 8);
+      if ((clip_cull_mask & mask) && !pos_args[i].out[0]) {
+         pos_args[i].enabled_channels = 0x0;
+         pos_args[i].valid_mask = 0;
+         pos_args[i].done = 0;
+         pos_args[i].target = V_008DFC_SQ_EXP_POS + i;
+         pos_args[i].compr = 0;
+         pos_args[i].out[0] = ctx->ac.f32_0;
+         pos_args[i].out[1] = ctx->ac.f32_0;
+         pos_args[i].out[2] = ctx->ac.f32_0;
+         pos_args[i].out[3] = ctx->ac.f32_0;
+      }
+   }
+
    /* GFX10 skip POS0 exports if EXEC=0 and DONE=0, causing a hang.
     * Setting valid_mask=1 prevents it and has no other effect.
     */
-- 
GitLab

