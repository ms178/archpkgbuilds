From 9184755b016da68bff5bce68eb362a5fd8d3eeb3 Mon Sep 17 00:00:00 2001
From: Giancarlo Devich <giancarlodevich@live.com>
Date: Mon, 17 Oct 2022 13:17:19 -0700
Subject: [PATCH 1/2] gallium/pipe: Align allocation size in
 `pb_cache_manager_create_buffer`

Some drivers have minimum buffer size or alignment requirements. When a
buffer is created using pb_cache_manager_create_buffer, the cache is
first checked for a compatible buffer to return instead. If the
requested buffer size is less than
(minimum buffer size) / (mgr->size_factor), no buffer in the cache
is _ever_ applicable.
The alignment is used to determine the true allocation size when
evaluating against cached buffers.
---
 src/gallium/auxiliary/pipebuffer/pb_bufmgr_cache.c | 10 ++++++----
 1 file changed, 6 insertions(+), 4 deletions(-)

diff --git a/src/gallium/auxiliary/pipebuffer/pb_bufmgr_cache.c b/src/gallium/auxiliary/pipebuffer/pb_bufmgr_cache.c
index d48f79c23b13..60aaa2dd300d 100644
--- a/src/gallium/auxiliary/pipebuffer/pb_bufmgr_cache.c
+++ b/src/gallium/auxiliary/pipebuffer/pb_bufmgr_cache.c
@@ -206,9 +206,11 @@ pb_cache_manager_create_buffer(struct pb_manager *_mgr,
    struct pb_cache_manager *mgr = pb_cache_manager(_mgr);
    struct pb_cache_buffer *buf;
 
+   pb_size aligned_size = align64(size, desc->alignment);
+
    /* get a buffer from the cache */
    buf = (struct pb_cache_buffer *)
-         pb_cache_reclaim_buffer(&mgr->cache, size, desc->alignment,
+         pb_cache_reclaim_buffer(&mgr->cache, aligned_size, desc->alignment,
                                  desc->usage, 0);
    if (buf)
       return &buf->base;
@@ -218,12 +220,12 @@ pb_cache_manager_create_buffer(struct pb_manager *_mgr,
    if (!buf)
       return NULL;
    
-   buf->buffer = mgr->provider->create_buffer(mgr->provider, size, desc);
+   buf->buffer = mgr->provider->create_buffer(mgr->provider, aligned_size, desc);
 
    /* Empty the cache and try again. */
    if (!buf->buffer) {
       pb_cache_release_all_buffers(&mgr->cache);
-      buf->buffer = mgr->provider->create_buffer(mgr->provider, size, desc);
+      buf->buffer = mgr->provider->create_buffer(mgr->provider, aligned_size, desc);
    }
 
    if(!buf->buffer) {
@@ -233,7 +235,7 @@ pb_cache_manager_create_buffer(struct pb_manager *_mgr,
    
    assert(pipe_is_referenced(&buf->buffer->reference));
    assert(pb_check_alignment(desc->alignment, 1u << buf->buffer->alignment_log2));
-   assert(buf->buffer->size >= size);
+   assert(buf->buffer->size >= aligned_size);
    
    pipe_reference_init(&buf->base.reference, 1);
    buf->base.alignment_log2 = buf->buffer->alignment_log2;
-- 
GitLab


From e53f9c2472afdf45a6c80c447a0fd73c715446b6 Mon Sep 17 00:00:00 2001
From: Giancarlo Devich <giancarlodevich@live.com>
Date: Mon, 17 Oct 2022 13:24:14 -0700
Subject: [PATCH 2/2] d3d12: Don't align already-aligned size in
 `d3d12_bufmgr_create_buffer`

This is handled by `pb_cache_manager_create_buffer`.
---
 src/gallium/drivers/d3d12/d3d12_bufmgr.cpp | 4 ----
 1 file changed, 4 deletions(-)

diff --git a/src/gallium/drivers/d3d12/d3d12_bufmgr.cpp b/src/gallium/drivers/d3d12/d3d12_bufmgr.cpp
index 8d009305474c..658ce15ed3b3 100644
--- a/src/gallium/drivers/d3d12/d3d12_bufmgr.cpp
+++ b/src/gallium/drivers/d3d12/d3d12_bufmgr.cpp
@@ -321,10 +321,6 @@ d3d12_bufmgr_create_buffer(struct pb_manager *pmgr,
    if (!buf)
       return NULL;
 
-   // Align the buffer to D3D12_CONSTANT_BUFFER_DATA_PLACEMENT_ALIGNMENT
-   // in case it is to be used as a CBV.
-   size = align64(size, D3D12_CONSTANT_BUFFER_DATA_PLACEMENT_ALIGNMENT);
-
    pipe_reference_init(&buf->base.reference, 1);
    buf->base.alignment_log2 = util_logbase2(pb_desc->alignment);
    buf->base.usage = pb_desc->usage;
-- 
GitLab

