From a1697c4fb17dfaaec51211d4f38c689fd4fa661a Mon Sep 17 00:00:00 2001
From: Samuel Pitoiset <samuel.pitoiset@gmail.com>
Date: Fri, 9 Sep 2022 10:34:22 +0200
Subject: [PATCH] aco: fix PS epilogs since MRTs are compacted

Use consecutive MRTs arguments now.

Signed-off-by: Samuel Pitoiset <samuel.pitoiset@gmail.com>
---
 src/amd/compiler/aco_instruction_selection.cpp | 7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)

diff --git a/src/amd/compiler/aco_instruction_selection.cpp b/src/amd/compiler/aco_instruction_selection.cpp
index 8904b21f7d56..69074da96ba5 100644
--- a/src/amd/compiler/aco_instruction_selection.cpp
+++ b/src/amd/compiler/aco_instruction_selection.cpp
@@ -11251,6 +11251,7 @@ create_fs_jump_to_epilog(isel_context* ctx)
 {
    Builder bld(ctx->program, ctx->block);
    std::vector<Operand> color_exports;
+   unsigned compacted_mrt_index = 0;
    PhysReg exports_start(256); /* VGPR 0 */
 
    for (unsigned slot = FRAG_RESULT_DATA0; slot < FRAG_RESULT_DATA7 + 1; ++slot) {
@@ -11261,7 +11262,7 @@ create_fs_jump_to_epilog(isel_context* ctx)
       if (!write_mask)
          continue;
 
-      PhysReg color_start(exports_start.reg() + color_index * 4);
+      PhysReg color_start(exports_start.reg() + compacted_mrt_index * 4);
 
       for (unsigned i = 0; i < 4; i++) {
          if (!(write_mask & BITFIELD_BIT(i))) {
@@ -11283,6 +11284,8 @@ create_fs_jump_to_epilog(isel_context* ctx)
          chan.setFixed(chan_reg);
          color_exports.emplace_back(chan);
       }
+
+      compacted_mrt_index++;
    }
 
    Temp continue_pc = convert_pointer_to_64_bit(ctx, get_arg(ctx, ctx->args->ps_epilog_pc));
@@ -12472,7 +12475,7 @@ select_ps_epilog(Program* program, const struct aco_ps_epilog_key* key, ac_shade
       out.is_int10 = (key->color_is_int10 >> i) & 1;
       out.enable_mrt_output_nan_fixup = (key->enable_mrt_output_nan_fixup >> i) & 1;
 
-      Temp inputs = get_arg(&ctx, ctx.args->ps_epilog_inputs[i]);
+      Temp inputs = get_arg(&ctx, ctx.args->ps_epilog_inputs[out.slot]);
       for (unsigned c = 0; c < 4; ++c) {
          out.values[c] = Operand(emit_extract_vector(&ctx, inputs, c, v1));
       }
-- 
GitLab

