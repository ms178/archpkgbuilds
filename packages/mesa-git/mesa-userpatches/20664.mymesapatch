From 855cf53ebcd748a153051aa9bf7f7a657c588c31 Mon Sep 17 00:00:00 2001
From: Kenneth Graunke <kenneth@whitecape.org>
Date: Thu, 12 Jan 2023 01:06:19 -0800
Subject: [PATCH] Revert "egl/x11: implement ANGLE_sync_control_rate"

This reverts commit 47526556494f18cd2c02f978bccac7e2ba73adcd.

There are several problems with the implementation:

1. RRGetScreenInfo will try to re-probe the connector status, which
   can cause an EDID transfer for every output, which may be ~100ms
   for a single EDID block, according to Adam Jackson.  This makes
   what ought to be a quick "what's the refresh rate?" question turn
   into a giant blocking operation.

   This resulted in a ~75% slowdown in WebGL performance in Chromium
   on some systems.

2. It didn't handle multi-monitor scenarios correctly.  The spec says,

   "For a multi-monitor system, the monitor used to determine MSC is the
    one where the surface is located.  If the surface spans multiple
    monitors, the monitor used to determine MSC is the one with the
    biggest coverage in pixels."

   But the merged implementation would always return one monitor's
   refresh rate.  To test this, I connected two monitors at 60 FPS
   and 30 FPS, and moved a Chromium window between them.  It always
   returned 60 FPS no matter what.

I don't often like retracting features but this one seems to need a
substantial rewrite to be non-regressing, and even more work to fix
the reported timings for multi-monitor.  We should just revert it and
try again in future patches.

Closes: https://gitlab.freedesktop.org/mesa/mesa/-/issues/6996
References: https://gitlab.freedesktop.org/mesa/mesa/-/issues/2930
Reviewed-by: Adam Jackson <ajax@redhat.com>
---
 meson.build                              |  1 -
 src/egl/drivers/dri2/egl_dri2.c          | 11 ---------
 src/egl/drivers/dri2/egl_dri2.h          |  5 ----
 src/egl/drivers/dri2/platform_x11.c      | 31 ------------------------
 src/egl/drivers/dri2/platform_x11.h      |  4 ---
 src/egl/drivers/dri2/platform_x11_dri3.c |  1 -
 src/egl/meson.build                      |  2 +-
 7 files changed, 1 insertion(+), 54 deletions(-)

diff --git a/meson.build b/meson.build
index beb5c6f0c234..9d172e92cac2 100644
--- a/meson.build
+++ b/meson.build
@@ -2170,7 +2170,6 @@ if with_platform_x11
     dep_x11 = dependency('x11')
     dep_xext = dependency('xext')
     dep_xcb = dependency('xcb')
-    dep_xcb_xrandr = dependency('xcb-randr')
   elif with_glx == 'dri'
     dep_x11 = dependency('x11')
     dep_xext = dependency('xext')
diff --git a/src/egl/drivers/dri2/egl_dri2.c b/src/egl/drivers/dri2/egl_dri2.c
index 6fbb001964df..bfb8d148077a 100644
--- a/src/egl/drivers/dri2/egl_dri2.c
+++ b/src/egl/drivers/dri2/egl_dri2.c
@@ -2239,16 +2239,6 @@ dri2_get_sync_values_chromium(_EGLDisplay *disp, _EGLSurface *surf,
    return ret;
 }
 
-static EGLBoolean
-dri2_get_msc_rate_angle(_EGLDisplay *disp, _EGLSurface *surf,
-                        EGLint *numerator, EGLint *denominator)
-{
-   struct dri2_egl_display *dri2_dpy = dri2_egl_display(disp);
-   if (!dri2_dpy->vtbl->get_msc_rate)
-      return EGL_FALSE;
-   return dri2_dpy->vtbl->get_msc_rate(disp, surf, numerator, denominator);
-}
-
 /**
  * Set the error code after a call to
  * dri2_egl_image::dri_image::createImageFromTexture.
@@ -3672,7 +3662,6 @@ const _EGLDriver _eglDriver = {
    .QueryWaylandBufferWL = dri2_query_wayland_buffer_wl,
 #endif
    .GetSyncValuesCHROMIUM = dri2_get_sync_values_chromium,
-   .GetMscRateANGLE = dri2_get_msc_rate_angle,
    .CreateSyncKHR = dri2_create_sync,
    .ClientWaitSyncKHR = dri2_client_wait_sync,
    .SignalSyncKHR = dri2_signal_sync,
diff --git a/src/egl/drivers/dri2/egl_dri2.h b/src/egl/drivers/dri2/egl_dri2.h
index 588803cd3e77..f1c5c205b07c 100644
--- a/src/egl/drivers/dri2/egl_dri2.h
+++ b/src/egl/drivers/dri2/egl_dri2.h
@@ -34,7 +34,6 @@
 #ifdef HAVE_X11_PLATFORM
 #include <xcb/xcb.h>
 #include <xcb/dri2.h>
-#include <xcb/randr.h>
 #include <xcb/xfixes.h>
 #include <X11/Xlib-xcb.h>
 
@@ -162,10 +161,6 @@ struct dri2_egl_display_vtbl {
                                  EGLuint64KHR *ust, EGLuint64KHR *msc,
                                  EGLuint64KHR *sbc);
 
-   /* optional */
-   EGLBoolean (*get_msc_rate)(_EGLDisplay *display, _EGLSurface *surface,
-                              EGLint *numerator, EGLint *denominator);
-
    /* mandatory */
    __DRIdrawable *(*get_dri_drawable)(_EGLSurface *surf);
 
diff --git a/src/egl/drivers/dri2/platform_x11.c b/src/egl/drivers/dri2/platform_x11.c
index 6e050c0928f6..1982f1be29df 100644
--- a/src/egl/drivers/dri2/platform_x11.c
+++ b/src/egl/drivers/dri2/platform_x11.c
@@ -1192,27 +1192,6 @@ dri2_x11_get_sync_values(_EGLDisplay *display, _EGLSurface *surface,
    return EGL_TRUE;
 }
 
-EGLBoolean
-dri2_x11_get_msc_rate(_EGLDisplay *display, _EGLSurface *surface,
-                      EGLint *numerator, EGLint *denominator)
-{
-   struct dri2_egl_display *dri2_dpy = dri2_egl_display(display);
-   xcb_randr_get_screen_info_cookie_t cookie;
-   xcb_randr_get_screen_info_reply_t *reply;
-
-   cookie = xcb_randr_get_screen_info_unchecked(dri2_dpy->conn, dri2_dpy->screen->root);
-   reply = xcb_randr_get_screen_info_reply(dri2_dpy->conn, cookie, NULL);
-
-   if (!reply)
-      return _eglError(EGL_BAD_ACCESS, "eglGetMscRateANGLE");
-
-   *numerator = reply->rate;
-   *denominator = 1;
-   free(reply);
-
-   return EGL_TRUE;
-}
-
 static EGLBoolean
 dri2_kopper_swap_interval(_EGLDisplay *disp, _EGLSurface *surf, EGLint interval)
 {
@@ -1275,7 +1254,6 @@ static const struct dri2_egl_display_vtbl dri2_x11_swrast_display_vtbl = {
    .copy_buffers = dri2_x11_copy_buffers,
    /* XXX: should really implement this since X11 has pixmaps */
    .query_surface = dri2_query_surface,
-   .get_msc_rate = dri2_x11_get_msc_rate,
    .get_dri_drawable = dri2_surface_get_dri_drawable,
 };
 
@@ -1294,7 +1272,6 @@ static const struct dri2_egl_display_vtbl dri2_x11_kopper_display_vtbl = {
    .query_buffer_age = dri2_kopper_query_buffer_age,
    /* XXX: should really implement this since X11 has pixmaps */
    .query_surface = dri2_query_surface,
-   .get_msc_rate = dri2_x11_get_msc_rate,
    .get_dri_drawable = dri2_surface_get_dri_drawable,
 };
 
@@ -1312,7 +1289,6 @@ static const struct dri2_egl_display_vtbl dri2_x11_display_vtbl = {
    .copy_buffers = dri2_x11_copy_buffers,
    .query_surface = dri2_query_surface,
    .get_sync_values = dri2_x11_get_sync_values,
-   .get_msc_rate = dri2_x11_get_msc_rate,
    .get_dri_drawable = dri2_surface_get_dri_drawable,
 };
 
@@ -1482,7 +1458,6 @@ dri2_initialize_x11_swrast(_EGLDisplay *disp)
    dri2_setup_screen(disp);
 
    if (disp->Options.Zink) {
-      /* kopper */
 #ifdef HAVE_WAYLAND_PLATFORM
       dri2_dpy->device_name = strdup("zink");
 #endif
@@ -1492,14 +1467,10 @@ dri2_initialize_x11_swrast(_EGLDisplay *disp)
          disp->Extensions.KHR_image_pixmap = EGL_TRUE;
       disp->Extensions.NOK_texture_from_pixmap = EGL_TRUE;
       disp->Extensions.CHROMIUM_sync_control = EGL_TRUE;
-      disp->Extensions.ANGLE_sync_control_rate = EGL_TRUE;
       disp->Extensions.EXT_buffer_age = EGL_TRUE;
       disp->Extensions.EXT_swap_buffers_with_damage = EGL_TRUE;
 
       //dri2_set_WL_bind_wayland_display(disp);
-   } else {
-      /* swrast */
-      disp->Extensions.ANGLE_sync_control_rate = EGL_TRUE;
    }
 
    if (!dri2_x11_add_configs_for_visuals(dri2_dpy, disp, !disp->Options.Zink))
@@ -1577,7 +1548,6 @@ dri2_initialize_x11_dri3(_EGLDisplay *disp)
       disp->Extensions.KHR_image_pixmap = EGL_TRUE;
    disp->Extensions.NOK_texture_from_pixmap = EGL_TRUE;
    disp->Extensions.CHROMIUM_sync_control = EGL_TRUE;
-   disp->Extensions.ANGLE_sync_control_rate = EGL_TRUE;
    disp->Extensions.EXT_buffer_age = EGL_TRUE;
    disp->Extensions.EXT_swap_buffers_with_damage = EGL_TRUE;
 
@@ -1690,7 +1660,6 @@ dri2_initialize_x11_dri2(_EGLDisplay *disp)
    disp->Extensions.NOK_texture_from_pixmap = EGL_TRUE;
    disp->Extensions.NV_post_sub_buffer = EGL_TRUE;
    disp->Extensions.CHROMIUM_sync_control = EGL_TRUE;
-   disp->Extensions.ANGLE_sync_control_rate = EGL_TRUE;
 
    dri2_set_WL_bind_wayland_display(disp);
 
diff --git a/src/egl/drivers/dri2/platform_x11.h b/src/egl/drivers/dri2/platform_x11.h
index 1882922ec7ee..b54781daa38f 100644
--- a/src/egl/drivers/dri2/platform_x11.h
+++ b/src/egl/drivers/dri2/platform_x11.h
@@ -12,8 +12,4 @@
 uint32_t
 dri2_format_for_depth(struct dri2_egl_display *dri2_dpy, uint32_t depth);
 
-EGLBoolean
-dri2_x11_get_msc_rate(_EGLDisplay *display, _EGLSurface *surface,
-                      EGLint *numerator, EGLint *denominator);
-
 #endif
diff --git a/src/egl/drivers/dri2/platform_x11_dri3.c b/src/egl/drivers/dri2/platform_x11_dri3.c
index e2deabc374ab..48b5664a7afb 100644
--- a/src/egl/drivers/dri2/platform_x11_dri3.c
+++ b/src/egl/drivers/dri2/platform_x11_dri3.c
@@ -526,7 +526,6 @@ struct dri2_egl_display_vtbl dri3_x11_display_vtbl = {
    .query_buffer_age = dri3_query_buffer_age,
    .query_surface = dri3_query_surface,
    .get_sync_values = dri3_get_sync_values,
-   .get_msc_rate = dri2_x11_get_msc_rate,
    .get_dri_drawable = dri3_get_dri_drawable,
    .close_screen_notify = dri3_close_screen_notify,
 };
diff --git a/src/egl/meson.build b/src/egl/meson.build
index 6aeb42f48b97..0a957d17572d 100644
--- a/src/egl/meson.build
+++ b/src/egl/meson.build
@@ -112,7 +112,7 @@ if with_dri2
       files_egl += files('drivers/dri2/platform_x11_dri3.c')
       link_for_egl += libloader_dri3_helper
     endif
-    deps_for_egl += [dep_x11_xcb, dep_xcb_dri2, dep_xcb_xrandr, dep_xcb_xfixes]
+    deps_for_egl += [dep_x11_xcb, dep_xcb_dri2, dep_xcb_xfixes]
   endif
   if with_gbm and not with_platform_android
     files_egl += files('drivers/dri2/platform_drm.c')
-- 
GitLab

