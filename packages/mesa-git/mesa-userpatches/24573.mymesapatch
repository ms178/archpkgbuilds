From a96db1299ece76012e21a3d063652da243a77596 Mon Sep 17 00:00:00 2001
From: Sylvain Munaut <tnt@246tNt.com>
Date: Tue, 8 Aug 2023 11:20:58 +0200
Subject: [PATCH 1/7] include: Fix the PFN declarations to be pointers as they
 should

Broken by b5f9820d905a275bc01bbffa9b4927ec11286f8d back in 2016.

Signed-off-by: Sylvain Munaut <tnt@246tNt.com>
---
 include/GL/mesa_glinterop.h | 48 ++++++++++++++++++-------------------
 1 file changed, 24 insertions(+), 24 deletions(-)

diff --git a/include/GL/mesa_glinterop.h b/include/GL/mesa_glinterop.h
index 385c65af6f0f6..886448f63a274 100644
--- a/include/GL/mesa_glinterop.h
+++ b/include/GL/mesa_glinterop.h
@@ -372,30 +372,30 @@ wglMesaGLInteropFlushObjects(HDC dpy, HGLRC context,
                              GLsync *sync);
 
 
-typedef int (PFNMESAGLINTEROPGLXQUERYDEVICEINFOPROC)(struct _XDisplay *dpy, struct __GLXcontextRec *context,
-                                                     struct mesa_glinterop_device_info *out);
-typedef int (PFNMESAGLINTEROPEGLQUERYDEVICEINFOPROC)(EGLDisplay dpy, EGLContext context,
-                                                     struct mesa_glinterop_device_info *out);
-typedef int (PFNWGLMESAGLINTEROPQUERYDEVICEINFOPROC)(HDC dpy, HGLRC context,
-                                                     struct mesa_glinterop_device_info *out);
-typedef int (PFNMESAGLINTEROPGLXEXPORTOBJECTPROC)(struct _XDisplay *dpy, struct __GLXcontextRec *context,
-                                                  struct mesa_glinterop_export_in *in,
-                                                  struct mesa_glinterop_export_out *out);
-typedef int (PFNMESAGLINTEROPEGLEXPORTOBJECTPROC)(EGLDisplay dpy, EGLContext context,
-                                                  struct mesa_glinterop_export_in *in,
-                                                  struct mesa_glinterop_export_out *out);
-typedef int (PFNWGLMESAGLINTEROPEXPORTOBJECTPROC)(HDC dpy, HGLRC context,
-                                                  struct mesa_glinterop_export_in *in,
-                                                  struct mesa_glinterop_export_out *out);
-typedef int (PFNMESAGLINTEROPGLXFLUSHOBJECTSPROC)(struct _XDisplay *dpy, struct __GLXcontextRec *context,
-                                                  unsigned count, struct mesa_glinterop_export_in *resources,
-                                                  GLsync *sync);
-typedef int (PFNMESAGLINTEROPEGLFLUSHOBJECTSPROC)(EGLDisplay dpy, EGLContext context,
-                                                  unsigned count, struct mesa_glinterop_export_in *resources,
-                                                  GLsync *sync);
-typedef int (PFNWGLMESAGLINTEROPFLUSHOBJECTSPROC)(HDC dpy, HGLRC context,
-                                                  unsigned count, struct mesa_glinterop_export_in *resources,
-                                                  GLsync *sync);
+typedef int (*PFNMESAGLINTEROPGLXQUERYDEVICEINFOPROC)(struct _XDisplay *dpy, struct __GLXcontextRec *context,
+                                                      struct mesa_glinterop_device_info *out);
+typedef int (*PFNMESAGLINTEROPEGLQUERYDEVICEINFOPROC)(EGLDisplay dpy, EGLContext context,
+                                                      struct mesa_glinterop_device_info *out);
+typedef int (*PFNWGLMESAGLINTEROPQUERYDEVICEINFOPROC)(HDC dpy, HGLRC context,
+                                                      struct mesa_glinterop_device_info *out);
+typedef int (*PFNMESAGLINTEROPGLXEXPORTOBJECTPROC)(struct _XDisplay *dpy, struct __GLXcontextRec *context,
+                                                   struct mesa_glinterop_export_in *in,
+                                                   struct mesa_glinterop_export_out *out);
+typedef int (*PFNMESAGLINTEROPEGLEXPORTOBJECTPROC)(EGLDisplay dpy, EGLContext context,
+                                                   struct mesa_glinterop_export_in *in,
+                                                   struct mesa_glinterop_export_out *out);
+typedef int (*PFNWGLMESAGLINTEROPEXPORTOBJECTPROC)(HDC dpy, HGLRC context,
+                                                   struct mesa_glinterop_export_in *in,
+                                                   struct mesa_glinterop_export_out *out);
+typedef int (*PFNMESAGLINTEROPGLXFLUSHOBJECTSPROC)(struct _XDisplay *dpy, struct __GLXcontextRec *context,
+                                                   unsigned count, struct mesa_glinterop_export_in *resources,
+                                                   GLsync *sync);
+typedef int (*PFNMESAGLINTEROPEGLFLUSHOBJECTSPROC)(EGLDisplay dpy, EGLContext context,
+                                                   unsigned count, struct mesa_glinterop_export_in *resources,
+                                                   GLsync *sync);
+typedef int (*PFNWGLMESAGLINTEROPFLUSHOBJECTSPROC)(HDC dpy, HGLRC context,
+                                                   unsigned count, struct mesa_glinterop_export_in *resources,
+                                                   GLsync *sync);
 
 #ifdef __cplusplus
 }
-- 
GitLab


From 6852d2f897eadc2a26c1365fc386aaa9286f80f2 Mon Sep 17 00:00:00 2001
From: Sylvain Munaut <tnt@246tNt.com>
Date: Wed, 9 Aug 2023 12:57:49 +0200
Subject: [PATCH 2/7] glx: Add missing MesaGLInteropGLXFlushObjects

All the plumbing was added in 8d55fb54b15381d7fa950f448e5c67d0556088db
but for some reason the top level access method was not ...

Signed-off-by: Sylvain Munaut <tnt@246tNt.com>
---
 src/glx/glxcmds.c | 26 ++++++++++++++++++++++++++
 1 file changed, 26 insertions(+)

diff --git a/src/glx/glxcmds.c b/src/glx/glxcmds.c
index 21537b7e6ff5d..293ac742c9231 100644
--- a/src/glx/glxcmds.c
+++ b/src/glx/glxcmds.c
@@ -2449,4 +2449,30 @@ MesaGLInteropGLXExportObject(Display *dpy, GLXContext context,
    return ret;
 }
 
+PUBLIC int
+MesaGLInteropGLXFlushObjects(Display *dpy, GLXContext context,
+                             unsigned count,
+                             struct mesa_glinterop_export_in *resources,
+                             GLsync *sync)
+{
+   struct glx_context *gc = (struct glx_context*)context;
+   int ret;
+
+   __glXLock();
+
+   if (!gc || gc->xid == None || !gc->isDirect) {
+      __glXUnlock();
+      return MESA_GLINTEROP_INVALID_CONTEXT;
+   }
+
+   if (!gc->vtable->interop_flush_objects) {
+      __glXUnlock();
+      return MESA_GLINTEROP_UNSUPPORTED;
+   }
+
+   ret = gc->vtable->interop_flush_objects(gc, count, resources, sync);
+   __glXUnlock();
+   return ret;
+}
+
 #endif /* defined(GLX_DIRECT_RENDERING) && !defined(GLX_USE_APPLEGL) */
-- 
GitLab


From e98a0c50af7dad67d98d012f32c13f91d710a0fb Mon Sep 17 00:00:00 2001
From: Sylvain Munaut <tnt@246tNt.com>
Date: Tue, 8 Aug 2023 02:03:01 +0200
Subject: [PATCH 3/7] glx: Export the MESA GL Interop functions through
 glXGetProcAddress

Signed-off-by: Sylvain Munaut <tnt@246tNt.com>
---
 src/glx/g_glxglvnddispatchfuncs.c   | 65 +++++++++++++++++++++++++++++
 src/glx/g_glxglvnddispatchindices.h |  3 ++
 src/glx/glxcmds.c                   |  7 ++++
 3 files changed, 75 insertions(+)

diff --git a/src/glx/g_glxglvnddispatchfuncs.c b/src/glx/g_glxglvnddispatchfuncs.c
index c2defc77d3d46..bafe41cc3373d 100644
--- a/src/glx/g_glxglvnddispatchfuncs.c
+++ b/src/glx/g_glxglvnddispatchfuncs.c
@@ -5,6 +5,8 @@
 #include "glxglvnddispatchfuncs.h"
 #include "g_glxglvnddispatchindices.h"
 
+#include "GL/mesa_glinterop.h"
+
 const int DI_FUNCTION_COUNT = DI_LAST_INDEX;
 /* Allocate an extra 'dummy' to ease lookup. See FindGLXFunction() */
 int __glXDispatchTableIndices[DI_LAST_INDEX + 1];
@@ -39,6 +41,9 @@ const char * const __glXDispatchTableStrings[DI_LAST_INDEX] = {
     // glXDestroyPixmap implemented by libglvnd
     // glXDestroyWindow implemented by libglvnd
     // glXFreeContextEXT implemented by libglvnd
+    __ATTRIB(GLInteropExportObjectMESA),
+    __ATTRIB(GLInteropFlushObjectsMESA),
+    __ATTRIB(GLInteropQueryDeviceInfoMESA),
     // glXGetClientString implemented by libglvnd
     // glXGetConfig implemented by libglvnd
     __ATTRIB(GetContextIDEXT),
@@ -306,6 +311,63 @@ static void dispatch_DestroyGLXPbufferSGIX(Display *dpy, GLXPbuffer pbuf)
 
 
 
+static int dispatch_GLInteropExportObjectMESA(Display *dpy, GLXContext ctx,
+                                              struct mesa_glinterop_export_in *in,
+                                              struct mesa_glinterop_export_out *out)
+{
+    PFNMESAGLINTEROPGLXEXPORTOBJECTPROC pGLInteropExportObjectMESA;
+    __GLXvendorInfo *dd;
+
+    dd = GetDispatchFromContext(ctx);
+    if (dd == NULL)
+        return 0;
+
+    __FETCH_FUNCTION_PTR(GLInteropExportObjectMESA);
+    if (pGLInteropExportObjectMESA == NULL)
+        return 0;
+
+    return pGLInteropExportObjectMESA(dpy, ctx, in, out);
+}
+
+
+static int dispatch_GLInteropFlushObjectsMESA(Display *dpy, GLXContext ctx,
+                                              unsigned count,
+                                              struct mesa_glinterop_export_in *resources,
+                                              GLsync *sync)
+{
+    PFNMESAGLINTEROPGLXFLUSHOBJECTSPROC pGLInteropFlushObjectsMESA;
+    __GLXvendorInfo *dd;
+
+    dd = GetDispatchFromContext(ctx);
+    if (dd == NULL)
+        return 0;
+
+    __FETCH_FUNCTION_PTR(GLInteropFlushObjectsMESA);
+    if (pGLInteropFlushObjectsMESA == NULL)
+        return 0;
+
+    return pGLInteropFlushObjectsMESA(dpy, ctx, count, resources, sync);
+}
+
+
+static int dispatch_GLInteropQueryDeviceInfoMESA(Display *dpy, GLXContext ctx,
+                                                 struct mesa_glinterop_device_info *out)
+{
+    PFNMESAGLINTEROPGLXQUERYDEVICEINFOPROC pGLInteropQueryDeviceInfoMESA;
+    __GLXvendorInfo *dd;
+
+    dd = GetDispatchFromContext(ctx);
+    if (dd == NULL)
+        return 0;
+
+    __FETCH_FUNCTION_PTR(GLInteropQueryDeviceInfoMESA);
+    if (pGLInteropQueryDeviceInfoMESA == NULL)
+        return 0;
+
+    return pGLInteropQueryDeviceInfoMESA(dpy, ctx, out);
+}
+
+
 static GLXContextID dispatch_GetContextIDEXT(const GLXContext ctx)
 {
     PFNGLXGETCONTEXTIDEXTPROC pGetContextIDEXT;
@@ -981,6 +1043,9 @@ const void * const __glXDispatchFunctions[DI_LAST_INDEX + 1] = {
     __ATTRIB(CreateGLXPixmapMESA),
     __ATTRIB(CreateGLXPixmapWithConfigSGIX),
     __ATTRIB(DestroyGLXPbufferSGIX),
+    __ATTRIB(GLInteropExportObjectMESA),
+    __ATTRIB(GLInteropFlushObjectsMESA),
+    __ATTRIB(GLInteropQueryDeviceInfoMESA),
     __ATTRIB(GetContextIDEXT),
     __ATTRIB(GetCurrentDisplayEXT),
     __ATTRIB(GetDriverConfig),
diff --git a/src/glx/g_glxglvnddispatchindices.h b/src/glx/g_glxglvnddispatchindices.h
index b65d078098fa7..70047dc655993 100644
--- a/src/glx/g_glxglvnddispatchindices.h
+++ b/src/glx/g_glxglvnddispatchindices.h
@@ -31,6 +31,9 @@ typedef enum __GLXdispatchIndex {
     // DestroyPixmap implemented by libglvnd
     // DestroyWindow implemented by libglvnd
     // FreeContextEXT implemented by libglvnd
+    DI_GLInteropExportObjectMESA,
+    DI_GLInteropFlushObjectsMESA,
+    DI_GLInteropQueryDeviceInfoMESA,
     // GetClientString implemented by libglvnd
     // GetConfig implemented by libglvnd
     DI_GetContextIDEXT,
diff --git a/src/glx/glxcmds.c b/src/glx/glxcmds.c
index 293ac742c9231..76d3ea307c97b 100644
--- a/src/glx/glxcmds.c
+++ b/src/glx/glxcmds.c
@@ -2339,6 +2339,13 @@ static const struct name_address_pair GLX_functions[] = {
    GLX_FUNCTION(glXQueryCurrentRendererIntegerMESA),
    GLX_FUNCTION(glXQueryCurrentRendererStringMESA),
 
+   /*** GLX_MESA_gl_interop ***/
+#if defined(GLX_DIRECT_RENDERING) && !defined(GLX_USE_APPLEGL)
+   GLX_FUNCTION2(glXGLInteropQueryDeviceInfoMESA, MesaGLInteropGLXQueryDeviceInfo),
+   GLX_FUNCTION2(glXGLInteropExportObjectMESA, MesaGLInteropGLXExportObject),
+   GLX_FUNCTION2(glXGLInteropFlushObjectsMESA, MesaGLInteropGLXFlushObjects),
+#endif
+
    {NULL, NULL}                 /* end of list */
 };
 
-- 
GitLab


From 6b577e9738cf31316634a8f4b84a5b6c4a6ff0cc Mon Sep 17 00:00:00 2001
From: Sylvain Munaut <tnt@246tNt.com>
Date: Tue, 8 Aug 2023 02:03:27 +0200
Subject: [PATCH 4/7] egl: Export the MESA GL Interop functions through
 eglGetProcAddress

Signed-off-by: Sylvain Munaut <tnt@246tNt.com>
---
 src/egl/generate/eglFunctionList.py  |  4 ++++
 src/egl/generate/egl_other.xml       | 23 +++++++++++++++++++++++
 src/egl/generate/gen_egl_dispatch.py |  1 +
 src/egl/main/eglapi.c                |  2 ++
 src/egl/main/eglentrypoint.h         |  3 +++
 5 files changed, 33 insertions(+)

diff --git a/src/egl/generate/eglFunctionList.py b/src/egl/generate/eglFunctionList.py
index c1777eb75926d..5076ced6f11dc 100644
--- a/src/egl/generate/eglFunctionList.py
+++ b/src/egl/generate/eglFunctionList.py
@@ -242,5 +242,9 @@ EGL_FUNCTIONS = (
     # EGL_KHR_partial_update
     _eglFunc("eglSetDamageRegionKHR",                "display"),
 
+    # EGL_MESA_gl_interop
+    _eglFunc("eglGLInteropQueryDeviceInfoMESA",      "display"),
+    _eglFunc("eglGLInteropExportObjectMESA",         "display"),
+    _eglFunc("eglGLInteropFlushObjectsMESA",         "display"),
 )
 
diff --git a/src/egl/generate/egl_other.xml b/src/egl/generate/egl_other.xml
index 74c70ccdbefab..cd218204d2d3c 100644
--- a/src/egl/generate/egl_other.xml
+++ b/src/egl/generate/egl_other.xml
@@ -77,6 +77,29 @@
             <param><ptype>EGLint *</ptype> <name>numerator</name></param>
             <param><ptype>EGLint *</ptype> <name>denominator</name></param>
         </command>
+
+        <!-- EGL_MESA_gl_interop -->
+        <command>
+            <proto><ptype>EGLint</ptype> <name>eglGLInteropQueryDeviceInfoMESA</name></proto>
+            <param><ptype>EGLDisplay</ptype> <name>dpy</name></param>
+            <param><ptype>EGLContext</ptype> <name>ctx</name></param>
+            <param>struct <ptype>mesa_glinterop_device_info</ptype> *<name>out</name></param>
+        </command>
+        <command>
+            <proto><ptype>EGLint</ptype> <name>eglGLInteropExportObjectMESA</name></proto>
+            <param><ptype>EGLDisplay</ptype> <name>dpy</name></param>
+            <param><ptype>EGLContext</ptype> <name>ctx</name></param>
+            <param>struct <ptype>mesa_glinterop_export_in</ptype> *<name>in</name></param>
+            <param>struct <ptype>mesa_glinterop_export_out</ptype> *<name>out</name></param>
+        </command>
+        <command>
+            <proto><ptype>EGLint</ptype> <name>eglGLInteropFlushObjectsMESA</name></proto>
+            <param><ptype>EGLDisplay</ptype> <name>dpy</name></param>
+            <param><ptype>EGLContext</ptype> <name>ctx</name></param>
+            <param>unsigned <name>count</name></param>
+            <param>struct <ptype>mesa_glinterop_export_in</ptype> *<name>objects</name></param>
+            <param>GLsync *<name>sync</name></param>
+        </command>
     </commands>
 </registry>
 
diff --git a/src/egl/generate/gen_egl_dispatch.py b/src/egl/generate/gen_egl_dispatch.py
index be546bbda7757..dccc7f3cbaa51 100644
--- a/src/egl/generate/gen_egl_dispatch.py
+++ b/src/egl/generate/gen_egl_dispatch.py
@@ -102,6 +102,7 @@ def generateHeader(functions):
     #include <EGL/eglext.h>
     #include <EGL/eglmesaext.h>
     #include <EGL/eglext_angle.h>
+    #include <GL/mesa_glinterop.h>
     #include "glvnd/libeglabi.h"
 
     """.lstrip("\n"))
diff --git a/src/egl/main/eglapi.c b/src/egl/main/eglapi.c
index 109612faafdeb..b8c02f2436c11 100644
--- a/src/egl/main/eglapi.c
+++ b/src/egl/main/eglapi.c
@@ -2797,7 +2797,9 @@ eglGetProcAddress(const char *procname)
 {
    static const struct _egl_entrypoint egl_functions[] = {
 #define EGL_ENTRYPOINT(f) {.name = #f, .function = (_EGLProc)f},
+#define EGL_ENTRYPOINT2(n, f) {.name = #n, .function = (_EGLProc) f},
 #include "eglentrypoint.h"
+#undef EGL_ENTRYPOINT2
 #undef EGL_ENTRYPOINT
    };
    _EGLProc ret = NULL;
diff --git a/src/egl/main/eglentrypoint.h b/src/egl/main/eglentrypoint.h
index dc67301914e42..576dda23cdd65 100644
--- a/src/egl/main/eglentrypoint.h
+++ b/src/egl/main/eglentrypoint.h
@@ -36,6 +36,9 @@ EGL_ENTRYPOINT(eglDupNativeFenceFDANDROID)
 EGL_ENTRYPOINT(eglExportDMABUFImageMESA)
 EGL_ENTRYPOINT(eglExportDMABUFImageQueryMESA)
 EGL_ENTRYPOINT(eglExportDRMImageMESA)
+EGL_ENTRYPOINT2(eglGLInteropExportObjectMESA, MesaGLInteropEGLExportObject)
+EGL_ENTRYPOINT2(eglGLInteropFlushObjectsMESA, MesaGLInteropEGLFlushObjects)
+EGL_ENTRYPOINT2(eglGLInteropQueryDeviceInfoMESA, MesaGLInteropEGLQueryDeviceInfo)
 EGL_ENTRYPOINT(eglGetConfigAttrib)
 EGL_ENTRYPOINT(eglGetConfigs)
 EGL_ENTRYPOINT(eglGetCurrentContext)
-- 
GitLab


From 5251672235cd3396c0298e1026de2f4a2b430cc1 Mon Sep 17 00:00:00 2001
From: Sylvain Munaut <tnt@246tNt.com>
Date: Fri, 11 Aug 2023 14:02:31 +0200
Subject: [PATCH 5/7] glx: Remove MESA_depth_float_bit from enum

This is not used anywhere. Been there from the beginning of this
file but with no related code in glxextensions.c

Signed-off-by: Sylvain Munaut <tnt@246tNt.com>
---
 src/glx/glxextensions.h | 1 -
 1 file changed, 1 deletion(-)

diff --git a/src/glx/glxextensions.h b/src/glx/glxextensions.h
index 3523998babd2f..23c6fd1efae79 100644
--- a/src/glx/glxextensions.h
+++ b/src/glx/glxextensions.h
@@ -60,7 +60,6 @@ enum
    ATI_pixel_format_float_bit,
    INTEL_swap_event_bit,
    MESA_copy_sub_buffer_bit,
-   MESA_depth_float_bit,
    MESA_query_renderer_bit,
    MESA_swap_control_bit,
    MESA_swap_frame_usage_bit,
-- 
GitLab


From 1dc888ca8cf2b210e0f08be77cf2dc7381feac14 Mon Sep 17 00:00:00 2001
From: Sylvain Munaut <tnt@246tNt.com>
Date: Fri, 11 Aug 2023 14:03:17 +0200
Subject: [PATCH 6/7] glx: Advertise GLX_MESA_gl_interop extension if support
 present

Signed-off-by: Sylvain Munaut <tnt@246tNt.com>
---
 src/glx/dri2_glx.c      | 3 +++
 src/glx/dri3_glx.c      | 3 +++
 src/glx/glxextensions.c | 1 +
 src/glx/glxextensions.h | 1 +
 4 files changed, 8 insertions(+)

diff --git a/src/glx/dri2_glx.c b/src/glx/dri2_glx.c
index 79ca02ebf9aec..81314c0feea2c 100644
--- a/src/glx/dri2_glx.c
+++ b/src/glx/dri2_glx.c
@@ -979,6 +979,9 @@ dri2BindExtensions(struct dri2_screen *psc, struct glx_display * priv,
 
    if (psc->rendererQuery)
       __glXEnableDirectExtension(&psc->base, "GLX_MESA_query_renderer");
+
+   if (psc->interop)
+      __glXEnableDirectExtension(&psc->base, "GLX_MESA_gl_interop");
 }
 
 static char *
diff --git a/src/glx/dri3_glx.c b/src/glx/dri3_glx.c
index 22065896c9664..a1c9fb56696f2 100644
--- a/src/glx/dri3_glx.c
+++ b/src/glx/dri3_glx.c
@@ -755,6 +755,9 @@ dri3_bind_extensions(struct dri3_screen *psc, struct glx_display * priv,
 
    if (psc->rendererQuery)
       __glXEnableDirectExtension(&psc->base, "GLX_MESA_query_renderer");
+
+   if (psc->interop)
+      __glXEnableDirectExtension(&psc->base, "GLX_MESA_gl_interop");
 }
 
 static char *
diff --git a/src/glx/glxextensions.c b/src/glx/glxextensions.c
index b731042cde789..7c443fcb96cfe 100644
--- a/src/glx/glxextensions.c
+++ b/src/glx/glxextensions.c
@@ -105,6 +105,7 @@ static const struct extension_info known_glx_extensions[] = {
    { GLX(ATI_pixel_format_float),         N, N },
    { GLX(INTEL_swap_event),               N, N },
    { GLX(MESA_copy_sub_buffer),           N, N },
+   { GLX(MESA_gl_interop),                N, Y },
    { GLX(MESA_query_renderer),            N, Y },
    { GLX(MESA_swap_control),              N, Y },
    { GLX(NV_float_buffer),                N, N },
diff --git a/src/glx/glxextensions.h b/src/glx/glxextensions.h
index 23c6fd1efae79..ebd5def3985ac 100644
--- a/src/glx/glxextensions.h
+++ b/src/glx/glxextensions.h
@@ -60,6 +60,7 @@ enum
    ATI_pixel_format_float_bit,
    INTEL_swap_event_bit,
    MESA_copy_sub_buffer_bit,
+   MESA_gl_interop_bit,
    MESA_query_renderer_bit,
    MESA_swap_control_bit,
    MESA_swap_frame_usage_bit,
-- 
GitLab


From 73d326f90cf6b68851b7874e79ececca6bcfaf0c Mon Sep 17 00:00:00 2001
From: Sylvain Munaut <tnt@246tNt.com>
Date: Fri, 11 Aug 2023 14:15:55 +0200
Subject: [PATCH 7/7] egl: Advertise EGL_MESA_gl_interop extension if support
 present

Signed-off-by: Sylvain Munaut <tnt@246tNt.com>
---
 src/egl/drivers/dri2/egl_dri2.c | 4 ++++
 src/egl/main/eglapi.c           | 1 +
 src/egl/main/egldisplay.h       | 1 +
 3 files changed, 6 insertions(+)

diff --git a/src/egl/drivers/dri2/egl_dri2.c b/src/egl/drivers/dri2/egl_dri2.c
index 6b3c6c905f0fa..12c30a88300fb 100644
--- a/src/egl/drivers/dri2/egl_dri2.c
+++ b/src/egl/drivers/dri2/egl_dri2.c
@@ -870,6 +870,10 @@ dri2_setup_screen(_EGLDisplay *disp)
    disp->Extensions.KHR_no_config_context = EGL_TRUE;
    disp->Extensions.KHR_surfaceless_context = EGL_TRUE;
 
+   if (dri2_dpy->interop) {
+       disp->Extensions.MESA_gl_interop = EGL_TRUE;
+   }
+
    if (dri2_dpy->configOptions) {
       disp->Extensions.MESA_query_driver = EGL_TRUE;
    }
diff --git a/src/egl/main/eglapi.c b/src/egl/main/eglapi.c
index b8c02f2436c11..72430e5f06fee 100644
--- a/src/egl/main/eglapi.c
+++ b/src/egl/main/eglapi.c
@@ -588,6 +588,7 @@ _eglCreateExtensionsString(_EGLDisplay *disp)
    if (disp->Extensions.KHR_no_config_context)
       _eglAppendExtension(&exts, "EGL_MESA_configless_context");
    _EGL_CHECK_EXTENSION(MESA_drm_image);
+   _EGL_CHECK_EXTENSION(MESA_gl_interop);
    _EGL_CHECK_EXTENSION(MESA_image_dma_buf_export);
    _EGL_CHECK_EXTENSION(MESA_query_driver);
 
diff --git a/src/egl/main/egldisplay.h b/src/egl/main/egldisplay.h
index ac4b05b30dd2a..11dc97d50abd8 100644
--- a/src/egl/main/egldisplay.h
+++ b/src/egl/main/egldisplay.h
@@ -141,6 +141,7 @@ struct _egl_extensions {
    EGLBoolean KHR_wait_sync;
 
    EGLBoolean MESA_drm_image;
+   EGLBoolean MESA_gl_interop;
    EGLBoolean MESA_image_dma_buf_export;
    EGLBoolean MESA_query_driver;
 
-- 
GitLab

