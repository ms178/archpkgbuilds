From 046f437d3188d113235ccd0753df940e73fa250c Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Timur=20Krist=C3=B3f?= <timur.kristof@gmail.com>
Date: Thu, 22 Feb 2024 15:57:13 +0100
Subject: [PATCH 1/3] radv: Don't disable NGG culling with LLVM anymore.

The LLVM backend is now capable of supporting it, so there is no
need to specifically discriminate it now.
---
 src/amd/vulkan/radv_shader_info.c | 4 +---
 1 file changed, 1 insertion(+), 3 deletions(-)

diff --git a/src/amd/vulkan/radv_shader_info.c b/src/amd/vulkan/radv_shader_info.c
index 3c7f04d5805cb..4b8766aa5772b 100644
--- a/src/amd/vulkan/radv_shader_info.c
+++ b/src/amd/vulkan/radv_shader_info.c
@@ -1597,10 +1597,8 @@ radv_determine_ngg_settings(struct radv_device *device, struct radv_shader_stage
                                                                                                     : 3;
    }
 
-   /* TODO: Enable culling for LLVM. */
    es_stage->info.has_ngg_culling = radv_consider_culling(device->physical_device, es_stage->nir, ps_inputs_read,
-                                                          num_vertices_per_prim, &es_stage->info) &&
-                                    !radv_use_llvm_for_stage(device, es_stage->stage);
+                                                          num_vertices_per_prim, &es_stage->info);
 
    nir_function_impl *impl = nir_shader_get_entrypoint(es_stage->nir);
    es_stage->info.has_ngg_early_prim_export = exec_list_is_singular(&impl->body);
-- 
GitLab


From 694e59f705e0fc5d52b5a637ec44c4e9dbc704ec Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Timur=20Krist=C3=B3f?= <timur.kristof@gmail.com>
Date: Thu, 22 Feb 2024 16:05:13 +0100
Subject: [PATCH 2/3] radv: Slightly refactor the determination of
 max_ps_params.

It now uses has_dedicated_vram and gfx_level to detect GFX10.3+
discrete GPUs, which should also include GFX11 now.
---
 src/amd/vulkan/radv_shader.c | 10 +++-------
 1 file changed, 3 insertions(+), 7 deletions(-)

diff --git a/src/amd/vulkan/radv_shader.c b/src/amd/vulkan/radv_shader.c
index b8ff7d6c3c9f1..a285f3e68b18a 100644
--- a/src/amd/vulkan/radv_shader.c
+++ b/src/amd/vulkan/radv_shader.c
@@ -728,14 +728,10 @@ radv_consider_culling(const struct radv_physical_device *pdevice, struct nir_sha
    /* Shader based culling efficiency can depend on PS throughput.
     * Estimate an upper limit for PS input param count based on GPU info.
     */
-   unsigned max_ps_params;
-   unsigned max_render_backends = pdevice->rad_info.max_render_backends;
-   unsigned max_se = pdevice->rad_info.max_se;
+   unsigned max_ps_params = 4;
 
-   if (max_render_backends / max_se == 4)
-      max_ps_params = 6; /* Navi21 and other GFX10.3 dGPUs. */
-   else
-      max_ps_params = 4; /* Navi 1x. */
+   if (pdevice->rad_info.gfx_level >= GFX10_3 && pdevice->rad_info.has_dedicated_vram)
+      max_ps_params = 6; /* GFX10.3 and newer discrete GPUs. */
 
    /* TODO: consider other heuristics here, such as PS execution time */
    if (util_bitcount64(ps_inputs_read & ~VARYING_BIT_POS) > max_ps_params)
-- 
GitLab


From a15c63ea8d8d4235372269a91e2d3f4ce9839b9b Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Timur=20Krist=C3=B3f?= <timur.kristof@gmail.com>
Date: Thu, 22 Feb 2024 16:06:20 +0100
Subject: [PATCH 3/3] radv: Increase maximum allowed PS params for enabling NGG
 culling.

The original limits were chosen very conservatively because at
that time we didn't have a good understanding on the perf impact
of shader culling.

Since then, we've seen some use cases that have a higher amount
of PS params but still benefit from shader culling.
---
 src/amd/vulkan/radv_shader.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/src/amd/vulkan/radv_shader.c b/src/amd/vulkan/radv_shader.c
index a285f3e68b18a..33792f980043c 100644
--- a/src/amd/vulkan/radv_shader.c
+++ b/src/amd/vulkan/radv_shader.c
@@ -728,10 +728,10 @@ radv_consider_culling(const struct radv_physical_device *pdevice, struct nir_sha
    /* Shader based culling efficiency can depend on PS throughput.
     * Estimate an upper limit for PS input param count based on GPU info.
     */
-   unsigned max_ps_params = 4;
+   unsigned max_ps_params = 6;
 
    if (pdevice->rad_info.gfx_level >= GFX10_3 && pdevice->rad_info.has_dedicated_vram)
-      max_ps_params = 6; /* GFX10.3 and newer discrete GPUs. */
+      max_ps_params = 10; /* GFX10.3 and newer discrete GPUs. */
 
    /* TODO: consider other heuristics here, such as PS execution time */
    if (util_bitcount64(ps_inputs_read & ~VARYING_BIT_POS) > max_ps_params)
-- 
GitLab

