From 9f63347db0b943683bdcbe4a1f0130a922e3db95 Mon Sep 17 00:00:00 2001
From: Mihai Preda <mhpreda@gmail.com>
Date: Wed, 13 Jul 2022 14:33:39 +0300
Subject: [PATCH 1/2] gallium: LLVM-15 contexts use non-opaque pointers

LLVM-15 enables opaque pointers by default. We temporarilly request
non-opaque pointers while we migrate our code to support non-opaque pointers.

This workaround needs to be removed before LLVM-16.

See #6615
---
 src/gallium/auxiliary/draw/draw_llvm.c        | 5 +++++
 src/gallium/drivers/llvmpipe/lp_context.c     | 4 ++++
 src/gallium/drivers/llvmpipe/lp_test_arit.c   | 3 +++
 src/gallium/drivers/llvmpipe/lp_test_blend.c  | 3 +++
 src/gallium/drivers/llvmpipe/lp_test_conv.c   | 3 +++
 src/gallium/drivers/llvmpipe/lp_test_format.c | 6 ++++++
 src/gallium/drivers/llvmpipe/lp_test_printf.c | 3 +++
 7 files changed, 27 insertions(+)

diff --git a/src/gallium/auxiliary/draw/draw_llvm.c b/src/gallium/auxiliary/draw/draw_llvm.c
index 96c257d1172d..4f952e0e17c4 100644
--- a/src/gallium/auxiliary/draw/draw_llvm.c
+++ b/src/gallium/auxiliary/draw/draw_llvm.c
@@ -793,6 +793,11 @@ draw_llvm_create(struct draw_context *draw, LLVMContextRef context)
    llvm->context = context;
    if (!llvm->context) {
       llvm->context = LLVMContextCreate();
+
+#if LLVM_VERSION_MAJOR >= 15
+      LLVMContextSetOpaquePointers(llvm->context, false);
+#endif
+
       llvm->context_owned = true;
    }
    if (!llvm->context)
diff --git a/src/gallium/drivers/llvmpipe/lp_context.c b/src/gallium/drivers/llvmpipe/lp_context.c
index 82e5c7420556..88bacd94b21f 100644
--- a/src/gallium/drivers/llvmpipe/lp_context.c
+++ b/src/gallium/drivers/llvmpipe/lp_context.c
@@ -245,6 +245,10 @@ llvmpipe_create_context(struct pipe_screen *screen, void *priv,
    if (!llvmpipe->context)
       goto fail;
 
+#if LLVM_VERSION_MAJOR >= 15
+      LLVMContextSetOpaquePointers(llvmpipe->context, false);
+#endif
+
    /*
     * Create drawing context and plug our rendering stage into it.
     */
diff --git a/src/gallium/drivers/llvmpipe/lp_test_arit.c b/src/gallium/drivers/llvmpipe/lp_test_arit.c
index dc172f73fbe6..c4ec30535849 100644
--- a/src/gallium/drivers/llvmpipe/lp_test_arit.c
+++ b/src/gallium/drivers/llvmpipe/lp_test_arit.c
@@ -434,6 +434,9 @@ test_unary(unsigned verbose, FILE *fp, const struct unary_test_t *test, unsigned
    }
 
    context = LLVMContextCreate();
+#if LLVM_VERSION_MAJOR >= 15
+      LLVMContextSetOpaquePointers(context, false);
+#endif
    gallivm = gallivm_create("test_module", context, NULL);
 
    test_func = build_unary_test_func(gallivm, test, length, test_name);
diff --git a/src/gallium/drivers/llvmpipe/lp_test_blend.c b/src/gallium/drivers/llvmpipe/lp_test_blend.c
index a549b0a22ffe..dbe153c3da1a 100644
--- a/src/gallium/drivers/llvmpipe/lp_test_blend.c
+++ b/src/gallium/drivers/llvmpipe/lp_test_blend.c
@@ -452,6 +452,9 @@ test_one(unsigned verbose,
       dump_blend_type(stdout, blend, type);
 
    context = LLVMContextCreate();
+#if LLVM_VERSION_MAJOR >= 15
+      LLVMContextSetOpaquePointers(context, false);
+#endif
    gallivm = gallivm_create("test_module", context, NULL);
 
    func = add_blend_test(gallivm, blend, type);
diff --git a/src/gallium/drivers/llvmpipe/lp_test_conv.c b/src/gallium/drivers/llvmpipe/lp_test_conv.c
index d040ea3f9785..aba1aa23c990 100644
--- a/src/gallium/drivers/llvmpipe/lp_test_conv.c
+++ b/src/gallium/drivers/llvmpipe/lp_test_conv.c
@@ -221,6 +221,9 @@ test_one(unsigned verbose,
    }
 
    context = LLVMContextCreate();
+#if LLVM_VERSION_MAJOR >= 15
+      LLVMContextSetOpaquePointers(context, false);
+#endif
    gallivm = gallivm_create("test_module", context, NULL);
 
    func = add_conv_test(gallivm, src_type, num_srcs, dst_type, num_dsts);
diff --git a/src/gallium/drivers/llvmpipe/lp_test_format.c b/src/gallium/drivers/llvmpipe/lp_test_format.c
index f8013fe2d255..a767ae1dd468 100644
--- a/src/gallium/drivers/llvmpipe/lp_test_format.c
+++ b/src/gallium/drivers/llvmpipe/lp_test_format.c
@@ -150,6 +150,9 @@ test_format_float(unsigned verbose, FILE *fp,
    unsigned i, j, k, l;
 
    context = LLVMContextCreate();
+#if LLVM_VERSION_MAJOR >= 15
+      LLVMContextSetOpaquePointers(context, false);
+#endif
    gallivm = gallivm_create("test_module_float", context, NULL);
 
    fetch = add_fetch_rgba_test(gallivm, verbose, desc,
@@ -251,6 +254,9 @@ test_format_unorm8(unsigned verbose, FILE *fp,
    unsigned i, j, k, l;
 
    context = LLVMContextCreate();
+#if LLVM_VERSION_MAJOR >= 15
+      LLVMContextSetOpaquePointers(context, false);
+#endif
    gallivm = gallivm_create("test_module_unorm8", context, NULL);
 
    fetch = add_fetch_rgba_test(gallivm, verbose, desc,
diff --git a/src/gallium/drivers/llvmpipe/lp_test_printf.c b/src/gallium/drivers/llvmpipe/lp_test_printf.c
index 85ce1cda6956..b102342cdac6 100644
--- a/src/gallium/drivers/llvmpipe/lp_test_printf.c
+++ b/src/gallium/drivers/llvmpipe/lp_test_printf.c
@@ -96,6 +96,9 @@ test_printf(unsigned verbose, FILE *fp,
    boolean success = TRUE;
 
    context = LLVMContextCreate();
+#if LLVM_VERSION_MAJOR >= 15
+      LLVMContextSetOpaquePointers(context, false);
+#endif
    gallivm = gallivm_create("test_module", context, NULL);
 
    test = add_printf_test(gallivm);
-- 
GitLab


From 90514df50a553944124cb088cd09b2404ba1e09c Mon Sep 17 00:00:00 2001
From: Mihai Preda <mhpreda@gmail.com>
Date: Wed, 13 Jul 2022 14:40:40 +0300
Subject: [PATCH 2/2] gallivm: LLVM-15 remove LLVMConstSDiv, LLVMConstUDiv

LLVM-15 removed these methods, see "Changes to C API"
https://llvm.org/docs/ReleaseNotes.html#changes-to-the-c-api

Fixes #6827
---
 src/gallium/auxiliary/gallivm/lp_bld_arit.c | 4 ----
 1 file changed, 4 deletions(-)

diff --git a/src/gallium/auxiliary/gallivm/lp_bld_arit.c b/src/gallium/auxiliary/gallivm/lp_bld_arit.c
index 18f24a292877..049239fff7fe 100644
--- a/src/gallium/auxiliary/gallivm/lp_bld_arit.c
+++ b/src/gallium/auxiliary/gallivm/lp_bld_arit.c
@@ -1307,10 +1307,6 @@ lp_build_div(struct lp_build_context *bld,
    if (LLVMIsConstant(a) && LLVMIsConstant(b)) {
       if (type.floating)
          return LLVMConstFDiv(a, b);
-      else if (type.sign)
-         return LLVMConstSDiv(a, b);
-      else
-         return LLVMConstUDiv(a, b);
    }
 
    /* fast rcp is disabled (just uses div), so makes no sense to try that */
-- 
GitLab

