From 9ffc7300b3c45d882acbb58d05c9a4a410155c99 Mon Sep 17 00:00:00 2001
From: Pierre-Eric Pelloux-Prayer <pierre-eric.pelloux-prayer@amd.com>
Date: Thu, 8 Sep 2022 09:47:59 +0200
Subject: [PATCH 1/2] mesa: avoid reading back textures from VRAM

This can be very slow on dGPU.

I tried a different version that would allocate a full row
and then do a single memcpy per row but the performance
was similar so I kept the simple version.

Cc: mesa-stable
---
 src/mesa/main/texstore.c | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

diff --git a/src/mesa/main/texstore.c b/src/mesa/main/texstore.c
index 7caaa62f20f3..8679b52bb775 100755
--- a/src/mesa/main/texstore.c
+++ b/src/mesa/main/texstore.c
@@ -449,7 +449,7 @@ _mesa_texstore_s8_z24(TEXSTORE_PARAMS)
             /* the 24 depth bits will be in the low position: */
             _mesa_unpack_depth_span(ctx, srcWidth,
                                     GL_UNSIGNED_INT, /* dst type */
-                                    keepstencil ? depth : dstRow, /* dst addr */
+                                    depth, /* dst addr */
                                     depthScale,
                                     srcType, src, srcPacking);
 
@@ -463,7 +463,9 @@ _mesa_texstore_s8_z24(TEXSTORE_PARAMS)
 
          /* merge stencil values into depth values */
          for (i = 0; i < srcWidth; i++) {
-            if (keepstencil)
+            if (!keepstencil && !keepdepth)
+               dstRow[i] = depth[i] | (stencil[i] << 24);
+            else if (keepstencil)
                dstRow[i] = depth[i] | (dstRow[i] & 0xFF000000);
             else
                dstRow[i] = (dstRow[i] & 0xFFFFFF) | (stencil[i] << 24);
-- 
GitLab


From 36c98f6dad613d1fe89f347a8264c41c92342ea5 Mon Sep 17 00:00:00 2001
From: Pierre-Eric Pelloux-Prayer <pierre-eric.pelloux-prayer@amd.com>
Date: Thu, 8 Sep 2022 10:21:32 +0200
Subject: [PATCH 2/2] mesa: remove fallback for GL_DEPTH_STENCIL

st_TexSubImage has this "default to fallback for depth-stencil" since
2013. I think it's time to remove this limitation - hopefully all
drivers will be happy with the change to avoid adding yet another CAP.

This helps CS:GO startup a lot, because the fallback path is very very
slow.
---
 src/mesa/state_tracker/st_cb_texture.c | 6 ------
 1 file changed, 6 deletions(-)

diff --git a/src/mesa/state_tracker/st_cb_texture.c b/src/mesa/state_tracker/st_cb_texture.c
index 770ebc333b04..4f6c24d72882 100644
--- a/src/mesa/state_tracker/st_cb_texture.c
+++ b/src/mesa/state_tracker/st_cb_texture.c
@@ -1987,12 +1987,6 @@ st_TexSubImage(struct gl_context *ctx, GLuint dims,
       goto fallback;
    }
 
-   /* XXX Fallback for depth-stencil formats due to an incomplete stencil
-    * blit implementation in some drivers. */
-   if (format == GL_DEPTH_STENCIL) {
-      goto fallback;
-   }
-
    /* If the base internal format and the texture format don't match,
     * we can't use blit-based TexSubImage. */
    if (texImage->_BaseFormat !=
-- 
GitLab

