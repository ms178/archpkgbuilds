From d34bb52ed41834444794d26bc6d4e07348d318fc Mon Sep 17 00:00:00 2001
From: Samuel Pitoiset <samuel.pitoiset@gmail.com>
Date: Thu, 2 Mar 2023 13:02:47 +0100
Subject: [PATCH] radv: fix re-emitting vertex user SGPRs when binding a
 graphics pipeline

If the primary executes a secondary, last_vertex_offset (for example)
is copied from secondary to primary. But then if you bind a new
pipeline in primary without checking the last emitted pipeline, vertex
user sgpr can match but it's incorrect.

Fixes some tests failures in
dEQP-VK.dynamic_rendering.primary_cmd_buff.random.*.

The remaining failures seem to be related to occlusion queries.

Cc: mesa-stable
Signed-off-by: Samuel Pitoiset <samuel.pitoiset@gmail.com>
---
 src/amd/ci/radv-navi10-aco-fails.txt |  4 ----
 src/amd/ci/radv-renoir-aco-fails.txt |  6 ------
 src/amd/ci/radv-stoney-aco-fails.txt |  1 -
 src/amd/ci/radv-vega10-aco-fails.txt | 10 ----------
 src/amd/vulkan/radv_cmd_buffer.c     |  6 +++---
 5 files changed, 3 insertions(+), 24 deletions(-)

diff --git a/src/amd/vulkan/radv_cmd_buffer.c b/src/amd/vulkan/radv_cmd_buffer.c
index acd1d3931f76..7884906d3201 100644
--- a/src/amd/vulkan/radv_cmd_buffer.c
+++ b/src/amd/vulkan/radv_cmd_buffer.c
@@ -6213,9 +6213,9 @@ radv_CmdBindPipeline(VkCommandBuffer commandBuffer, VkPipelineBindPoint pipeline
       radv_mark_descriptor_sets_dirty(cmd_buffer, pipelineBindPoint);
 
       bool vtx_emit_count_changed =
-         !cmd_buffer->state.graphics_pipeline ||
-         cmd_buffer->state.graphics_pipeline->vtx_emit_num != graphics_pipeline->vtx_emit_num ||
-         cmd_buffer->state.graphics_pipeline->vtx_base_sgpr != graphics_pipeline->vtx_base_sgpr;
+         !cmd_buffer->state.emitted_graphics_pipeline ||
+         cmd_buffer->state.emitted_graphics_pipeline->vtx_emit_num != graphics_pipeline->vtx_emit_num ||
+         cmd_buffer->state.emitted_graphics_pipeline->vtx_base_sgpr != graphics_pipeline->vtx_base_sgpr;
       cmd_buffer->state.graphics_pipeline = graphics_pipeline;
 
       bool mesh_shading = (graphics_pipeline->active_stages & VK_SHADER_STAGE_MESH_BIT_EXT) > 0;
-- 
GitLab

