From cf4b3e2f98a5bb93a0cc529da152dcd7f7e8fc0c Mon Sep 17 00:00:00 2001
From: Samuel Pitoiset <samuel.pitoiset@gmail.com>
Date: Tue, 5 Dec 2023 18:03:42 +0100
Subject: [PATCH 2/3] vulkan/runtime: promote VK_EXT_vertex_attribute_divisor
 to KHR

Just rename existing structs.

Signed-off-by: Samuel Pitoiset <samuel.pitoiset@gmail.com>
---
 src/vulkan/runtime/vk_graphics_state.c | 6 +++---
 src/vulkan/runtime/vk_graphics_state.h | 2 +-
 2 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/src/vulkan/runtime/vk_graphics_state.c b/src/vulkan/runtime/vk_graphics_state.c
index 407fabe3ad8d..2bfc38331532 100644
--- a/src/vulkan/runtime/vk_graphics_state.c
+++ b/src/vulkan/runtime/vk_graphics_state.c
@@ -337,12 +337,12 @@ vk_vertex_input_state_init(struct vk_vertex_input_state *vi,
       vi->attributes[a].offset = desc->offset;
    }
 
-   const VkPipelineVertexInputDivisorStateCreateInfoEXT *vi_div_state =
+   const VkPipelineVertexInputDivisorStateCreateInfoKHR *vi_div_state =
       vk_find_struct_const(vi_info->pNext,
-                           PIPELINE_VERTEX_INPUT_DIVISOR_STATE_CREATE_INFO_EXT);
+                           PIPELINE_VERTEX_INPUT_DIVISOR_STATE_CREATE_INFO_KHR);
    if (vi_div_state) {
       for (uint32_t i = 0; i < vi_div_state->vertexBindingDivisorCount; i++) {
-         const VkVertexInputBindingDivisorDescriptionEXT *desc =
+         const VkVertexInputBindingDivisorDescriptionKHR *desc =
             &vi_div_state->pVertexBindingDivisors[i];
 
          assert(desc->binding < MESA_VK_MAX_VERTEX_BINDINGS);
diff --git a/src/vulkan/runtime/vk_graphics_state.h b/src/vulkan/runtime/vk_graphics_state.h
index d6c8c68b020a..628db8f8dd10 100644
--- a/src/vulkan/runtime/vk_graphics_state.h
+++ b/src/vulkan/runtime/vk_graphics_state.h
@@ -128,7 +128,7 @@ struct vk_vertex_binding_state {
    /** VkVertexInputBindingDescription::inputRate */
    uint16_t input_rate;
 
-   /** VkVertexInputBindingDivisorDescriptionEXT::divisor or 1 */
+   /** VkVertexInputBindingDivisorDescriptionKHR::divisor or 1 */
    uint32_t divisor;
 };
 
-- 
GitLab


From 0154959c9175ec8c513a61bf2a61dc8a495e2ce5 Mon Sep 17 00:00:00 2001
From: Samuel Pitoiset <samuel.pitoiset@gmail.com>
Date: Tue, 5 Dec 2023 17:59:26 +0100
Subject: [PATCH 3/3] radv: advertise VK_KHR_vertex_attribute_divisor

This is a promotion from the EXT, except the new property
supportsNonZeroFirstInstance which should already be supported.

Signed-off-by: Samuel Pitoiset <samuel.pitoiset@gmail.com>
---
 docs/features.txt                     | 1 +
 docs/relnotes/new_features.txt        | 1 +
 src/amd/vulkan/radv_physical_device.c | 6 ++++--
 3 files changed, 6 insertions(+), 2 deletions(-)

diff --git a/docs/features.txt b/docs/features.txt
index fc125a419c41..72a4a9617d9a 100644
--- a/docs/features.txt
+++ b/docs/features.txt
@@ -536,6 +536,7 @@ Khronos extensions that are not part of any Vulkan version:
   VK_KHR_surface_protected_capabilities                 DONE (anv, lvp, nvk, radv, v3dv, vn)
   VK_KHR_swapchain                                      DONE (anv, dzn, hasvk, lvp, nvk, panvk, pvr, radv, tu, v3dv, vn)
   VK_KHR_swapchain_mutable_format                       DONE (anv, hasvk, lvp, nvk, radv, tu, v3dv, vn)
+  VK_KHR_vertex_attribute_divisor                       DONE (radv)
   VK_KHR_wayland_surface                                DONE (anv, dzn, lvp, nvk, panvk, radv, tu, v3dv, vn)
   VK_KHR_workgroup_memory_explicit_layout               DONE (anv, nvk, hasvk, radv, v3dv)
   VK_KHR_win32_keyed_mutex                              not started
diff --git a/docs/relnotes/new_features.txt b/docs/relnotes/new_features.txt
index b5acc8181ca2..2507b962bae2 100644
--- a/docs/relnotes/new_features.txt
+++ b/docs/relnotes/new_features.txt
@@ -17,3 +17,4 @@ GL_ARB_viewport_array on Asahi
 GL_ARB_fragment_layer_viewport on Asahi
 GL_ARB_cull_distance on Asahi
 VK_KHR_calibrated_timestamps on RADV
+VK_KHR_vertex_attribute_divisor on RADV
diff --git a/src/amd/vulkan/radv_physical_device.c b/src/amd/vulkan/radv_physical_device.c
index b891ffde2986..aaa03f624f18 100644
--- a/src/amd/vulkan/radv_physical_device.c
+++ b/src/amd/vulkan/radv_physical_device.c
@@ -478,6 +478,7 @@ radv_physical_device_get_supported_extensions(const struct radv_physical_device
       .KHR_timeline_semaphore = true,
       .KHR_uniform_buffer_standard_layout = true,
       .KHR_variable_pointers = true,
+      .KHR_vertex_attribute_divisor = true,
       .KHR_video_queue = !!(device->instance->perftest_flags & RADV_PERFTEST_VIDEO_DECODE),
       .KHR_video_decode_queue = !!(device->instance->perftest_flags & RADV_PERFTEST_VIDEO_DECODE),
       .KHR_video_decode_h264 = VIDEO_CODEC_H264DEC && !!(device->instance->perftest_flags & RADV_PERFTEST_VIDEO_DECODE),
@@ -761,7 +762,7 @@ radv_physical_device_get_features(const struct radv_physical_device *pdevice, st
       .conditionalRendering = true,
       .inheritedConditionalRendering = false,
 
-      /* VK_EXT_vertex_attribute_divisor */
+      /* VK_KHR_vertex_attribute_divisor */
       .vertexAttributeInstanceRateDivisor = true,
       .vertexAttributeInstanceRateZeroDivisor = true,
 
@@ -1502,8 +1503,9 @@ radv_get_physical_device_properties(struct radv_physical_device *pdevice)
    p->shaderCoreFeatures = 0;
    p->activeComputeUnitCount = pdevice->rad_info.num_cu;
 
-   /* VK_EXT_vertex_attribute_divisor */
+   /* VK_KHR_vertex_attribute_divisor */
    p->maxVertexAttribDivisor = UINT32_MAX;
+   p->supportsNonZeroFirstInstance = true;
 
    /* VK_EXT_conservative_rasterization */
    p->primitiveOverestimationSize = 0;
-- 
GitLab

