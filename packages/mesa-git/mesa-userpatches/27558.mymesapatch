From 05a4a505ee76c49bbbc4d1c6e8b90099dc6d0023 Mon Sep 17 00:00:00 2001
From: David Rosca <nowrep@gmail.com>
Date: Sat, 10 Feb 2024 09:21:05 +0100
Subject: [PATCH] radeonsi/vcn: Implement new rc_per_pic for VCN >= 3

It now allows to set QP separately for I/P/B frames, however
there's currently no support for this in VA frontend.

Fixes max_au_size on VCN >= 3.

Cc: mesa-stable
---
 src/amd/common/ac_vcn_enc.h                   |  4 ++-
 src/gallium/drivers/radeonsi/radeon_vcn_enc.c | 12 ++++++--
 .../drivers/radeonsi/radeon_vcn_enc_1_2.c     |  2 +-
 .../drivers/radeonsi/radeon_vcn_enc_3_0.c     | 30 +++++++++++++++++++
 4 files changed, 43 insertions(+), 5 deletions(-)

diff --git a/src/amd/common/ac_vcn_enc.h b/src/amd/common/ac_vcn_enc.h
index 73f2154387ea4..4a9b622f5938e 100644
--- a/src/amd/common/ac_vcn_enc.h
+++ b/src/amd/common/ac_vcn_enc.h
@@ -310,7 +310,9 @@ typedef struct rvcn_enc_rate_ctl_layer_init_s {
 } rvcn_enc_rate_ctl_layer_init_t;
 
 typedef struct rvcn_enc_rate_ctl_per_picture_s {
-   uint32_t qp;
+   uint32_t qp_i;
+   uint32_t qp_p;
+   uint32_t qp_b;
    uint32_t min_qp_app;
    uint32_t max_qp_app;
    uint32_t max_au_size;
diff --git a/src/gallium/drivers/radeonsi/radeon_vcn_enc.c b/src/gallium/drivers/radeonsi/radeon_vcn_enc.c
index 4bd1f9b468bb4..4d9248c53ceec 100644
--- a/src/gallium/drivers/radeonsi/radeon_vcn_enc.c
+++ b/src/gallium/drivers/radeonsi/radeon_vcn_enc.c
@@ -262,7 +262,9 @@ static void radeon_vcn_enc_h264_get_rc_param(struct radeon_encoder *enc,
                frame_rate_num);
    }
    enc->enc_pic.rc_session_init.vbv_buffer_level = pic->rate_ctrl[0].vbv_buf_lv;
-   enc->enc_pic.rc_per_pic.qp = pic->quant_i_frames;
+   enc->enc_pic.rc_per_pic.qp_i = pic->quant_i_frames;
+   enc->enc_pic.rc_per_pic.qp_p = pic->quant_p_frames;
+   enc->enc_pic.rc_per_pic.qp_b = pic->quant_b_frames;
    enc->enc_pic.rc_per_pic.min_qp_app = pic->rate_ctrl[0].min_qp;
    enc->enc_pic.rc_per_pic.max_qp_app = pic->rate_ctrl[0].max_qp ?
       pic->rate_ctrl[0].max_qp : 51;
@@ -506,7 +508,9 @@ static void radeon_vcn_enc_hevc_get_rc_param(struct radeon_encoder *enc,
             frame_rate_den,
             frame_rate_num);
    enc->enc_pic.rc_session_init.vbv_buffer_level = pic->rc.vbv_buf_lv;
-   enc->enc_pic.rc_per_pic.qp = pic->rc.quant_i_frames;
+   enc->enc_pic.rc_per_pic.qp_i = pic->rc.quant_i_frames;
+   enc->enc_pic.rc_per_pic.qp_p = pic->rc.quant_p_frames;
+   enc->enc_pic.rc_per_pic.qp_b = pic->rc.quant_b_frames;
    enc->enc_pic.rc_per_pic.min_qp_app = pic->rc.min_qp;
    enc->enc_pic.rc_per_pic.max_qp_app = pic->rc.max_qp ? pic->rc.max_qp : 51;
    enc->enc_pic.rc_per_pic.enabled_filler_data = pic->rc.fill_data_enable;
@@ -725,7 +729,9 @@ static void radeon_vcn_enc_av1_get_rc_param(struct radeon_encoder *enc,
                                     frame_rate_num);
    }
    enc->enc_pic.rc_session_init.vbv_buffer_level = pic->rc[0].vbv_buf_lv;
-   enc->enc_pic.rc_per_pic.qp = pic->rc[0].qp;
+   enc->enc_pic.rc_per_pic.qp_i = pic->rc[0].qp;
+   enc->enc_pic.rc_per_pic.qp_p = pic->rc[0].qp;
+   enc->enc_pic.rc_per_pic.qp_b = pic->rc[0].qp;
    enc->enc_pic.rc_per_pic.min_qp_app = pic->rc[0].min_qp ? pic->rc[0].min_qp : 1;
    enc->enc_pic.rc_per_pic.max_qp_app = pic->rc[0].max_qp ? pic->rc[0].max_qp : 255;
    enc->enc_pic.rc_per_pic.enabled_filler_data = pic->rc[0].fill_data_enable;
diff --git a/src/gallium/drivers/radeonsi/radeon_vcn_enc_1_2.c b/src/gallium/drivers/radeonsi/radeon_vcn_enc_1_2.c
index 03e8c382abb84..00a5b761a0723 100644
--- a/src/gallium/drivers/radeonsi/radeon_vcn_enc_1_2.c
+++ b/src/gallium/drivers/radeonsi/radeon_vcn_enc_1_2.c
@@ -1190,7 +1190,7 @@ static void radeon_enc_intra_refresh(struct radeon_encoder *enc)
 static void radeon_enc_rc_per_pic(struct radeon_encoder *enc)
 {
    RADEON_ENC_BEGIN(enc->cmd.rc_per_pic);
-   RADEON_ENC_CS(enc->enc_pic.rc_per_pic.qp);
+   RADEON_ENC_CS(enc->enc_pic.rc_per_pic.qp_i);
    RADEON_ENC_CS(enc->enc_pic.rc_per_pic.min_qp_app);
    RADEON_ENC_CS(enc->enc_pic.rc_per_pic.max_qp_app);
    RADEON_ENC_CS(enc->enc_pic.rc_per_pic.max_au_size);
diff --git a/src/gallium/drivers/radeonsi/radeon_vcn_enc_3_0.c b/src/gallium/drivers/radeonsi/radeon_vcn_enc_3_0.c
index ce94f221c1cdc..91767572a8246 100644
--- a/src/gallium/drivers/radeonsi/radeon_vcn_enc_3_0.c
+++ b/src/gallium/drivers/radeonsi/radeon_vcn_enc_3_0.c
@@ -19,6 +19,8 @@
 #define RENCODE_FW_INTERFACE_MAJOR_VERSION   1
 #define RENCODE_FW_INTERFACE_MINOR_VERSION   20
 
+#define RENCODE_IB_PARAM_RATE_CONTROL_PER_PICTURE  0x0000001d
+
 static void radeon_enc_session_info(struct radeon_encoder *enc)
 {
    RADEON_ENC_BEGIN(enc->cmd.session_info);
@@ -115,6 +117,31 @@ static void radeon_enc_quality_params(struct radeon_encoder *enc)
    RADEON_ENC_END();
 }
 
+static void radeon_enc_rc_per_pic(struct radeon_encoder *enc)
+{
+   RADEON_ENC_BEGIN(enc->cmd.rc_per_pic);
+   RADEON_ENC_CS(enc->enc_pic.rc_per_pic.qp_i);
+   RADEON_ENC_CS(enc->enc_pic.rc_per_pic.qp_p);
+   RADEON_ENC_CS(enc->enc_pic.rc_per_pic.qp_b);
+   /* min/max qp i */
+   RADEON_ENC_CS(enc->enc_pic.rc_per_pic.min_qp_app);
+   RADEON_ENC_CS(enc->enc_pic.rc_per_pic.max_qp_app);
+   /* min/max qp p */
+   RADEON_ENC_CS(enc->enc_pic.rc_per_pic.min_qp_app);
+   RADEON_ENC_CS(enc->enc_pic.rc_per_pic.max_qp_app);
+   /* min/max qp b */
+   RADEON_ENC_CS(enc->enc_pic.rc_per_pic.min_qp_app);
+   RADEON_ENC_CS(enc->enc_pic.rc_per_pic.max_qp_app);
+   RADEON_ENC_CS(enc->enc_pic.rc_per_pic.max_au_size);
+   RADEON_ENC_CS(enc->enc_pic.rc_per_pic.max_au_size);
+   RADEON_ENC_CS(enc->enc_pic.rc_per_pic.max_au_size);
+   RADEON_ENC_CS(enc->enc_pic.rc_per_pic.enabled_filler_data);
+   RADEON_ENC_CS(enc->enc_pic.rc_per_pic.skip_frame_enable);
+   RADEON_ENC_CS(enc->enc_pic.rc_per_pic.enforce_hrd);
+   RADEON_ENC_CS(0);
+   RADEON_ENC_END();
+}
+
 static void radeon_enc_nalu_sps(struct radeon_encoder *enc)
 {
    struct radeon_enc_pic *pic = &enc->enc_pic;
@@ -536,6 +563,7 @@ void radeon_enc_3_0_init(struct radeon_encoder *enc)
    enc->session_init = radeon_enc_session_init;
    enc->ctx = radeon_enc_ctx;
    enc->quality_params = radeon_enc_quality_params;
+   enc->rc_per_pic = radeon_enc_rc_per_pic;
 
    if (u_reduce_video_profile(enc->base.profile) == PIPE_VIDEO_FORMAT_MPEG4_AVC) {
       enc->spec_misc = radeon_enc_spec_misc;
@@ -549,6 +577,8 @@ void radeon_enc_3_0_init(struct radeon_encoder *enc)
       enc->nalu_pps = radeon_enc_nalu_pps_hevc;
    }
 
+   enc->cmd.rc_per_pic = RENCODE_IB_PARAM_RATE_CONTROL_PER_PICTURE;
+
    enc->enc_pic.session_info.interface_version =
       ((RENCODE_FW_INTERFACE_MAJOR_VERSION << RENCODE_IF_MAJOR_VERSION_SHIFT) |
       (RENCODE_FW_INTERFACE_MINOR_VERSION << RENCODE_IF_MINOR_VERSION_SHIFT));
-- 
GitLab

