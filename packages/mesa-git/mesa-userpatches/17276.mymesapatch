From 6c46d0c474aa1f452fb4266084c686c8f581163c Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Daniel=20Sch=C3=BCrmann?= <daniel@schuermann.dev>
Date: Tue, 28 Jun 2022 11:13:54 +0200
Subject: [PATCH] nir/opt_shrink_vectors: fix re-using of components for vecN

Cc: mesa-stable
---
 src/compiler/nir/nir_opt_shrink_vectors.c | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

diff --git a/src/compiler/nir/nir_opt_shrink_vectors.c b/src/compiler/nir/nir_opt_shrink_vectors.c
index e61f78313551..61d454625588 100644
--- a/src/compiler/nir/nir_opt_shrink_vectors.c
+++ b/src/compiler/nir/nir_opt_shrink_vectors.c
@@ -120,10 +120,12 @@ opt_shrink_vector(nir_builder *b, nir_alu_instr *instr)
       if (!((mask >> i) & 0x1))
          continue;
 
+      nir_ssa_scalar scalar = nir_get_ssa_scalar(instr->src[i].src.ssa, instr->src[i].swizzle[0]);
+
       /* Try reuse a component with the same value */
       unsigned j;
       for (j = 0; j < num_components; j++) {
-         if (nir_alu_srcs_equal(instr, instr, i, j)) {
+         if (scalar.def == srcs[j].def && scalar.comp == srcs[j].comp) {
             reswizzle[i] = j;
             break;
          }
@@ -131,7 +133,7 @@ opt_shrink_vector(nir_builder *b, nir_alu_instr *instr)
 
       /* Otherwise, just append the value */
       if (j == num_components) {
-         srcs[num_components] = nir_get_ssa_scalar(instr->src[i].src.ssa, instr->src[i].swizzle[0]);
+         srcs[num_components] = scalar;
          reswizzle[i] = num_components++;
       }
    }
-- 
GitLab

