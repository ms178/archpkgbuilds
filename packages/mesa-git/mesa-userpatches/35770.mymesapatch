From d4372e42f8c5dda1007e8c2773c99fa5f2bf471d Mon Sep 17 00:00:00 2001
From: Rhys Perry <pendingchaos02@gmail.com>
Date: Thu, 26 Jun 2025 17:13:55 +0100
Subject: [PATCH 1/2] nir/lower_bit_size: fix bitz/bitnz

Signed-off-by: Rhys Perry <pendingchaos02@gmail.com>
Fixes: 6585209cdd93 ("nir/lower_bit_size: mask bitz/bitnz src1 like shifts")
Reviewed-by: Georg Lehmann <dadschoorse@gmail.com>
---
 src/compiler/nir/nir_lower_bit_size.c | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git a/src/compiler/nir/nir_lower_bit_size.c b/src/compiler/nir/nir_lower_bit_size.c
index 7b975b31e3896..aa28c06aec3db 100644
--- a/src/compiler/nir/nir_lower_bit_size.c
+++ b/src/compiler/nir/nir_lower_bit_size.c
@@ -69,8 +69,9 @@ lower_alu_instr(nir_builder *bld, nir_alu_instr *alu, unsigned bit_size)
                      op == nir_op_bitz || op == nir_op_bitz8 || op == nir_op_bitz16 ||
                      op == nir_op_bitz32 || op == nir_op_bitnz || op == nir_op_bitnz8 ||
                      op == nir_op_bitnz16 || op == nir_op_bitnz32)) {
-         assert(util_is_power_of_two_nonzero(dst_bit_size));
-         src = nir_iand(bld, src, nir_imm_int(bld, dst_bit_size - 1));
+         unsigned src0_bit_size = alu->src[0].src.ssa->bit_size;
+         assert(util_is_power_of_two_nonzero(src0_bit_size));
+         src = nir_iand(bld, src, nir_imm_int(bld, src0_bit_size - 1));
       }
 
       srcs[i] = src;
-- 
GitLab


From 4f2e6a95a9a82385f23242f83e85de94b0b13cb6 Mon Sep 17 00:00:00 2001
From: Rhys Perry <pendingchaos02@gmail.com>
Date: Thu, 26 Jun 2025 17:14:23 +0100
Subject: [PATCH 2/2] nir/search: fix dumping of conversions

Signed-off-by: Rhys Perry <pendingchaos02@gmail.com>
Reviewed-by: Georg Lehmann <dadschoorse@gmail.com>
---
 src/compiler/nir/nir_search.c | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/src/compiler/nir/nir_search.c b/src/compiler/nir/nir_search.c
index 8150c04e23898..f766b37aafd0f 100644
--- a/src/compiler/nir/nir_search.c
+++ b/src/compiler/nir/nir_search.c
@@ -606,8 +606,12 @@ dump_value(const nir_algebraic_table *table, const nir_search_value *val)
          CASE(b2f)
          CASE(b2i)
          CASE(i2i)
+         CASE(u2u)
+         CASE(f2f)
          CASE(f2i)
+         CASE(f2u)
          CASE(i2f)
+         CASE(u2f)
 #undef CASE
       default:
          fprintf(stderr, "%s", nir_op_infos[expr->opcode].name);
-- 
GitLab

