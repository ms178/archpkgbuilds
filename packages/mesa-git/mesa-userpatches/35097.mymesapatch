From a6b6e96d9ac0e3347115f39f8cadf4c4c5606fe9 Mon Sep 17 00:00:00 2001
From: Erik Faye-Lund <erik.faye-lund@collabora.com>
Date: Mon, 11 Dec 2023 17:03:31 +0100
Subject: [PATCH 1/9] mesa/main: fixup bad indent

---
 src/mesa/main/texparam.c | 26 +++++++++++++-------------
 1 file changed, 13 insertions(+), 13 deletions(-)

diff --git a/src/mesa/main/texparam.c b/src/mesa/main/texparam.c
index 80a350d7ef503..780de78713e0b 100644
--- a/src/mesa/main/texparam.c
+++ b/src/mesa/main/texparam.c
@@ -470,8 +470,8 @@ set_tex_parameteri(struct gl_context *ctx,
          goto invalid_param;
       if (texObj->Attrib.GenerateMipmap != params[0]) {
          /* no flush() */
-	 texObj->Attrib.GenerateMipmap = params[0] ? GL_TRUE : GL_FALSE;
-	 return GL_TRUE;
+         texObj->Attrib.GenerateMipmap = params[0] ? GL_TRUE : GL_FALSE;
+         return GL_TRUE;
       }
       return GL_FALSE;
 
@@ -619,13 +619,13 @@ set_tex_parameteri(struct gl_context *ctx,
          if (!_mesa_target_allows_setting_sampler_parameters(texObj->Target))
             goto invalid_dsa;
 
-	 if (decode == GL_DECODE_EXT || decode == GL_SKIP_DECODE_EXT) {
-	    if (texObj->Sampler.Attrib.sRGBDecode != decode) {
-	       flush(ctx);
-	       texObj->Sampler.Attrib.sRGBDecode = decode;
-	    }
-	    return GL_TRUE;
-	 }
+         if (decode == GL_DECODE_EXT || decode == GL_SKIP_DECODE_EXT) {
+            if (texObj->Sampler.Attrib.sRGBDecode != decode) {
+               flush(ctx);
+               texObj->Sampler.Attrib.sRGBDecode = decode;
+            }
+            return GL_TRUE;
+         }
       }
       goto invalid_pname;
 
@@ -1903,10 +1903,10 @@ get_tex_level_parameter_image(struct gl_context *ctx,
       case GL_TEXTURE_DEPTH_TYPE_ARB:
          if (!ctx->Extensions.ARB_texture_float)
             goto invalid_pname;
-	 if (_mesa_base_format_has_channel(img->_BaseFormat, pname))
-	    *params = _mesa_get_format_datatype(texFormat);
-	 else
-	    *params = GL_NONE;
+         if (_mesa_base_format_has_channel(img->_BaseFormat, pname))
+            *params = _mesa_get_format_datatype(texFormat);
+         else
+            *params = GL_NONE;
          break;
 
       /* GL_ARB_texture_multisample */
-- 
GitLab


From 564e5cccb9dc090d3eb4b2f75cbbd27febb13246 Mon Sep 17 00:00:00 2001
From: Erik Faye-Lund <erik.faye-lund@collabora.com>
Date: Mon, 11 Dec 2023 16:30:55 +0100
Subject: [PATCH 2/9] mesa/main: use _mesa_is_desktop_gl_compat-helper

---
 src/mesa/main/texparam.c | 26 +++++++++++++-------------
 1 file changed, 13 insertions(+), 13 deletions(-)

diff --git a/src/mesa/main/texparam.c b/src/mesa/main/texparam.c
index 780de78713e0b..784092f182910 100644
--- a/src/mesa/main/texparam.c
+++ b/src/mesa/main/texparam.c
@@ -463,7 +463,7 @@ set_tex_parameteri(struct gl_context *ctx,
       return GL_TRUE;
 
    case GL_GENERATE_MIPMAP_SGIS:
-      if (ctx->API != API_OPENGL_COMPAT && ctx->API != API_OPENGLES)
+      if (!_mesa_is_desktop_gl_compat(ctx) && ctx->API != API_OPENGLES)
          goto invalid_pname;
 
       if (params[0] && texObj->Target == GL_TEXTURE_EXTERNAL_OES)
@@ -824,7 +824,7 @@ set_tex_parameterf(struct gl_context *ctx,
       return GL_TRUE;
 
    case GL_TEXTURE_PRIORITY:
-      if (ctx->API != API_OPENGL_COMPAT)
+      if (!_mesa_is_desktop_gl_compat(ctx))
          goto invalid_pname;
 
       flush(ctx);
@@ -1825,7 +1825,7 @@ get_tex_level_parameter_image(struct gl_context *ctx,
 	 }
          break;
       case GL_TEXTURE_BORDER:
-         if (ctx->API != API_OPENGL_COMPAT)
+         if (!_mesa_is_desktop_gl_compat(ctx))
             goto invalid_pname;
          *params = img->Border;
          break;
@@ -1840,7 +1840,7 @@ get_tex_level_parameter_image(struct gl_context *ctx,
          break;
       case GL_TEXTURE_INTENSITY_SIZE:
       case GL_TEXTURE_LUMINANCE_SIZE:
-         if (ctx->API != API_OPENGL_COMPAT)
+         if (!_mesa_is_desktop_gl_compat(ctx))
             goto invalid_pname;
          if (_mesa_base_format_has_channel(img->_BaseFormat, pname)) {
             *params = _mesa_get_format_bits(texFormat, pname);
@@ -1893,7 +1893,7 @@ get_tex_level_parameter_image(struct gl_context *ctx,
       /* GL_ARB_texture_float */
       case GL_TEXTURE_LUMINANCE_TYPE_ARB:
       case GL_TEXTURE_INTENSITY_TYPE_ARB:
-         if (ctx->API != API_OPENGL_COMPAT)
+         if (!_mesa_is_desktop_gl_compat(ctx))
             goto invalid_pname;
          FALLTHROUGH;
       case GL_TEXTURE_RED_TYPE_ARB:
@@ -2376,13 +2376,13 @@ get_tex_parameterfv(struct gl_context *ctx,
          }
          break;
       case GL_TEXTURE_RESIDENT:
-         if (ctx->API != API_OPENGL_COMPAT)
+         if (!_mesa_is_desktop_gl_compat(ctx))
             goto invalid_pname;
 
          *params = 1.0F;
          break;
       case GL_TEXTURE_PRIORITY:
-         if (ctx->API != API_OPENGL_COMPAT)
+         if (!_mesa_is_desktop_gl_compat(ctx))
             goto invalid_pname;
 
          *params = obj->Attrib.Priority;
@@ -2414,7 +2414,7 @@ get_tex_parameterfv(struct gl_context *ctx,
          *params = obj->Sampler.Attrib.MaxAnisotropy;
          break;
       case GL_GENERATE_MIPMAP_SGIS:
-         if (ctx->API != API_OPENGL_COMPAT && ctx->API != API_OPENGLES)
+         if (!_mesa_is_desktop_gl_compat(ctx) && ctx->API != API_OPENGLES)
             goto invalid_pname;
 
 	 *params = (GLfloat) obj->Attrib.GenerateMipmap;
@@ -2435,7 +2435,7 @@ get_tex_parameterfv(struct gl_context *ctx,
          /* GL_DEPTH_TEXTURE_MODE_ARB is removed in core-profile and it has
           * never existed in OpenGL ES.
           */
-         if (ctx->API != API_OPENGL_COMPAT)
+         if (!_mesa_is_desktop_gl_compat(ctx))
             goto invalid_pname;
          *params = (GLfloat) obj->Attrib.DepthMode;
          break;
@@ -2634,13 +2634,13 @@ get_tex_parameteriv(struct gl_context *ctx,
          }
          break;
       case GL_TEXTURE_RESIDENT:
-         if (ctx->API != API_OPENGL_COMPAT)
+         if (!_mesa_is_desktop_gl_compat(ctx))
             goto invalid_pname;
 
          *params = 1;
          break;
       case GL_TEXTURE_PRIORITY:
-         if (ctx->API != API_OPENGL_COMPAT)
+         if (!_mesa_is_desktop_gl_compat(ctx))
             goto invalid_pname;
 
          *params = FLOAT_TO_INT(obj->Attrib.Priority);
@@ -2700,7 +2700,7 @@ get_tex_parameteriv(struct gl_context *ctx,
          *params = LCLAMPF(obj->Sampler.Attrib.MaxAnisotropy, INT32_MIN, INT32_MAX);
          break;
       case GL_GENERATE_MIPMAP_SGIS:
-         if (ctx->API != API_OPENGL_COMPAT && ctx->API != API_OPENGLES)
+         if (!_mesa_is_desktop_gl_compat(ctx) && ctx->API != API_OPENGLES)
             goto invalid_pname;
 
 	 *params = (GLint) obj->Attrib.GenerateMipmap;
@@ -2718,7 +2718,7 @@ get_tex_parameteriv(struct gl_context *ctx,
          *params = (GLint) obj->Sampler.Attrib.CompareFunc;
          break;
       case GL_DEPTH_TEXTURE_MODE_ARB:
-         if (ctx->API != API_OPENGL_COMPAT)
+         if (!_mesa_is_desktop_gl_compat(ctx))
             goto invalid_pname;
          *params = (GLint) obj->Attrib.DepthMode;
          break;
-- 
GitLab


From 297131028b90dc0e8c09e90f026d253a5c7baf16 Mon Sep 17 00:00:00 2001
From: Erik Faye-Lund <erik.faye-lund@collabora.com>
Date: Mon, 11 Dec 2023 16:55:21 +0100
Subject: [PATCH 3/9] mesa/main: use _mesa_has_Foo-helpers

These helpers already keep track of what API each extension is available
in. This makes the code easier to read and maintain. Let's use them.
---
 src/mesa/main/texparam.c | 45 +++++++++++++++++++++-------------------
 1 file changed, 24 insertions(+), 21 deletions(-)

diff --git a/src/mesa/main/texparam.c b/src/mesa/main/texparam.c
index 784092f182910..20fd5f39d1948 100644
--- a/src/mesa/main/texparam.c
+++ b/src/mesa/main/texparam.c
@@ -63,8 +63,6 @@
 static GLboolean
 validate_texture_wrap_mode(struct gl_context * ctx, GLenum target, GLenum wrap)
 {
-   const struct gl_extensions * const e = & ctx->Extensions;
-   const bool is_desktop_gl = _mesa_is_desktop_gl(ctx);
    bool supported;
 
    switch (wrap) {
@@ -92,8 +90,8 @@ validate_texture_wrap_mode(struct gl_context * ctx, GLenum target, GLenum wrap)
       break;
 
    case GL_MIRROR_CLAMP_EXT:
-      supported = is_desktop_gl
-         && (e->ATI_texture_mirror_once || e->EXT_texture_mirror_clamp)
+      supported = (_mesa_has_ATI_texture_mirror_once(ctx)
+         || _mesa_has_EXT_texture_mirror_clamp(ctx))
          && (target != GL_TEXTURE_RECTANGLE_NV)
          && (target != GL_TEXTURE_EXTERNAL_OES);
       break;
@@ -108,7 +106,7 @@ validate_texture_wrap_mode(struct gl_context * ctx, GLenum target, GLenum wrap)
       break;
 
    case GL_MIRROR_CLAMP_TO_BORDER_EXT:
-      supported = is_desktop_gl && e->EXT_texture_mirror_clamp
+      supported = _mesa_has_EXT_texture_mirror_clamp(ctx)
          && (target != GL_TEXTURE_RECTANGLE_NV)
          && (target != GL_TEXTURE_EXTERNAL_OES);
       break;
@@ -476,7 +474,8 @@ set_tex_parameteri(struct gl_context *ctx,
       return GL_FALSE;
 
    case GL_TEXTURE_COMPARE_MODE_ARB:
-      if ((_mesa_is_desktop_gl(ctx) && ctx->Extensions.ARB_shadow)
+      if (_mesa_has_ARB_shadow(ctx)
+          || _mesa_is_desktop_gl_core(ctx)
           || _mesa_is_gles3(ctx)) {
 
          if (!_mesa_target_allows_setting_sampler_parameters(texObj->Target))
@@ -495,7 +494,8 @@ set_tex_parameteri(struct gl_context *ctx,
       goto invalid_pname;
 
    case GL_TEXTURE_COMPARE_FUNC_ARB:
-      if ((_mesa_is_desktop_gl(ctx) && ctx->Extensions.ARB_shadow)
+      if (_mesa_has_ARB_shadow(ctx)
+          || _mesa_is_desktop_gl_core(ctx)
           || _mesa_is_gles3(ctx)) {
 
          if (!_mesa_target_allows_setting_sampler_parameters(texObj->Target))
@@ -560,7 +560,7 @@ set_tex_parameteri(struct gl_context *ctx,
       goto invalid_pname;
 
    case GL_TEXTURE_CROP_RECT_OES:
-      if (ctx->API != API_OPENGLES || !ctx->Extensions.OES_draw_texture)
+      if (!_mesa_has_OES_draw_texture(ctx))
          goto invalid_pname;
 
       texObj->CropRect[0] = params[0];
@@ -832,7 +832,7 @@ set_tex_parameterf(struct gl_context *ctx,
       return GL_TRUE;
 
    case GL_TEXTURE_MAX_ANISOTROPY_EXT:
-      if (ctx->Extensions.EXT_texture_filter_anisotropic) {
+      if (_mesa_has_EXT_texture_filter_anisotropic(ctx)) {
          if (!_mesa_target_allows_setting_sampler_parameters(texObj->Target))
             goto invalid_dsa;
 
@@ -1868,8 +1868,7 @@ get_tex_level_parameter_image(struct gl_context *ctx,
          *params = _mesa_get_format_bits(texFormat, pname);
          break;
       case GL_TEXTURE_SHARED_SIZE:
-         if (ctx->Version < 30 &&
-             !ctx->Extensions.EXT_texture_shared_exponent)
+         if (!_mesa_has_EXT_texture_shared_exponent(ctx))
             goto invalid_pname;
          *params = texFormat == MESA_FORMAT_R9G9B9E5_FLOAT ? 5 : 0;
          break;
@@ -2409,7 +2408,7 @@ get_tex_parameterfv(struct gl_context *ctx,
          *params = (GLfloat) obj->Attrib.MaxLevel;
          break;
       case GL_TEXTURE_MAX_ANISOTROPY_EXT:
-         if (!ctx->Extensions.EXT_texture_filter_anisotropic)
+         if (!_mesa_has_EXT_texture_filter_anisotropic(ctx))
             goto invalid_pname;
          *params = obj->Sampler.Attrib.MaxAnisotropy;
          break;
@@ -2420,13 +2419,15 @@ get_tex_parameterfv(struct gl_context *ctx,
 	 *params = (GLfloat) obj->Attrib.GenerateMipmap;
          break;
       case GL_TEXTURE_COMPARE_MODE_ARB:
-         if ((!_mesa_is_desktop_gl(ctx) || !ctx->Extensions.ARB_shadow)
+         if (!_mesa_has_ARB_shadow(ctx)
+             && !_mesa_is_desktop_gl_core(ctx)
              && !_mesa_is_gles3(ctx))
             goto invalid_pname;
          *params = (GLfloat) obj->Sampler.Attrib.CompareMode;
          break;
       case GL_TEXTURE_COMPARE_FUNC_ARB:
-         if ((!_mesa_is_desktop_gl(ctx) || !ctx->Extensions.ARB_shadow)
+         if (!_mesa_has_ARB_shadow(ctx)
+             && !_mesa_is_desktop_gl_core(ctx)
              && !_mesa_is_gles3(ctx))
             goto invalid_pname;
          *params = (GLfloat) obj->Sampler.Attrib.CompareFunc;
@@ -2452,7 +2453,7 @@ get_tex_parameterfv(struct gl_context *ctx,
          *params = obj->Sampler.Attrib.LodBias;
          break;
       case GL_TEXTURE_CROP_RECT_OES:
-         if (ctx->API != API_OPENGLES || !ctx->Extensions.OES_draw_texture)
+         if (!_mesa_has_OES_draw_texture(ctx))
             goto invalid_pname;
 
          params[0] = (GLfloat) obj->CropRect[0];
@@ -2519,7 +2520,7 @@ get_tex_parameterfv(struct gl_context *ctx,
          break;
 
       case GL_REQUIRED_TEXTURE_IMAGE_UNITS_OES:
-         if (!_mesa_is_gles(ctx) || !ctx->Extensions.OES_EGL_image_external)
+         if (!_mesa_has_OES_EGL_image_external(ctx))
             goto invalid_pname;
          *params = (GLfloat) obj->RequiredTextureImageUnits;
          break;
@@ -2685,7 +2686,7 @@ get_tex_parameteriv(struct gl_context *ctx,
          *params = obj->Attrib.MaxLevel;
          break;
       case GL_TEXTURE_MAX_ANISOTROPY_EXT:
-         if (!ctx->Extensions.EXT_texture_filter_anisotropic)
+         if (!_mesa_has_EXT_texture_filter_anisotropic(ctx))
             goto invalid_pname;
          /* GL spec 'Data Conversions' section specifies that floating-point
           * value in integer Get function is rounded to nearest integer
@@ -2706,13 +2707,15 @@ get_tex_parameteriv(struct gl_context *ctx,
 	 *params = (GLint) obj->Attrib.GenerateMipmap;
          break;
       case GL_TEXTURE_COMPARE_MODE_ARB:
-         if ((!_mesa_is_desktop_gl(ctx) || !ctx->Extensions.ARB_shadow)
+         if (!_mesa_has_ARB_shadow(ctx)
+             && !_mesa_is_desktop_gl_core(ctx)
              && !_mesa_is_gles3(ctx))
             goto invalid_pname;
          *params = (GLint) obj->Sampler.Attrib.CompareMode;
          break;
       case GL_TEXTURE_COMPARE_FUNC_ARB:
-         if ((!_mesa_is_desktop_gl(ctx) || !ctx->Extensions.ARB_shadow)
+         if (!_mesa_has_ARB_shadow(ctx)
+             && !_mesa_is_desktop_gl_core(ctx)
              && !_mesa_is_gles3(ctx))
             goto invalid_pname;
          *params = (GLint) obj->Sampler.Attrib.CompareFunc;
@@ -2745,7 +2748,7 @@ get_tex_parameteriv(struct gl_context *ctx,
          *params = LCLAMPF(obj->Sampler.Attrib.LodBias, INT32_MIN, INT32_MAX);
          break;
       case GL_TEXTURE_CROP_RECT_OES:
-         if (ctx->API != API_OPENGLES || !ctx->Extensions.OES_draw_texture)
+         if (!_mesa_has_OES_draw_texture(ctx))
             goto invalid_pname;
 
          params[0] = obj->CropRect[0];
@@ -2810,7 +2813,7 @@ get_tex_parameteriv(struct gl_context *ctx,
          break;
 
       case GL_REQUIRED_TEXTURE_IMAGE_UNITS_OES:
-         if (!_mesa_is_gles(ctx) || !ctx->Extensions.OES_EGL_image_external)
+         if (!_mesa_has_OES_EGL_image_external(ctx))
             goto invalid_pname;
          *params = obj->RequiredTextureImageUnits;
          break;
-- 
GitLab


From 38214a142ebbdda588be1d2750ace60e75caef88 Mon Sep 17 00:00:00 2001
From: Erik Faye-Lund <erik.faye-lund@collabora.com>
Date: Mon, 11 Dec 2023 17:12:57 +0100
Subject: [PATCH 4/9] mesa/main: do not allow non-gles1 enums in gles1

These enums are not allowed in GLES1, but would be incorrectly accepted
if running on hardware capable of the functionality even in GLES1. So
let's use the helper that also considers the API, which should fix the
problem.
---
 src/mesa/main/texparam.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/src/mesa/main/texparam.c b/src/mesa/main/texparam.c
index 20fd5f39d1948..d2634e1f62d9b 100644
--- a/src/mesa/main/texparam.c
+++ b/src/mesa/main/texparam.c
@@ -613,7 +613,7 @@ set_tex_parameteri(struct gl_context *ctx,
       goto invalid_pname;
 
    case GL_TEXTURE_SRGB_DECODE_EXT:
-      if (ctx->Extensions.EXT_texture_sRGB_decode) {
+      if (_mesa_has_EXT_texture_sRGB_decode(ctx)) {
          GLenum decode = params[0];
 
          if (!_mesa_target_allows_setting_sampler_parameters(texObj->Target))
@@ -630,7 +630,7 @@ set_tex_parameteri(struct gl_context *ctx,
       goto invalid_pname;
 
    case GL_TEXTURE_REDUCTION_MODE_EXT:
-      if (ctx->Extensions.EXT_texture_filter_minmax ||
+      if (_mesa_has_EXT_texture_filter_minmax(ctx) ||
           _mesa_has_ARB_texture_filter_minmax(ctx)) {
          GLenum mode = params[0];
 
-- 
GitLab


From 00460dc1bc906e5e19c16f5393894e1ed0c95f88 Mon Sep 17 00:00:00 2001
From: Erik Faye-Lund <erik.faye-lund@collabora.com>
Date: Mon, 11 Dec 2023 17:25:54 +0100
Subject: [PATCH 5/9] mesa/main: fix ARB_texture_float quirk

While ARB_texture_float is indeed supposed to disable clamping, it
should only do so on the APIs where the extension is supported.
Otherwise, we end up disabling clamping also when using GLES, which
isn't quite what we want.
---
 src/mesa/main/texparam.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/mesa/main/texparam.c b/src/mesa/main/texparam.c
index d2634e1f62d9b..5da2d39643b78 100644
--- a/src/mesa/main/texparam.c
+++ b/src/mesa/main/texparam.c
@@ -888,7 +888,7 @@ set_tex_parameterf(struct gl_context *ctx,
 
       flush(ctx);
       /* ARB_texture_float disables clamping */
-      if (ctx->Extensions.ARB_texture_float) {
+      if (_mesa_has_ARB_texture_float(ctx)) {
          memcpy(texObj->Sampler.Attrib.state.border_color.f, params, 4 * sizeof(float));
       } else {
          texObj->Sampler.Attrib.state.border_color.f[RCOMP] = CLAMP(params[0], 0.0F, 1.0F);
-- 
GitLab


From 570bd0e1d1c4abd38c7a1c73379fb48e97798fff Mon Sep 17 00:00:00 2001
From: Erik Faye-Lund <erik.faye-lund@collabora.com>
Date: Mon, 11 Dec 2023 17:29:26 +0100
Subject: [PATCH 6/9] mesa/main: clean up invalid pname-check

The logic is a bit easier to follow if we list the cases where this is
supported, rather than the cases where it isn't.
---
 src/mesa/main/texparam.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/src/mesa/main/texparam.c b/src/mesa/main/texparam.c
index 5da2d39643b78..70ba5ef79c21a 100644
--- a/src/mesa/main/texparam.c
+++ b/src/mesa/main/texparam.c
@@ -880,7 +880,8 @@ set_tex_parameterf(struct gl_context *ctx,
        * OpenGL ES 2.0+, it only exists in when GL_OES_texture_border_clamp is
        * enabled.  It is never available in OpenGL ES 1.x.
        */
-      if (_mesa_is_gles1(ctx))
+      if (!_mesa_is_desktop_gl(ctx) &&
+          !_mesa_has_OES_texture_border_clamp(ctx))
          goto invalid_pname;
 
       if (!_mesa_target_allows_setting_sampler_parameters(texObj->Target))
-- 
GitLab


From 533e1f312480189025c20c5d04e8250b2ba2534c Mon Sep 17 00:00:00 2001
From: Erik Faye-Lund <erik.faye-lund@collabora.com>
Date: Mon, 11 Dec 2023 17:49:12 +0100
Subject: [PATCH 7/9] mesa/main: do not allow desktop enums on gles

These enums aren't allowed on GLES, but we would happily allow them.
Let's fix that.
---
 src/mesa/main/texparam.c | 30 +++++++++++++++---------------
 1 file changed, 15 insertions(+), 15 deletions(-)

diff --git a/src/mesa/main/texparam.c b/src/mesa/main/texparam.c
index 70ba5ef79c21a..427797d5468be 100644
--- a/src/mesa/main/texparam.c
+++ b/src/mesa/main/texparam.c
@@ -1901,7 +1901,7 @@ get_tex_level_parameter_image(struct gl_context *ctx,
       case GL_TEXTURE_BLUE_TYPE_ARB:
       case GL_TEXTURE_ALPHA_TYPE_ARB:
       case GL_TEXTURE_DEPTH_TYPE_ARB:
-         if (!ctx->Extensions.ARB_texture_float)
+         if (!_mesa_has_ARB_texture_float(ctx))
             goto invalid_pname;
          if (_mesa_base_format_has_channel(img->_BaseFormat, pname))
             *params = _mesa_get_format_datatype(texFormat);
@@ -1911,13 +1911,13 @@ get_tex_level_parameter_image(struct gl_context *ctx,
 
       /* GL_ARB_texture_multisample */
       case GL_TEXTURE_SAMPLES:
-         if (!ctx->Extensions.ARB_texture_multisample)
+         if (!_mesa_has_ARB_texture_multisample(ctx))
             goto invalid_pname;
          *params = img->NumSamples;
          break;
 
       case GL_TEXTURE_FIXED_SAMPLE_LOCATIONS:
-         if (!ctx->Extensions.ARB_texture_multisample)
+         if (!_mesa_has_ARB_texture_multisample(ctx))
             goto invalid_pname;
          *params = img->FixedSampleLocations;
          break;
@@ -1928,19 +1928,19 @@ get_tex_level_parameter_image(struct gl_context *ctx,
 
       /* GL_ARB_texture_buffer_object */
       case GL_TEXTURE_BUFFER_DATA_STORE_BINDING:
-         if (!ctx->Extensions.ARB_texture_buffer_object)
+         if (!_mesa_has_ARB_texture_buffer_object(ctx))
             goto invalid_pname;
          *params = 0;
          break;
 
       /* GL_ARB_texture_buffer_range */
       case GL_TEXTURE_BUFFER_OFFSET:
-         if (!ctx->Extensions.ARB_texture_buffer_range)
+         if (!_mesa_has_ARB_texture_buffer_range(ctx))
             goto invalid_pname;
          *params = 0;
          break;
       case GL_TEXTURE_BUFFER_SIZE:
-         if (!ctx->Extensions.ARB_texture_buffer_range)
+         if (!_mesa_has_ARB_texture_buffer_range(ctx))
             goto invalid_pname;
          *params = 0;
          break;
@@ -2050,25 +2050,25 @@ get_tex_level_parameter_buffer(struct gl_context *ctx,
 
       /* GL_ARB_texture_buffer_range */
       case GL_TEXTURE_BUFFER_OFFSET:
-         if (!ctx->Extensions.ARB_texture_buffer_range)
+         if (!_mesa_has_ARB_texture_buffer_range(ctx))
             goto invalid_pname;
          *params = texObj->BufferOffset;
          break;
       case GL_TEXTURE_BUFFER_SIZE:
-         if (!ctx->Extensions.ARB_texture_buffer_range)
+         if (!_mesa_has_ARB_texture_buffer_range(ctx))
             goto invalid_pname;
          *params = (texObj->BufferSize == -1) ? bo->Size : texObj->BufferSize;
          break;
 
       /* GL_ARB_texture_multisample */
       case GL_TEXTURE_SAMPLES:
-         if (!ctx->Extensions.ARB_texture_multisample)
+         if (!_mesa_has_ARB_texture_multisample(ctx))
             goto invalid_pname;
          *params = 0;
          break;
 
       case GL_TEXTURE_FIXED_SAMPLE_LOCATIONS:
-         if (!ctx->Extensions.ARB_texture_multisample)
+         if (!_mesa_has_ARB_texture_multisample(ctx))
             goto invalid_pname;
          *params = GL_TRUE;
          break;
@@ -2089,7 +2089,7 @@ get_tex_level_parameter_buffer(struct gl_context *ctx,
       case GL_TEXTURE_LUMINANCE_TYPE_ARB:
       case GL_TEXTURE_INTENSITY_TYPE_ARB:
       case GL_TEXTURE_DEPTH_TYPE_ARB:
-         if (!ctx->Extensions.ARB_texture_float)
+         if (!_mesa_has_ARB_texture_float(ctx))
             goto invalid_pname;
          if (_mesa_base_format_has_channel(baseFormat, pname))
             *params = _mesa_get_format_datatype(texFormat);
@@ -2790,25 +2790,25 @@ get_tex_parameteriv(struct gl_context *ctx,
          break;
 
       case GL_TEXTURE_VIEW_MIN_LEVEL:
-         if (!ctx->Extensions.ARB_texture_view)
+         if (!_mesa_has_ARB_texture_view(ctx))
             goto invalid_pname;
          *params = (GLint) obj->Attrib.MinLevel;
          break;
 
       case GL_TEXTURE_VIEW_NUM_LEVELS:
-         if (!ctx->Extensions.ARB_texture_view)
+         if (!_mesa_has_ARB_texture_view(ctx))
             goto invalid_pname;
          *params = (GLint) obj->Attrib.NumLevels;
          break;
 
       case GL_TEXTURE_VIEW_MIN_LAYER:
-         if (!ctx->Extensions.ARB_texture_view)
+         if (!_mesa_has_ARB_texture_view(ctx))
             goto invalid_pname;
          *params = (GLint) obj->Attrib.MinLayer;
          break;
 
       case GL_TEXTURE_VIEW_NUM_LAYERS:
-         if (!ctx->Extensions.ARB_texture_view)
+         if (!_mesa_has_ARB_texture_view(ctx))
             goto invalid_pname;
          *params = (GLint) obj->Attrib.NumLayers;
          break;
-- 
GitLab


From 47289b00c4303d308b3af23573d41232aad5cd05 Mon Sep 17 00:00:00 2001
From: Erik Faye-Lund <erik.faye-lund@collabora.com>
Date: Tue, 12 Dec 2023 09:44:18 +0100
Subject: [PATCH 8/9] mesa/main: fix error-handling for gles1/2

---
 src/mesa/main/texparam.c | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

diff --git a/src/mesa/main/texparam.c b/src/mesa/main/texparam.c
index 427797d5468be..03ff3d0967f03 100644
--- a/src/mesa/main/texparam.c
+++ b/src/mesa/main/texparam.c
@@ -1681,7 +1681,7 @@ _mesa_legal_get_tex_level_parameter_target(struct gl_context *ctx, GLenum target
    case GL_TEXTURE_3D:
       return GL_TRUE;
    case GL_TEXTURE_2D_ARRAY_EXT:
-      return ctx->Extensions.EXT_texture_array;
+      return _mesa_has_EXT_texture_array(ctx) || _mesa_is_gles3(ctx);
    case GL_TEXTURE_CUBE_MAP_POSITIVE_X:
    case GL_TEXTURE_CUBE_MAP_NEGATIVE_X:
    case GL_TEXTURE_CUBE_MAP_POSITIVE_Y:
@@ -2527,13 +2527,13 @@ get_tex_parameterfv(struct gl_context *ctx,
          break;
 
       case GL_TEXTURE_SRGB_DECODE_EXT:
-         if (!ctx->Extensions.EXT_texture_sRGB_decode)
+         if (!_mesa_has_EXT_texture_sRGB_decode(ctx))
             goto invalid_pname;
          *params = (GLfloat) obj->Sampler.Attrib.sRGBDecode;
          break;
 
       case GL_TEXTURE_REDUCTION_MODE_EXT:
-         if (!ctx->Extensions.EXT_texture_filter_minmax &&
+         if (!_mesa_has_EXT_texture_filter_minmax(ctx) &&
              !_mesa_has_ARB_texture_filter_minmax(ctx))
             goto invalid_pname;
          *params = (GLfloat) obj->Sampler.Attrib.ReductionMode;
@@ -2820,13 +2820,13 @@ get_tex_parameteriv(struct gl_context *ctx,
          break;
 
       case GL_TEXTURE_SRGB_DECODE_EXT:
-         if (!ctx->Extensions.EXT_texture_sRGB_decode)
+         if (!_mesa_has_EXT_texture_sRGB_decode(ctx))
             goto invalid_pname;
          *params = obj->Sampler.Attrib.sRGBDecode;
          break;
 
       case GL_TEXTURE_REDUCTION_MODE_EXT:
-         if (!ctx->Extensions.EXT_texture_filter_minmax &&
+         if (!_mesa_has_EXT_texture_filter_minmax(ctx) &&
              !_mesa_has_ARB_texture_filter_minmax(ctx))
             goto invalid_pname;
          *params = obj->Sampler.Attrib.ReductionMode;
-- 
GitLab


From 576d2a627a9aff5f0b1d1079b0adac5640150365 Mon Sep 17 00:00:00 2001
From: Erik Faye-Lund <erik.faye-lund@collabora.com>
Date: Tue, 12 Dec 2023 09:48:20 +0100
Subject: [PATCH 9/9] mesa/main: fix enum error

None of these should be allowed in GLES before version 3.1
---
 src/mesa/main/texparam.c | 7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)

diff --git a/src/mesa/main/texparam.c b/src/mesa/main/texparam.c
index 03ff3d0967f03..27fbe9fcdbe05 100644
--- a/src/mesa/main/texparam.c
+++ b/src/mesa/main/texparam.c
@@ -1691,7 +1691,8 @@ _mesa_legal_get_tex_level_parameter_target(struct gl_context *ctx, GLenum target
       return GL_TRUE;
    case GL_TEXTURE_2D_MULTISAMPLE:
    case GL_TEXTURE_2D_MULTISAMPLE_ARRAY:
-      return ctx->Extensions.ARB_texture_multisample;
+      return _mesa_has_ARB_texture_multisample(ctx) ||
+             _mesa_has_OES_texture_storage_multisample_2d_array(ctx);
    case GL_TEXTURE_BUFFER:
       /* GetTexLevelParameter accepts GL_TEXTURE_BUFFER in GL 3.1+ contexts,
        * but not in earlier versions that expose ARB_texture_buffer_object.
@@ -2540,7 +2541,7 @@ get_tex_parameterfv(struct gl_context *ctx,
          break;
 
       case GL_IMAGE_FORMAT_COMPATIBILITY_TYPE:
-         if (!ctx->Extensions.ARB_shader_image_load_store &&
+         if (!_mesa_has_ARB_shader_image_load_store(ctx) &&
              !_mesa_is_gles31(ctx))
             goto invalid_pname;
          *params = (GLfloat) obj->Attrib.ImageFormatCompatibilityType;
@@ -2833,7 +2834,7 @@ get_tex_parameteriv(struct gl_context *ctx,
          break;
 
       case GL_IMAGE_FORMAT_COMPATIBILITY_TYPE:
-         if (!ctx->Extensions.ARB_shader_image_load_store &&
+         if (!_mesa_has_ARB_shader_image_load_store(ctx) &&
              !_mesa_is_gles31(ctx))
             goto invalid_pname;
          *params = obj->Attrib.ImageFormatCompatibilityType;
-- 
GitLab

