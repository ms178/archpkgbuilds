From dea66cc4085b6f8e0687366d92f8919106c864cb Mon Sep 17 00:00:00 2001
From: Samuel Pitoiset <samuel.pitoiset@gmail.com>
Date: Fri, 16 Feb 2024 16:33:57 +0100
Subject: [PATCH 1/2] radv: stop using conditional rendering internally when
 preprocessing DGC

Preprocess and execute can be executed on different queue families. If
preprocess is executed on GFX and the indirect count optimization is
enabled, this will generate an empty cmdbuf. Expect GPU hangs if this
DGC IB is then executed on ACE.

Signed-off-by: Samuel Pitoiset <samuel.pitoiset@gmail.com>
---
 src/amd/vulkan/radv_device_generated_commands.c | 16 ----------------
 1 file changed, 16 deletions(-)

diff --git a/src/amd/vulkan/radv_device_generated_commands.c b/src/amd/vulkan/radv_device_generated_commands.c
index eab1e9cd06c90..0b978519971d4 100644
--- a/src/amd/vulkan/radv_device_generated_commands.c
+++ b/src/amd/vulkan/radv_device_generated_commands.c
@@ -1628,23 +1628,7 @@ radv_CmdPreprocessGeneratedCommandsNV(VkCommandBuffer commandBuffer,
    if (!radv_dgc_can_preprocess(layout, pipeline))
       return;
 
-   const bool use_predication = radv_use_dgc_predication(cmd_buffer, pGeneratedCommandsInfo);
-
-   if (use_predication) {
-      VK_FROM_HANDLE(radv_buffer, seq_count_buffer, pGeneratedCommandsInfo->sequencesCountBuffer);
-      const uint64_t va = radv_buffer_get_va(seq_count_buffer->bo) + seq_count_buffer->offset +
-                          pGeneratedCommandsInfo->sequencesCountOffset;
-
-      radv_begin_conditional_rendering(cmd_buffer, va, true);
-      cmd_buffer->state.predicating = true;
-   }
-
    radv_prepare_dgc(cmd_buffer, pGeneratedCommandsInfo);
-
-   if (use_predication) {
-      cmd_buffer->state.predicating = false;
-      radv_end_conditional_rendering(cmd_buffer);
-   }
 }
 
 /* Always need to call this directly before draw due to dependence on bound state. */
-- 
GitLab


From d4374a7557a99337d9561681826f546ba888ed97 Mon Sep 17 00:00:00 2001
From: Samuel Pitoiset <samuel.pitoiset@gmail.com>
Date: Fri, 16 Feb 2024 16:41:23 +0100
Subject: [PATCH 2/2] radv: disable conditional rendering if enabled when
 preprocessing DGC

vkCmdPreprocessGeneratedCommandsNV() shouldn't be affected by
conditional rendering. Confirmed with Ricardo after writing some
tests against NVIDIA.

Signed-off-by: Samuel Pitoiset <samuel.pitoiset@gmail.com>
---
 src/amd/vulkan/radv_device_generated_commands.c | 10 ++++++++++
 1 file changed, 10 insertions(+)

diff --git a/src/amd/vulkan/radv_device_generated_commands.c b/src/amd/vulkan/radv_device_generated_commands.c
index 0b978519971d4..30f63e7ff0fbe 100644
--- a/src/amd/vulkan/radv_device_generated_commands.c
+++ b/src/amd/vulkan/radv_device_generated_commands.c
@@ -1624,11 +1624,21 @@ radv_CmdPreprocessGeneratedCommandsNV(VkCommandBuffer commandBuffer,
    VK_FROM_HANDLE(radv_cmd_buffer, cmd_buffer, commandBuffer);
    VK_FROM_HANDLE(radv_indirect_command_layout, layout, pGeneratedCommandsInfo->indirectCommandsLayout);
    VK_FROM_HANDLE(radv_pipeline, pipeline, pGeneratedCommandsInfo->pipeline);
+   bool old_predicating;
 
    if (!radv_dgc_can_preprocess(layout, pipeline))
       return;
 
+   /* VK_EXT_conditional_rendering says that copy commands should not be
+    * affected by conditional rendering.
+    */
+   old_predicating = cmd_buffer->state.predicating;
+   cmd_buffer->state.predicating = false;
+
    radv_prepare_dgc(cmd_buffer, pGeneratedCommandsInfo);
+
+   /* Restore conditional rendering. */
+   cmd_buffer->state.predicating = old_predicating;
 }
 
 /* Always need to call this directly before draw due to dependence on bound state. */
-- 
GitLab

