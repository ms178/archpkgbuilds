From b2eea121577b999298e43ab60787a325b806babd Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Marek=20Ol=C5=A1=C3=A1k?= <marek.olsak@amd.com>
Date: Tue, 9 Aug 2022 19:10:35 -0400
Subject: [PATCH 1/6] glthread: unbind framebuffers in glDeleteFramebuffers

Tests:
    dEQP-GLES2.functional.lifetime.delete_bound.framebuffer
    dEQP-GLES2.functional.state_query.integers.framebuffer_binding_getinteger

Fixes: e48f676835d - glthread: don't sync for more glGetIntegerv enums for glretrace
---
 src/mapi/glapi/gen/ARB_framebuffer_object.xml |  3 ++-
 src/mesa/main/glthread_marshal.h              | 14 ++++++++++++++
 2 files changed, 16 insertions(+), 1 deletion(-)

diff --git a/src/mapi/glapi/gen/ARB_framebuffer_object.xml b/src/mapi/glapi/gen/ARB_framebuffer_object.xml
index 7cacf14a8a53..c7a117dcd024 100644
--- a/src/mapi/glapi/gen/ARB_framebuffer_object.xml
+++ b/src/mapi/glapi/gen/ARB_framebuffer_object.xml
@@ -209,7 +209,8 @@
         <glx rop="236"/>
     </function>
 
-    <function name="DeleteFramebuffers" es2="2.0">
+    <function name="DeleteFramebuffers" es2="2.0"
+              marshal_call_after="_mesa_glthread_DeleteFramebuffers(ctx, n, framebuffers);">
         <param name="n" type="GLsizei" counter="true"/>
         <param name="framebuffers" type="const GLuint *" count="n"/>
 	<glx rop="4320"/>
diff --git a/src/mesa/main/glthread_marshal.h b/src/mesa/main/glthread_marshal.h
index 80022c1cea67..5268ae2a472e 100644
--- a/src/mesa/main/glthread_marshal.h
+++ b/src/mesa/main/glthread_marshal.h
@@ -779,6 +779,20 @@ _mesa_glthread_DeleteLists(struct gl_context *ctx, GLsizei range)
    _mesa_glthread_flush_batch(ctx);
 }
 
+static inline void
+_mesa_glthread_DeleteFramebuffers(struct gl_context *ctx, GLsizei n,
+                                  const GLuint *ids)
+{
+   if (ctx->GLThread.CurrentDrawFramebuffer) {
+      for (int i = 0; i < n; i++) {
+         if (ctx->GLThread.CurrentDrawFramebuffer == ids[i]) {
+            ctx->GLThread.CurrentDrawFramebuffer = 0;
+            break;
+         }
+      }
+   }
+}
+
 struct marshal_cmd_CallList
 {
    struct marshal_cmd_base cmd_base;
-- 
GitLab


From 63cac5e2a2da494d048ac29c4495150883c2f8b1 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Marek=20Ol=C5=A1=C3=A1k?= <marek.olsak@amd.com>
Date: Tue, 9 Aug 2022 19:15:35 -0400
Subject: [PATCH 2/6] glthread: call _mesa_glthread_DeleteBuffers
 unconditionally

Deleted buffers were not unbound in glthread.

Fixes: 4fa24747b9089b - glthread: call _mesa_glthread_BindBuffer unconditionally
---
 src/mapi/glapi/gen/gl_API.xml | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/mapi/glapi/gen/gl_API.xml b/src/mapi/glapi/gen/gl_API.xml
index ebef7bed3972..bffb07232879 100644
--- a/src/mapi/glapi/gen/gl_API.xml
+++ b/src/mapi/glapi/gen/gl_API.xml
@@ -5116,7 +5116,7 @@
     </function>
 
     <function name="DeleteBuffers" es1="1.1" es2="2.0" no_error="true"
-              marshal_call_after="if (COMPAT) _mesa_glthread_DeleteBuffers(ctx, n, buffer);">
+              marshal_call_after="_mesa_glthread_DeleteBuffers(ctx, n, buffer);">
         <param name="n" type="GLsizei" counter="true"/>
         <param name="buffer" type="const GLuint *" count="n"/>
         <glx ignore="true"/>
-- 
GitLab


From bd1028857328d7d5f533c18cf0bed18f8f5221de Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Marek=20Ol=C5=A1=C3=A1k?= <marek.olsak@amd.com>
Date: Tue, 9 Aug 2022 19:45:08 -0400
Subject: [PATCH 3/6] glthread: track GL_READ_FRAMEBUFFER bindings too

---
 src/mapi/glapi/gen/ARB_framebuffer_object.xml |  2 +-
 src/mesa/main/glthread.h                      |  1 +
 src/mesa/main/glthread_get.c                  |  5 +++-
 src/mesa/main/glthread_marshal.h              | 23 ++++++++++++++++---
 4 files changed, 26 insertions(+), 5 deletions(-)

diff --git a/src/mapi/glapi/gen/ARB_framebuffer_object.xml b/src/mapi/glapi/gen/ARB_framebuffer_object.xml
index c7a117dcd024..500c8f112030 100644
--- a/src/mapi/glapi/gen/ARB_framebuffer_object.xml
+++ b/src/mapi/glapi/gen/ARB_framebuffer_object.xml
@@ -203,7 +203,7 @@
     </function>
 
     <function name="BindFramebuffer" es2="2.0"
-              marshal_call_after="if (target == GL_FRAMEBUFFER || target == GL_DRAW_FRAMEBUFFER) ctx->GLThread.CurrentDrawFramebuffer = framebuffer;">
+              marshal_call_after="_mesa_glthread_BindFramebuffer(ctx, target, framebuffer);">
         <param name="target" type="GLenum"/>
         <param name="framebuffer" type="GLuint"/>
         <glx rop="236"/>
diff --git a/src/mesa/main/glthread.h b/src/mesa/main/glthread.h
index ee15d5f48650..de9783443b0c 100644
--- a/src/mesa/main/glthread.h
+++ b/src/mesa/main/glthread.h
@@ -236,6 +236,7 @@ struct glthread_state
    bool CullFace;
 
    GLuint CurrentDrawFramebuffer;
+   GLuint CurrentReadFramebuffer;
    GLuint CurrentProgram;
 };
 
diff --git a/src/mesa/main/glthread_get.c b/src/mesa/main/glthread_get.c
index ed56d6a89706..2c85d605ef9d 100644
--- a/src/mesa/main/glthread_get.c
+++ b/src/mesa/main/glthread_get.c
@@ -65,9 +65,12 @@ _mesa_marshal_GetIntegerv(GLenum pname, GLint *p)
    case GL_DRAW_INDIRECT_BUFFER_BINDING:
       *p = ctx->GLThread.CurrentDrawIndirectBufferName;
       return;
-   case GL_DRAW_FRAMEBUFFER_BINDING: /* == GL_FRAMEBUFFER_BINDING */
+   case GL_DRAW_FRAMEBUFFER_BINDING:
       *p = ctx->GLThread.CurrentDrawFramebuffer;
       return;
+   case GL_READ_FRAMEBUFFER_BINDING:
+      *p = ctx->GLThread.CurrentReadFramebuffer;
+      return;
    case GL_PIXEL_PACK_BUFFER_BINDING:
       *p = ctx->GLThread.CurrentPixelPackBufferName;
       return;
diff --git a/src/mesa/main/glthread_marshal.h b/src/mesa/main/glthread_marshal.h
index 5268ae2a472e..c27412980be0 100644
--- a/src/mesa/main/glthread_marshal.h
+++ b/src/mesa/main/glthread_marshal.h
@@ -779,16 +779,33 @@ _mesa_glthread_DeleteLists(struct gl_context *ctx, GLsizei range)
    _mesa_glthread_flush_batch(ctx);
 }
 
+static inline void
+_mesa_glthread_BindFramebuffer(struct gl_context *ctx, GLenum target, GLuint id)
+{
+   switch (target) {
+   case GL_FRAMEBUFFER:
+      ctx->GLThread.CurrentDrawFramebuffer = id;
+      ctx->GLThread.CurrentReadFramebuffer = id;
+      break;
+   case GL_DRAW_FRAMEBUFFER:
+      ctx->GLThread.CurrentDrawFramebuffer = id;
+      break;
+   case GL_READ_FRAMEBUFFER:
+      ctx->GLThread.CurrentReadFramebuffer = id;
+      break;
+   }
+}
+
 static inline void
 _mesa_glthread_DeleteFramebuffers(struct gl_context *ctx, GLsizei n,
                                   const GLuint *ids)
 {
    if (ctx->GLThread.CurrentDrawFramebuffer) {
       for (int i = 0; i < n; i++) {
-         if (ctx->GLThread.CurrentDrawFramebuffer == ids[i]) {
+         if (ctx->GLThread.CurrentDrawFramebuffer == ids[i])
             ctx->GLThread.CurrentDrawFramebuffer = 0;
-            break;
-         }
+         if (ctx->GLThread.CurrentReadFramebuffer == ids[i])
+            ctx->GLThread.CurrentReadFramebuffer = 0;
       }
    }
 }
-- 
GitLab


From 1ebc5c06713710dc62896be276c33eba0719b0e0 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Marek=20Ol=C5=A1=C3=A1k?= <marek.olsak@amd.com>
Date: Tue, 9 Aug 2022 19:46:37 -0400
Subject: [PATCH 4/6] glthread: track glBindFramebufferEXT, not just
 glBindFramebuffer

---
 src/mapi/glapi/gen/EXT_framebuffer_object.xml | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/src/mapi/glapi/gen/EXT_framebuffer_object.xml b/src/mapi/glapi/gen/EXT_framebuffer_object.xml
index 6c0e54af1c99..6dd90b87971b 100644
--- a/src/mapi/glapi/gen/EXT_framebuffer_object.xml
+++ b/src/mapi/glapi/gen/EXT_framebuffer_object.xml
@@ -109,7 +109,8 @@
 	<return type="GLboolean"/>
     </function>
 
-    <function name="BindFramebufferEXT">
+    <function name="BindFramebufferEXT"
+              marshal_call_after="_mesa_glthread_BindFramebuffer(ctx, target, framebuffer);">
         <param name="target" type="GLenum"/>
         <param name="framebuffer" type="GLuint"/>
         <glx rop="4319"/>
-- 
GitLab


From 8f368d42df8e05b002f782152c7edcbe474005b8 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Marek=20Ol=C5=A1=C3=A1k?= <marek.olsak@amd.com>
Date: Tue, 9 Aug 2022 21:23:22 -0400
Subject: [PATCH 5/6] glthread: add missing code for GL_ARB_sparse_texture

---
 src/mesa/main/glthread_marshal.h | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/src/mesa/main/glthread_marshal.h b/src/mesa/main/glthread_marshal.h
index c27412980be0..2db4be1a28b2 100644
--- a/src/mesa/main/glthread_marshal.h
+++ b/src/mesa/main/glthread_marshal.h
@@ -182,6 +182,9 @@ _mesa_tex_param_enum_to_count(GLenum pname)
    case GL_TEXTURE_MAX_ANISOTROPY_EXT:
    case GL_TEXTURE_LOD_BIAS:
    case GL_TEXTURE_TILING_EXT:
+   case GL_TEXTURE_SPARSE_ARB:
+   case GL_VIRTUAL_PAGE_SIZE_INDEX_ARB:
+   case GL_NUM_SPARSE_LEVELS_ARB:
       return 1;
    case GL_TEXTURE_CROP_RECT_OES:
    case GL_TEXTURE_SWIZZLE_RGBA:
-- 
GitLab


From 149d26d7a38529a1c8022335bd4cc715f40ba9c3 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Marek=20Ol=C5=A1=C3=A1k?= <marek.olsak@amd.com>
Date: Tue, 9 Aug 2022 20:41:01 -0400
Subject: [PATCH 6/6] util/xmlconfig: allow drivers to override option values

This corrects the issue that we can't have DRI_CONF_MESA_GLTHREAD(false)
in gallium and then DRI_CONF_MESA_GLTHREAD(true) in drivers.
---
 src/util/xmlconfig.c | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/src/util/xmlconfig.c b/src/util/xmlconfig.c
index 491dc4be64bf..855b869d8b1c 100644
--- a/src/util/xmlconfig.c
+++ b/src/util/xmlconfig.c
@@ -347,7 +347,10 @@ driParseOptionInfo(driOptionCache *info,
       driOptionInfo *optinfo = &info->info[i];
       driOptionValue *optval = &info->values[i];
 
-      assert(!optinfo->name); /* No duplicate options in your list. */
+      if (optinfo->name) {
+         /* Duplicate options override the value, but the type must match. */
+         assert(optinfo->type == opt->info.type);
+      }
 
       optinfo->type = opt->info.type;
       optinfo->range = opt->info.range;
-- 
GitLab

