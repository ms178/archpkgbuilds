From 0dbc1af0416c94ea2284406fe5290a4d3a204786 Mon Sep 17 00:00:00 2001
From: Robert Foss <rfoss@kernel.org>
Date: Thu, 9 Nov 2023 15:16:46 +0100
Subject: [PATCH 1/3] egl/surfaceless: Fix EGL_DEVICE_EXT implementation

The native_display checks are incorrect and partially never
executed due to native_display always being NULL.

Fixes: 1efaa858890 ("egl: Fix attrib_list[0] == EGL_NONE check")
Signed-off-by: Robert Foss <rfoss@kernel.org>
Reviewed-by: Adam Jackson <ajax@redhat.com>
---
 src/egl/main/egldisplay.c | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

diff --git a/src/egl/main/egldisplay.c b/src/egl/main/egldisplay.c
index dd4926ce2abcc..4eadb8f10aa70 100644
--- a/src/egl/main/egldisplay.c
+++ b/src/egl/main/egldisplay.c
@@ -642,6 +642,7 @@ _EGLDisplay *
 _eglGetSurfacelessDisplay(void *native_display, const EGLAttrib *attrib_list)
 {
    _EGLDisplay *dpy;
+   _EGLDevice *dev = NULL;
 
    /* Any native display must be an EGLDeviceEXT we know about */
    if (native_display != NULL) {
@@ -657,8 +658,8 @@ _eglGetSurfacelessDisplay(void *native_display, const EGLAttrib *attrib_list)
 
          switch (attrib) {
          case EGL_DEVICE_EXT:
-            if ((native_display && native_display != (void *)value) ||
-                (native_display != _eglLookupDevice(native_display))) {
+            dev = _eglLookupDevice((void *)value);
+            if (!dev) {
                _eglError(EGL_BAD_DEVICE_EXT, "eglGetPlatformDisplay");
                return NULL;
             }
@@ -671,10 +672,9 @@ _eglGetSurfacelessDisplay(void *native_display, const EGLAttrib *attrib_list)
       }
    }
 
-   dpy =
-      _eglFindDisplay(_EGL_PLATFORM_SURFACELESS, native_display, attrib_list);
+   dpy = _eglFindDisplay(_EGL_PLATFORM_SURFACELESS, NULL, attrib_list);
    if (dpy) {
-      dpy->Device = native_display;
+      dpy->Device = dev;
    }
 
    return dpy;
-- 
GitLab


From 34f0712b8b5d26175df2d1d0b96e233e49943a15 Mon Sep 17 00:00:00 2001
From: Robert Foss <rfoss@kernel.org>
Date: Thu, 7 Dec 2023 15:52:20 +0100
Subject: [PATCH 2/3] egl: Add _eglHasAttrib() function

Provide a simple function for checking if an EGLDisplay
is using a specific EGLAttrib.

This can be useful when trying to inhibit platform behavior
depending on the EGLAttribs provided.

Signed-off-by: Robert Foss <rfoss@kernel.org>
Reviewed-by: Adam Jackson <ajax@redhat.com>
---
 src/egl/main/egldisplay.h | 17 +++++++++++++++++
 1 file changed, 17 insertions(+)

diff --git a/src/egl/main/egldisplay.h b/src/egl/main/egldisplay.h
index ea75cd33d9580..330eb198ecbcd 100644
--- a/src/egl/main/egldisplay.h
+++ b/src/egl/main/egldisplay.h
@@ -257,6 +257,23 @@ _eglGetDisplayHandle(_EGLDisplay *disp)
    return (EGLDisplay)((disp) ? disp : EGL_NO_DISPLAY);
 }
 
+static inline EGLBoolean
+_eglHasAttrib(_EGLDisplay *disp, EGLAttrib attrib)
+{
+   EGLAttrib *attribs = disp->Options.Attribs;
+
+   if (!attribs) {
+      return EGL_FALSE;
+   }
+
+   for (int i = 0; attribs[i] != EGL_NONE; i += 2) {
+      if (attrib == attribs[i]) {
+         return EGL_TRUE;
+      }
+   }
+   return EGL_FALSE;
+}
+
 extern void
 _eglInitResource(_EGLResource *res, EGLint size, _EGLDisplay *disp);
 
-- 
GitLab


From 7b7529ef54d45a09aa0b8af966d879fcb7b2f96e Mon Sep 17 00:00:00 2001
From: Robert Foss <rfoss@kernel.org>
Date: Thu, 9 Nov 2023 15:22:28 +0100
Subject: [PATCH 3/3] egl/surfaceless: Don't overwrire disp->Device if using
 EGL_DEVICE_EXT

Make sure that disp->Device is never overwritten during probe
function calls.

If EGL_DEVICE_EXT is provided, the probing should rather fail
than switch the device being used.

Signed-off-by: Robert Foss <rfoss@kernel.org>
Reviewed-by: Adam Jackson <ajax@redhat.com>
---
 src/egl/drivers/dri2/platform_surfaceless.c | 12 +++++++++++-
 1 file changed, 11 insertions(+), 1 deletion(-)

diff --git a/src/egl/drivers/dri2/platform_surfaceless.c b/src/egl/drivers/dri2/platform_surfaceless.c
index 923eb1c919a94..8141a110159ed 100644
--- a/src/egl/drivers/dri2/platform_surfaceless.c
+++ b/src/egl/drivers/dri2/platform_surfaceless.c
@@ -231,6 +231,10 @@ surfaceless_probe_device(_EGLDisplay *disp, bool swrast, bool zink)
       if (!_eglDeviceSupports(dev_list, _EGL_DEVICE_DRM))
          goto next;
 
+      if (_eglHasAttrib(disp, EGL_DEVICE_EXT) && dev_list != disp->Device) {
+         goto next;
+      }
+
       device = _eglDeviceDrm(dev_list);
       assert(device);
 
@@ -286,9 +290,15 @@ static bool
 surfaceless_probe_device_sw(_EGLDisplay *disp)
 {
    struct dri2_egl_display *dri2_dpy = dri2_egl_display(disp);
+   struct _egl_device *device = _eglFindDevice(dri2_dpy->fd_render_gpu, true);
 
    dri2_dpy->fd_render_gpu = -1;
-   disp->Device = _eglFindDevice(dri2_dpy->fd_render_gpu, true);
+
+   if (_eglHasAttrib(disp, EGL_DEVICE_EXT) && disp->Device != device) {
+      return false;
+   }
+
+   disp->Device = device;
    assert(disp->Device);
 
    dri2_dpy->driver_name = strdup(disp->Options.Zink ? "zink" : "swrast");
-- 
GitLab

