From bc1e7022867879d6b789633e3f27d50755276d64 Mon Sep 17 00:00:00 2001
From: Mike Blumenkrantz <michael.blumenkrantz@gmail.com>
Date: Mon, 27 Feb 2023 12:41:11 -0500
Subject: [PATCH] vulkan/wsi: fix crash in failed swapchain creation

wsi_swapchain_finish() can be called before the wsi pointer is set

ref #6578

cc: mesa-stable
---
 src/vulkan/wsi/wsi_common.c | 22 ++++++++++++----------
 1 file changed, 12 insertions(+), 10 deletions(-)

diff --git a/src/vulkan/wsi/wsi_common.c b/src/vulkan/wsi/wsi_common.c
index a9895d91e029..ae682dab1587 100644
--- a/src/vulkan/wsi/wsi_common.c
+++ b/src/vulkan/wsi/wsi_common.c
@@ -520,16 +520,18 @@ wsi_swapchain_finish(struct wsi_swapchain *chain)
 
       vk_free(&chain->alloc, chain->blit.semaphores);
    }
-   chain->wsi->DestroySemaphore(chain->device, chain->dma_buf_semaphore,
-                                &chain->alloc);
-   chain->wsi->DestroySemaphore(chain->device, chain->present_id_timeline,
-                                &chain->alloc);
-
-   int cmd_pools_count = chain->blit.queue != VK_NULL_HANDLE ?
-      1 : chain->wsi->queue_family_count;
-   for (uint32_t i = 0; i < cmd_pools_count; i++) {
-      chain->wsi->DestroyCommandPool(chain->device, chain->cmd_pools[i],
-                                     &chain->alloc);
+   if (chain->wsi) {
+      chain->wsi->DestroySemaphore(chain->device, chain->dma_buf_semaphore,
+                                 &chain->alloc);
+      chain->wsi->DestroySemaphore(chain->device, chain->present_id_timeline,
+                                 &chain->alloc);
+
+      int cmd_pools_count = chain->blit.queue != VK_NULL_HANDLE ?
+         1 : chain->wsi->queue_family_count;
+      for (uint32_t i = 0; i < cmd_pools_count; i++) {
+         chain->wsi->DestroyCommandPool(chain->device, chain->cmd_pools[i],
+                                       &chain->alloc);
+      }
    }
    vk_free(&chain->alloc, chain->cmd_pools);
 
-- 
GitLab

