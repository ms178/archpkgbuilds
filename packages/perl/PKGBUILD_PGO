# Maintainer: CachyOS <contact@cachyos.org>
# Contributor: Allan McRae <allan@archlinux.org>

pkgname=perl
pkgver=5.42.0
_baseversion="${pkgver%.*}"
pkgrel=2.1
pkgdesc="A highly capable, feature-rich programming language with Clang PGO"
arch=(x86_64)
license=('GPL' 'PerlArtistic')
url="https://www.perl.org"
depends=('gdbm' 'db5.3' 'glibc' 'libxcrypt' 'libxcrypt-compat')
checkdepends=('procps-ng')
source=(https://www.cpan.org/src/5.0/perl-${pkgver}.tar.xz
        clearlinux.patch
        config.over
        db_config.in
        perlbin.sh
        perlbin.csh
        perlbin.fish
        detect-old-perl-modules.sh
        detect-old-perl-modules.hook)
sha512sums=('e9f286433b490453f6b4dcc4285d68846170e5a25170abdee784b168c8198f80456885f470217a943a45610817b99351d3b7f168f18251e39c4a8996d9266185'
            '1c924b5bf7413d097f62638a574d7decf36d98598b84cdb5fb31ff633b6f953371e14b004a2558a1a0b74b6b60b90b481af0f68555a49208fe6b226381fed79f'
            '444e03c9a6040c1b4f19872d849e93322ffad40262339edb0b7961d2de47a161f01074f2d5418a057fd62e900ff1fbf5ea8ba4e3384aaa86fda84c80d0550a2b'
            '6ed5bc6dbdc47bc7f4c0fedbe18deaf35ab02a2e6700988beb545954bb1d0fe20ff1a4de39d6d9fc882ef1741f7bf6d85ba165d0cd8dc0d9939b789c894f48a1'
            '53eb0cddfd637014f3d3a101665db8dcafe5ac5bf3d319a259974334eb89c1c405097518ae96b6d18e520194633c7be57c9b2cd9ae6398443eb08f1a2008d112'
            '881e2efe05ba818cd7300f126800b56bb0685cb5c9c5fb7e67ef6aaf5abd17d2391a979d5d16d109c5111f4b35504ba83d19b0e6eda4431e8421fcbea19d2f1a'
            'bd48af7a6209f2ad51aa1747a7238ecb11607a53f61460d873202bf14b55c3b7dd6f66f4a9f2cac8a24240313789a9a44dbc81b73587de46a6b1866bdfca5e26'
            '063624b6fc3728339e4f352597e6913c476c4eaa8e1004b2a46c480b5cce9c42f3083d1e6960081202099acf2b7d0b5d13dc6b7ee0aa303c272826febdcd311e')
options=('!debug' 'strip' 'makeflags')

prepare() {
  cd "${pkgname}-${pkgver}"

  # Reproducible patchlevel.h date
  if [ -n "${SOURCE_DATE_EPOCH}" ]; then
    touch -h -d "@$SOURCE_DATE_EPOCH" patchlevel.h
  fi

  # Apply patches
  patch -p1 -i ../clearlinux.patch

  # Copy custom configs
  cp -f ../db_config.in ./cpan/DB_File/config.in
  cp ../config.over .
}

build() {
  cd "${pkgname}-${pkgver}"

  # Define PGO directories and data file
  local _profiledir="${srcdir}/${pkgname}-${pkgver}/pgoprofile"
  local _profiledata="${_profiledir}/merged.profdata"
  mkdir -p "${_profiledir}"

  # --- PGO Stage 1: Instrumented Build ---
  # Build Perl with instrumentation to generate profile data.
  # These advanced flags enable more detailed value profiling and reduce overhead.
  echo ">>> Starting PGO Stage 1: Instrumented Build with Advanced Clang Flags"
  local PGO_GEN_FLAGS="-fprofile-generate=${_profiledir} -Xclang -mllvm -Xclang -vp-counters-per-site=12 -Xclang -mllvm -Xclang -runtime-counter-relocation -Xclang -mllvm -Xclang -enable-value-profiling"

  ./Configure -des \
    -Dcc="clang" -Dld="clang" \
    -Dprefix=/usr -Dvendorprefix=/usr \
    -Dprivlib=/usr/share/perl5/core_perl \
    -Darchlib=/usr/lib/perl5/$_baseversion/core_perl \
    -Dsitelib=/usr/share/perl5/site_perl \
    -Dsitearch=/usr/lib/perl5/$_baseversion/site_perl \
    -Dvendorlib=/usr/share/perl5/vendor_perl \
    -Dvendorarch=/usr/lib/perl5/$_baseversion/vendor_perl \
    -Dscriptdir=/usr/bin/core_perl \
    -Dsitescript=/usr/bin/site_perl \
    -Dvendorscript=/usr/bin/vendor_perl \
    -Dinc_version_list=none \
    -Dman1ext=1perl -Dman3ext=3perl \
    -Dcccdlflags='-fPIC' \
    -Doptimize="${CFLAGS} ${PGO_GEN_FLAGS}" \
    -Dldflags="${LDFLAGS} ${PGO_GEN_FLAGS}" \
    -Dusethreads -Duseshrplib

  make -j"$(nproc)"

  # --- PGO Stage 2: Training Run ---
  # Run the PGO-specific test suite to generate raw profile data.
  echo ">>> Starting PGO Stage 2: Training Run"
  make test_pgo -j"$(nproc)"

  # --- PGO Stage 3: Merge Profile Data ---
  # Merge the raw .profraw files into a single .profdata file for the compiler.
  echo ">>> Starting PGO Stage 3: Merging Profile Data"
  llvm-profdata merge -o "${_profiledata}" "${_profiledir}"/*.profraw

  # --- PGO Stage 4: Reconfigure for Final Build ---
  # Instead of 'make clean', which is too aggressive and breaks the build,
  # we only remove the object files. This is safer and achieves the same goal.
  echo ">>> Starting PGO Stage 4: Reconfiguring for Final Build"
  find . -name "*.o" -delete
  sed -i "s|${PGO_GEN_FLAGS}|-fprofile-use=${_profiledata}|g" config.sh

  # --- PGO Stage 5: Final Optimized Build ---
  # Rebuild Perl using the collected profile data for optimization.
  echo ">>> Starting PGO Stage 5: Final Optimized Build"
  make -j"$(nproc)"
}

check() {
  cd "${pkgname}-${pkgver}"
  # Run the full test suite in parallel on the final PGO-optimized binary
  make test -j"$(nproc)"
}

package() {
  cd "${pkgname}-${pkgver}"
  make DESTDIR="$pkgdir" install

  # Change man page extensions for site/vendor builds.
  # Set no mail address; bug reports should go to the bug tracker.
  sed -e '/^man1ext=/ s/1perl/1p/' \
      -e '/^man3ext=/ s/3perl/3pm/' \
      -e "/^cf_email=/ s/'.*'/''/" \
      -e "/^perladmin=/ s/'.*'/''/" \
      -i "${pkgdir}/usr/lib/perl5/$_baseversion/core_perl/Config_heavy.pl"

  # Set CPAN default config to use the site directories.
  sed -e '/(makepl_arg =>/   s/""/"INSTALLDIRS=site"/' \
      -e '/(mbuildpl_arg =>/ s/""/"installdirs=site"/' \
      -i "${pkgdir}/usr/share/perl5/core_perl/CPAN/FirstTime.pm"

  # Profile scripts to set paths for perl scripts.
  install -Dm644 "${srcdir}/perlbin.sh" "${pkgdir}/etc/profile.d/perlbin.sh"
  install -Dm644 "${srcdir}/perlbin.csh" "${pkgdir}/etc/profile.d/perlbin.csh"
  install -Dm755 "${srcdir}/perlbin.fish" "${pkgdir}/usr/share/fish/vendor_conf.d/perlbin.fish"

  # Create script directories so they are immediately in PATH.
  install -d -m755 "${pkgdir}/usr/bin/vendor_perl"
  install -d -m755 "${pkgdir}/usr/bin/site_perl"

  # Remove versioned binary, core_perl is the main one.
  rm "${pkgdir}/usr/bin/perl${pkgver}"

  # Install alpm hooks for detecting outdated modules.
  install -Dm755 -t "${pkgdir}/usr/share/alpm/scripts" "${srcdir}/detect-old-perl-modules.sh"
  install -Dm644 -t "${pkgdir}/usr/share/alpm/hooks" "${srcdir}/detect-old-perl-modules.hook"

  # Remove files not needed for a binary package.
  find "$pkgdir" -name perllocal.pod -delete
  find "$pkgdir" -name .packlist -delete
}
