shopt -s extglob

pkgbase=python
pkgname=(python python-tests)
pkgver=3.13.7
pkgrel=5.1
_pybasever=${pkgver%.*}
pkgdesc="The Python programming language"
arch=('x86_64')
options=(!strip)
license=('PSF-2.0')
url="https://www.python.org/"
depends=('bzip2' 'expat' 'gdbm' 'libffi' 'libnsl' 'libxcrypt' 'openssl' 'zlib' 'tzdata' 'mpdecimal')
makedepends=('tk' 'sqlite' 'bluez-libs' 'llvm' 'lld' 'gdb' 'xorg-server-xvfb' 'ttf-font')
source=("https://www.python.org/ftp/python/${pkgver%rc*}/Python-${pkgver}.tar.xz"{,.asc}
        bolt.patch
        EXTERNALLY-MANAGED)
sha512sums=('056c9b5fc0a6b540f41513d045f43c1ed463d15e0f345cecec703ec9c2335e53b4beb19de9c74ab2b236b023f934d5fd9ae7727a808634eaa01cfe66018a9a35'
            'SKIP'
            '62a6fbfbaeaa3ba7c54e109d9c3b7f67e73bb21986da4c1fcc5d28cca83d71e0fcae28e1fc70ee8ddce7dea8cd0b64e18d1031dae3a2eae5eaa379c53efd53a0')
validpgpkeys=('0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D'  # Ned Deily (Python release signing key) <nad@python.org>
              'E3FF2839C048B25C084DEBE9B26995E310250568'  # ≈Åukasz Langa (GPG langa.pl) <lukasz@langa.pl>
              'A035C8C19219BA821ECEA86B64E628F8D684696D'  # Pablo Galindo Salgado <pablogsal@gmail.com>
              '7169605F62C751356D054A26A821E680E5FA6305') # Thomas Wouters <thomas@xs4all.nl>

prepare() {
  cd Python-${pkgver}

  # Ensure that we are using the system copy of various libraries (expat, libffi, and libmpdec),
  # rather than copies shipped in the tarball
  rm -r Modules/expat
  rm -r Modules/_decimal/libmpdec
  #patch -Np1 -i "${srcdir}/bolt.patch"
}

build() {
  cd Python-${pkgver}

  export CC="clang"
  export CXX="clang++"
  export LD="lld"

  # PGO should be done with -O3
  CFLAGS="${CFLAGS/-O2/-O3}"

  # 1. Enable extended PGO data collection
  export PYTHON_PGO_FLAGS="--pgo-extended"

  # 2. Disable semantic interposition for better inlining during PGO
  export CFLAGS="$CFLAGS"
  export CXXFLAGS="$CXXFLAGS"

  # Disable bundled pip & setuptools
  ./configure --prefix=/usr \
              --enable-shared \
              --with-computed-gotos \
              --enable-optimizations \
              --enable-bolt \
              --enable-ipv6 \
              --with-system-expat \
              --with-dbmliborder=gdbm:ndbm \
              --with-system-libmpdec \
              --enable-loadable-sqlite-extensions \
              --without-ensurepip \
              --with-tzpath=/usr/share/zoneinfo

    # Obtain next free server number for xvfb-run; this even works in a chroot environment.
    export servernum=99
    while ! xvfb-run -a -n "$servernum" /bin/true 2>/dev/null; do
      servernum=$((servernum + 1))
    done

    # Number of parallel jobs for testing
    NUM_JOBS=$(nproc)

    # Construct the test command with -x test_perf_profiler
    TEST_COMMAND="-m test $PYTHON_PGO_FLAGS -j$NUM_JOBS -x test_perf_profiler"

    # 3. Use the test suite as the PGO workload with extended data collection and parallel testing
    LC_CTYPE=en_US.UTF-8 xvfb-run -s "-screen 0 1920x1080x16 -ac +extension GLX" -a -n "$servernum" \
      make profile-opt PROFILE_TASK="$TEST_COMMAND"
}

package_python() {
  optdepends=('python-setuptools: for building Python packages using tooling that is usually bundled with Python'
              'python-pip: for installing Python packages using tooling that is usually bundled with Python'
              'sqlite: for a default database integration'
              'xz: for lzma'
              'tk: for tkinter')
  provides=('python3' 'python-externally-managed')
  conflicts=('python<3.13')
  replaces=('python3.12' 'python3.11' 'python3.10' 'python3.9' 'python3.8' 'python3.7' 'python3.6' 'python3.5' \
            'python3.4' 'python3.3' 'python3.2' 'python3.1' 'python3.0' \
            'python3-docs' 'python3- Distutils' 'python3-gdbm' 'python3-idle' \
            'python3-tkinter' 'python3-venv' 'python3-dev' 'python3-test' \
            'python3-tools' 'python3-curses' 'python3-sqlite')
  replaces=('python3' 'python-externally-managed')

  cd Python-${pkgver}

  # Hack to avoid building again
  sed -i 's/^all:.*$/all: build_all/' Makefile

  make DESTDIR="${pkgdir}" install

  # Why are these not done by default...
  ln -s python3               "${pkgdir}"/usr/bin/python
  ln -s python3-config        "${pkgdir}"/usr/bin/python-config
  ln -s idle3                 "${pkgdir}"/usr/bin/idle
  ln -s pydoc3                "${pkgdir}"/usr/bin/pydoc
  ln -s python${_pybasever}.1 "${pkgdir}"/usr/share/man/man1/python.1

  # some useful "stuff" FS#46146
  install -dm755 "${pkgdir}"/usr/lib/python${_pybasever}/Tools/{i18n,scripts}
  install -m755 Tools/i18n/{msgfmt,pygettext}.py "${pkgdir}"/usr/lib/python${_pybasever}/Tools/i18n/
  install -m755 Tools/scripts/{README,*py} "${pkgdir}"/usr/lib/python${_pybasever}/Tools/scripts/

  # PEP668
  install -Dm644 "$srcdir"/EXTERNALLY-MANAGED -t "${pkgdir}/usr/lib/python${_pybasever}/"

  # Use llvm-strip only on recognized file formats
  find "$pkgdir" -type f \( -name '*.so*' -o -name '*.a' -o -executable \) -print0 | while IFS= read -r -d '' file; do
    if llvm-strip --strip-unneeded "$file" 2>/dev/null || llvm-strip --strip-all "$file" 2>/dev/null; then
      echo "Stripped: $file"
    else
      echo "Skipping: $file (not a valid object file)" >&2
    fi
  done

  # Split tests
  cd "$pkgdir"/usr/lib/python*/
  rm -r {test,idlelib/idle_test}
}

package_python-tests() {
  pkgdesc="Regression tests packages for Python"
  depends=('python')

  cd Python-${pkgver}

  make DESTDIR="${pkgdir}" libinstall
  cd "$pkgdir"/usr/lib/python*/
  rm -r !(test)
}
