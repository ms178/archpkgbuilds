pkgname=vulkan-icd-loader-git
pkgver=1.4.323.r7.gf2389e277
pkgrel=1
arch=(x86_64)
pkgdesc='Vulkan Installable Client Driver (ICD) Loader (PGO Optimized)'
url=https://www.khronos.org/vulkan
license=(custom)
makedepends=(
  cmake
  python-lxml
  libx11
  libxrandr
  wayland
  vulkan-headers-git
  git
  clang
  llvm
  lld
)
depends=(glibc)
optdepends=('vulkan-driver: packaged vulkan driver')
provides=("${pkgname%-git}" libvulkan.so)
conflicts=("${pkgname%-git}")
source=("${pkgname%-git}"::git+https://github.com/KhronosGroup/Vulkan-Loader.git)
sha256sums=('SKIP')

pkgver() {
    cd "${pkgname%-git}"
    git describe --long --tags | sed 's/^v//;s/\([^-]*-g\)/r\1/;s/-/./g'
}

prepare() {
  export CC="clang"
  export CXX="clang++"
  export LDFLAGS+=" -fuse-ld=lld"

  # Initialize git submodules, which includes googletest in the external/ directory.
  cd "${pkgname%-git}"
  git submodule update --init --recursive
}

build() {
  local _common_instrument_flags="-g3 -fno-omit-frame-pointer -mllvm -vp-counters-per-site=150 -mllvm -runtime-counter-relocation -mllvm -enable-value-profiling"
  local std_pgo_dir="${srcdir}/pgo_data"
  local cs_pgo_dir="${srcdir}/cs_pgo_data"
  local merged_profile_dir="${srcdir}/merged_profile"
  mkdir -p "${std_pgo_dir}" "${cs_pgo_dir}" "${merged_profile_dir}"

  local cmake_common_options=(
    -S "${pkgname%-git}"
    -D CMAKE_INSTALL_PREFIX=/usr
    -D VULKAN_HEADERS_INSTALL_DIR=/usr
    -D CMAKE_INSTALL_LIBDIR=lib
    -D CMAKE_INSTALL_SYSCONFDIR=/etc
    -D CMAKE_INSTALL_DATADIR=/share
    -D BUILD_WSI_XCB_SUPPORT=On
    -D BUILD_WSI_XLIB_SUPPORT=On
    -D BUILD_WSI_WAYLAND_SUPPORT=On
    -D CMAKE_C_FLAGS="-Wno-error"
    -D CMAKE_CXX_FLAGS="-Wno-error"
    -D CMAKE_BUILD_TYPE=Release
    -D CMAKE_C_STANDARD=23
    -D CMAKE_CXX_STANDARD=23
  )

  # --- PGO Stage 1: Generate ---
  cmake -B build-pgo-gen "${cmake_common_options[@]}" \
    -D UPDATE_DEPS=ON \
    -D CMAKE_SKIP_RPATH=False \
    -D CMAKE_BUILD_WITH_INSTALL_RPATH=True \
    -D CMAKE_INSTALL_RPATH="\$ORIGIN/../loader" \
    -D CMAKE_C_FLAGS="${CFLAGS} -fprofile-generate=${std_pgo_dir} ${_common_instrument_flags}" \
    -D CMAKE_CXX_FLAGS="${CXXFLAGS} -fprofile-generate=${std_pgo_dir} ${_common_instrument_flags}" \
    -D CMAKE_EXE_LINKER_FLAGS="${LDFLAGS} -fprofile-generate=${std_pgo_dir}" \
    -D CMAKE_SHARED_LINKER_FLAGS="${LDFLAGS} -fprofile-generate=${std_pgo_dir}" \
    -D BUILD_TESTS=ON
  cmake --build build-pgo-gen
  ctest --test-dir build-pgo-gen --output-on-failure || true
  llvm-profdata merge -output="${merged_profile_dir}/default.profdata" "${std_pgo_dir}"

  # --- PGO Stage 2: CS-Generate ---
  cmake -B build-pgo-cs-gen "${cmake_common_options[@]}" \
    -D UPDATE_DEPS=ON \
    -D CMAKE_SKIP_RPATH=False \
    -D CMAKE_BUILD_WITH_INSTALL_RPATH=True \
    -D CMAKE_INSTALL_RPATH="\$ORIGIN/../loader" \
    -D CMAKE_C_FLAGS="${CFLAGS} -fprofile-use=${merged_profile_dir}/default.profdata -fcs-profile-generate=${cs_pgo_dir} ${_common_instrument_flags}" \
    -D CMAKE_CXX_FLAGS="${CXXFLAGS} -fprofile-use=${merged_profile_dir}/default.profdata -fcs-profile-generate=${cs_pgo_dir} ${_common_instrument_flags}" \
    -D CMAKE_EXE_LINKER_FLAGS="${LDFLAGS} -fprofile-use=${merged_profile_dir}/default.profdata -fcs-profile-generate=${cs_pgo_dir}" \
    -D CMAKE_SHARED_LINKER_FLAGS="${LDFLAGS} -fprofile-use=${merged_profile_dir}/default.profdata -fcs-profile-generate=${cs_pgo_dir}" \
    -D BUILD_TESTS=ON
  cmake --build build-pgo-cs-gen
  ctest --test-dir build-pgo-cs-gen --output-on-failure || true
  llvm-profdata merge -output="${merged_profile_dir}/final.profdata" "${cs_pgo_dir}" "${merged_profile_dir}/default.profdata"

  # --- PGO Stage 3: Final Optimized Build ---
  cmake -B build "${cmake_common_options[@]}" \
    -D CMAKE_SKIP_RPATH=True \
    -D CMAKE_C_FLAGS="${CFLAGS} -fprofile-use=${merged_profile_dir}/final.profdata" \
    -D CMAKE_CXX_FLAGS="${CXXFLAGS} -fprofile-use=${merged_profile_dir}/final.profdata" \
    -D CMAKE_EXE_LINKER_FLAGS="${LDFLAGS} -fprofile-use=${merged_profile_dir}/final.profdata" \
    -D CMAKE_SHARED_LINKER_FLAGS="${LDFLAGS} -fprofile-use=${merged_profile_dir}/final.profdata" \
    -D BUILD_TESTS=OFF
  cmake --build build
}

package() {
    DESTDIR="${pkgdir}" cmake --install build
    install -Dm644 "${pkgname%-git}"/LICENSE.txt -t "${pkgdir}"/usr/share/licenses/${pkgname}
}
