pkgname=coreutils-git
pkgver=9.6.r2.g915004f40
pkgrel=1
pkgdesc="Basic file, shell and text manipulation utilities of the GNU operating system"
arch=('i686' 'x86_64')
url="https://www.gnu.org/software/coreutils/coreutils.html"
license=('GPL3')
depends=('glibc' 'gmp' 'libcap' 'openssl')
makedepends=('git' 'gettext' 'gperf' 'gzip' 'perl' 'rsync' 'tar' 'texinfo' 'llvm')
options=(strip)
provides=('coreutils')
conflicts=('coreutils')
source=("git+https://git.savannah.gnu.org/git/coreutils.git")
sha256sums=('SKIP')

pkgver() {
  cd "coreutils"

  git describe --long --tags | sed 's/^v//;s/\([^-]*-g\)/r\1/;s/-/./g'
}

cleanup_profiles() {
  rm -f "$srcdir"/*.profraw
  rm -rf "$srcdir/bolt_profile"
  rm -rf "$srcdir/bolt_opt"
}

prepare() {
  cd "coreutils"
  cleanup_profiles
  mkdir -p "$srcdir/bolt_opt"
  mkdir -p "$srcdir/bolt_profile"
}

build() {
  local _pkgdir="$srcdir/coreutils"
  cd "$_pkgdir"

  local CFLAGS_ORIG="$CFLAGS"
  local CXXFLAGS_ORIG="$CXXFLAGS"
  local LDFLAGS_ORIG="$LDFLAGS"

  # Stage 1: Instrumented build for PGO

  CFLAGS+=" -g3 -fno-omit-frame-pointer -fprofile-generate"
  CXXFLAGS+=" -g3 -fno-omit-frame-pointer -fprofile-generate"
  LDFLAGS+=" -g3 -fno-omit-frame-pointer -fprofile-generate -lgcov"

  ./bootstrap
  ./configure --disable-gcc-warnings --prefix="/usr" --libexecdir="/usr/lib" --with-openssl --enable-no-install-program="groups,hostname,kill,uptime"
  make

  # Run tests to generate PGO data
  make check

  # Stage 2: Build with PGO data
  CFLAGS="$CFLAGS_ORIG -fprofile-use -fprofile-correction"
  CXXFLAGS="$CXXFLAGS_ORIG -fprofile-use -fprofile-correction"
  LDFLAGS="$LDFLAGS_ORIG -fprofile-use -fprofile-correction -lgcov"

  ./bootstrap
  ./configure --disable-gcc-warnings --prefix="/usr" --libexecdir="/usr/lib" --with-openssl --enable-no-install-program="groups,hostname,kill,uptime"
  make
}

package() {
  cd "coreutils"

  make DESTDIR="$pkgdir" install

}
