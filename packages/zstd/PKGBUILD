# Maintainer: ObserverOfTime <chronobserver@disroot.org>
# Based on zstd

pkgname=zstd
pkgver=1.5.3
pkgrel=4
pkgdesc='Zstandard - Fast real-time compression algorithm (with cmake files)'
arch=(x86_64)
url='https://www.zstd.net/'
license=('BSD' 'GPL2')
options=('staticlibs')
depends=('zlib' 'xz' 'lz4')
makedepends=('cmake')
checkdepends=('gtest')
provides=("zstd=${pkgver}" "zstd-static=${pkgver}" "libzstd.so=1-64")
conflicts=('zstd' 'zstd-static' 'zstd-git')
source=("git+https://github.com/facebook/zstd.git#commit=5d2fb4288f8230cc32c12f235b716fd25ecc89e1"
    fopen-use-m.patch
    multi-thread-default.patch
    notrace.patch)
sha256sums=('SKIP')

prepare() {
    cd zstd

    local src
    for src in "${source[@]}"; do
        src="${src%%::*}"
        src="${src##*/}"
        [[ $src = *.patch ]] || continue
        echo "Applying patch $src..."
        patch -Np1 < "../$src"
    done

    # avoid error on tests without static libs, we use LD_LIBRARY_PATH
    sed '/build static library to build tests/d' -i build/cmake/CMakeLists.txt
    sed 's/libzstd_static/libzstd_shared/g' -i build/cmake/tests/CMakeLists.txt


}

build() {
    cd zstd

    cmake -S build/cmake -B build \
        -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_C_STANDARD=23 \
        -DCMAKE_CXX_STANDARD=20 \
        -DCMAKE_INSTALL_PREFIX=/usr \
        -DCMAKE_INSTALL_LIBDIR=lib \
        -DZSTD_BUILD_CONTRIB=ON \
        -DZSTD_BUILD_STATIC=OFF \
        -DZSTD_BUILD_TESTS=OFF \
        -DZSTD_PROGRAMS_LINK_SHARED=ON
    cmake --build build
}

#check() {
#    cd ${pkgname}-${pkgver}
#    export LD_LIBRARY_PATH="$(pwd)/build/lib"
#    ctest -VV --test-dir build
#}

package() {
    cd zstd
    DESTDIR="${pkgdir}" cmake --install build
    ln -sf /usr/bin/zstd "${pkgdir}/usr/bin/zstdmt"
    install -Dm 644 LICENSE -t "${pkgdir}/usr/share/licenses/${pkgname}"
}
