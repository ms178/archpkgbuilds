pkgname=c-ares
pkgver=1.34.5
pkgrel=3.1
pkgdesc="A C library for asynchronous DNS requests (PGO Optimized)"
arch=(x86_64)
url="https://c-ares.org/"
_url=https://github.com/c-ares/c-ares
license=(MIT)
depends=(glibc)
makedepends=(
  cmake
  git
  clang
  llvm
  lld
)
provides=(libcares.so)
source=(
  git+$_url.git?signed#tag=v$pkgver
)
sha512sums=('8ad2694d9b0bfedc4e4eaf1fcdffc184a321fb17e7049a52b666d71753d3156c38f3d0cba2632171d3f4f290031358c6fc33af4627a97e1e81fe617d476cfa44')
b2sums=('73af5643fd70067a263cca4c3fecab2c70c2a9f572252754419d8fc912a7edf6deb5d15332af81f4b46052f2948477b4cf353f95d75486e09eb7e5740627c9c0')
validpgpkeys=(
  27EDEAF22F3ABCEB50DB9A125CC908FDB71E12C2  # Daniel Stenberg <daniel@haxx.se>
  DA7D64E4C82C6294CB73A20E22E3D13B5411B7CA  # Brad House <brad@brad-house.com>
)

prepare() {
  export CC="clang"
  export CXX="clang++"
  export LDFLAGS+=" -fuse-ld=lld"
}

build() {
  local _common_instrument_flags="-g3 -fno-omit-frame-pointer -mllvm -vp-counters-per-site=150 -mllvm -runtime-counter-relocation -mllvm -enable-value-profiling"
  local std_pgo_dir="${srcdir}/pgo_data"
  local cs_pgo_dir="${srcdir}/cs_pgo_data"
  local merged_profile_dir="${srcdir}/merged_profile"
  mkdir -p "${std_pgo_dir}" "${cs_pgo_dir}" "${merged_profile_dir}"

  local cmake_common_options=(
    -D CMAKE_INSTALL_PREFIX=/usr
    -D CMAKE_BUILD_TYPE=Release
    -D CMAKE_C_STANDARD=23
    -D CMAKE_CXX_STANDARD=23
    -S $pkgname
    -W no-dev
  )

  # --- PGO Stage 1: Generate ---
  cmake -B build-pgo-gen "${cmake_common_options[@]}" \
    -D CMAKE_C_FLAGS="${CFLAGS} -fprofile-generate=${std_pgo_dir} ${_common_instrument_flags}" \
    -D CMAKE_EXE_LINKER_FLAGS="${LDFLAGS} -fprofile-generate=${std_pgo_dir}" \
    -D CARES_BUILD_TESTS=ON
  cmake --build build-pgo-gen --verbose
  ctest --test-dir build-pgo-gen --output-on-failure || true
  llvm-profdata merge -output="${merged_profile_dir}/default.profdata" "${std_pgo_dir}"

  # --- PGO Stage 2: CS-Generate ---
  cmake -B build-pgo-cs-gen "${cmake_common_options[@]}" \
    -D CMAKE_C_FLAGS="${CFLAGS} -fprofile-use=${merged_profile_dir}/default.profdata -fcs-profile-generate=${cs_pgo_dir} ${_common_instrument_flags}" \
    -D CMAKE_EXE_LINKER_FLAGS="${LDFLAGS} -fprofile-use=${merged_profile_dir}/default.profdata -fcs-profile-generate=${cs_pgo_dir}" \
    -D CARES_BUILD_TESTS=ON
  cmake --build build-pgo-cs-gen --verbose
  ctest --test-dir build-pgo-cs-gen --output-on-failure || true
  llvm-profdata merge -output="${merged_profile_dir}/final.profdata" "${cs_pgo_dir}" "${merged_profile_dir}/default.profdata"

  # --- PGO Stage 3: Final Optimized Build ---
  cmake -B build "${cmake_common_options[@]}" \
    -D CMAKE_C_FLAGS="${CFLAGS} -fprofile-use=${merged_profile_dir}/final.profdata" \
    -D CMAKE_EXE_LINKER_FLAGS="${LDFLAGS} -fprofile-use=${merged_profile_dir}/final.profdata" \
    -D CARES_BUILD_TESTS=ON
  cmake --build build --verbose
}

check() {
  ctest --test-dir build --output-on-failure
}

package() {
  DESTDIR="$pkgdir" cmake --install build
  install -vDm 644 $pkgname/LICENSE.md -t "$pkgdir/usr/share/licenses/$pkgname/"
  install -vDm 644 $pkgname/{AUTHORS,{CONTRIBUTING,README,RELEASE-NOTES}.md} -t "$pkgdir/usr/share/doc/$pkgname/"
}
