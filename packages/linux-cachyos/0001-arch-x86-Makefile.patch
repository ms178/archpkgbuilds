diff --git a/arch/x86/Makefile b/arch/x86/Makefile
--- a/arch/x86/Makefile
+++ b/arch/x86/Makefile
@@ -12,25 +12,6 @@ else
         KBUILD_DEFCONFIG := $(ARCH)_defconfig
 endif

-ifdef CONFIG_CC_IS_GCC
-RETPOLINE_CFLAGS	:= $(call cc-option,-mindirect-branch=thunk-extern -mindirect-branch-register)
-RETPOLINE_VDSO_CFLAGS	:= $(call cc-option,-mindirect-branch=thunk-inline -mindirect-branch-register)
-endif
-ifdef CONFIG_CC_IS_CLANG
-RETPOLINE_CFLAGS	:= -mretpoline-external-thunk
-RETPOLINE_VDSO_CFLAGS	:= -mretpoline
-endif
-RETPOLINE_CFLAGS	+= $(call cc-option,-mindirect-branch-cs-prefix)
-
-ifdef CONFIG_RETHUNK
-RETHUNK_CFLAGS		:= -mfunction-return=thunk-extern
-RETPOLINE_CFLAGS	+= $(RETHUNK_CFLAGS)
-endif
-
-export RETHUNK_CFLAGS
-export RETPOLINE_CFLAGS
-export RETPOLINE_VDSO_CFLAGS
-
 # For gcc stack alignment is specified with -mpreferred-stack-boundary,
 # clang has the option -mstack-alignment for that purpose.
 ifneq ($(call cc-option, -mpreferred-stack-boundary=4),)

@@ -67,8 +48,8 @@ export BITS
 #
 #    https://gcc.gnu.org/bugzilla/show_bug.cgi?id=53383
 #
-KBUILD_CFLAGS += -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -O3 -fno-tree-vectorize
-KBUILD_RUSTFLAGS += -Ctarget-feature=-sse,-sse2,-sse3,-ssse3,-sse4.1,-sse4.2,-avx,-avx2
+KBUILD_CFLAGS += -mno-sse -mno-mmx
+KBUILD_RUSTFLAGS += -Ctarget-cpu=native -Ctarget-feature=+aes -Ctarget-feature=+pclmulqdq -Ctarget-feature=+bmi2

 ifeq ($(CONFIG_X86_KERNEL_IBT),y)
 #
