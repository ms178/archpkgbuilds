pkgname=abseil-cpp
pkgver=20250127.1
pkgrel=2.1
pkgdesc="Collection of C++ library code designed to augment the C++ standard library"
arch=('x86_64')
url='https://abseil.io'
license=('Apache-2.0')
depends=('gcc-libs' 'glibc' 'gtest')
makedepends=('cmake' 'clang' 'llvm')
source=("https://github.com/abseil/abseil-cpp/archive/$pkgver/$pkgname-$pkgver.tar.gz"
         scoped-mock-log.patch)
sha256sums=('40cee67604060a7c8794d931538cb55f4d444073e556980c88b6c49bb9b19bb7'
            'a6cbc612a2b96fcbd52d081e03e8581107ceb4827edb19d96510a31c568e1396')

_common_instrument_flags=" -g3 -fno-omit-frame-pointer -mllvm -vp-counters-per-site=10 -mllvm -runtime-counter-relocation -mllvm -enable-value-profiling"

prepare() {
  cd "$srcdir/$pkgname-$pkgver"
  patch -p1 -i ../scoped-mock-log.patch # Install target needed by protobuf

  mkdir -p "$srcdir/pgo-profiles/standard" "$srcdir/pgo-profiles/context-sensitive"
}

build() {
  # First build - standard PGO instrumentation
  cmake -S "$srcdir/$pkgname-$pkgver" -B build-pgo-standard \
    -DCMAKE_BUILD_TYPE=Debug \
    -DCMAKE_CXX_COMPILER=clang++ \
    -DCMAKE_CXX_FLAGS="${CXXFLAGS} ${_common_instrument_flags} -fprofile-generate=$srcdir/pgo-profiles/standard" \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DCMAKE_CXX_STANDARD=20 \
    -DBUILD_SHARED_LIBS=ON \
    -DABSL_BUILD_TEST_HELPERS=ON \
    -DABSL_USE_EXTERNAL_GOOGLETEST=ON \
    -DABSL_FIND_GOOGLETEST=ON \
    -DABSL_BUILD_TESTING=ON
  cmake --build build-pgo-standard

  # Run tests to generate profile data
  cd build-pgo-standard
  ctest
  cd ..

  # Merge standard profile data
  llvm-profdata merge -output="$srcdir/pgo-profiles/standard.profdata" "$srcdir/pgo-profiles/standard"/*.profraw

  # Second build - context-sensitive PGO instrumentation
  cmake -S "$srcdir/$pkgname-$pkgver" -B build-pgo-cs \
    -DCMAKE_BUILD_TYPE=Debug \
    -DCMAKE_CXX_COMPILER=clang++ \
    -DCMAKE_CXX_FLAGS="${CXXFLAGS} ${_common_instrument_flags} -fprofile-use=$srcdir/pgo-profiles/standard.profdata -fcs-profile-generate=$srcdir/pgo-profiles/context-sensitive" \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DCMAKE_CXX_STANDARD=20 \
    -DBUILD_SHARED_LIBS=ON \
    -DABSL_BUILD_TEST_HELPERS=ON \
    -DABSL_USE_EXTERNAL_GOOGLETEST=ON \
    -DABSL_FIND_GOOGLETEST=ON \
    -DABSL_BUILD_TESTING=ON
  cmake --build build-pgo-cs

  # Run tests again to generate context-sensitive profile data
  cd build-pgo-cs
  ctest
  cd ..

  # Merge both profile data sets
  llvm-profdata merge -output="$srcdir/pgo-profiles/combined.profdata" "$srcdir/pgo-profiles/standard.profdata" "$srcdir/pgo-profiles/context-sensitive"/*.profraw

  # Final build with combined profile data
  cmake -S "$srcdir/$pkgname-$pkgver" -B build \
    -DCMAKE_BUILD_TYPE=Release \
    -DCMAKE_CXX_COMPILER=clang++ \
    -DCMAKE_CXX_FLAGS="${CXXFLAGS} -DNDEBUG -fprofile-use=$srcdir/pgo-profiles/combined.profdata" \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DCMAKE_CXX_STANDARD=20 \
    -DBUILD_SHARED_LIBS=ON \
    -DABSL_BUILD_TEST_HELPERS=ON \
    -DABSL_USE_EXTERNAL_GOOGLETEST=ON \
    -DABSL_FIND_GOOGLETEST=ON \
    -DABSL_BUILD_TESTING=ON
  cmake --build build
}

check() {
  cd build
  ctest
}

package() {
  DESTDIR="$pkgdir" cmake --install build

  # Clean up profile data
  rm -rf "$srcdir/pgo-profiles"
}
