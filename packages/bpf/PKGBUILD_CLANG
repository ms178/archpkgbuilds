# This PKGBUILD uses an AutoFDO profile from the Cachymod project for feedback-driven optimization.

pkgbase=linux-tools
pkgname=(
  'bpf'
  'cpupower'
)
pkgver=6.15
pkgrel=4.6
license=('GPL-2.0-only')
arch=('x86_64')
url='https://www.kernel.org'
options=('strip')
groups=("$pkgbase")

# kernel source deps
makedepends=('git' 'asciidoc' 'xmlto')
# cpupower deps
makedepends+=('pciutils')
# bpf deps
makedepends+=('readline' 'zlib' 'libelf' 'libcap' 'python-docutils')
# bpftool
makedepends+=('llvm' 'clang')

source=("git+https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git#tag=v${pkgver//_/-}?signed"
        "https://cdn.kernel.org/pub/linux/kernel/v6.x/patch-6.15.8.xz" #use the latest stable version here if you want
        'cpupower.default'
        'cpupower.systemd'
        'cpupower.service'
        'usbipd.service'
        'hv_kvp_daemon.service'
        'hv_vss_daemon.service'
        'cachymod.afdo' # CachyOS: Using AutoFDO profile
)
validpgpkeys=(
  'ABAF11C65A2970B130ABE3C479BE3E4300411886'  # Linus Torvalds
  '647F28654894E3BD457199BE38DBBDC86092693E'  # Greg Kroah-Hartman
)
sha256sums=('SKIP'
            '4fa509949d6863d001075fa3e8671eff2599c046d20c98bb4a70778595cd1c3f'
            'b692f4859ed3fd9831a058a450a84d8c409bf7e3e45aac1c2896a14bb83f3d7a'
            '42d2ec9f1d9cc255ee7945a27301478364ef482f5a6ddfc960189f03725ccec2'
            '2e187734d8aec58a3046d79883510d779aa93fb3ab20bd3132c1a607ebe5498f'
            'b1315cb77a35454e1af9172f821a52e2a0cb18561be05a340d21cf337b01ae61'
            '2d5e2f8d40b6f19bf2e1dead57ca105d72098fb0b418c09ff2e0cb91089710af'
            'SKIP')

# CachyOS: Define custom flags for reuse and clarity. DO NOT TOUCH.
_cachy_cflags='-D_FORTIFY_SOURCE=0 -O3 -march=native -mllvm -inline-threshold=1500 -fno-semantic-interposition -fcf-protection=none -mharden-sls=none -fomit-frame-pointer -funroll-loops -mllvm -enable-ext-tsp-block-placement -mllvm -enable-gvn-hoist -mllvm -enable-dfa-jump-thread -mllvm -extra-vectorizer-passes -mllvm -enable-cond-stores-vec -mllvm -slp-vectorize-hor-store -mllvm -enable-loopinterchange -mllvm -enable-loop-distribute -mllvm -enable-unroll-and-jam -mllvm -enable-loop-flatten -mllvm -unroll-runtime-multi-exit -mllvm -aggressive-ext-opt -mllvm -enable-interleaved-mem-accesses -mllvm -enable-masked-interleaved-mem-accesses -fno-math-errno -fno-trapping-math -falign-functions=32 -fdata-sections -ffunction-sections -fno-unique-section-names -fprofile-sample-use=/home/marcus/Downloads/bpf/cachymod.afdo -fgnuc-version=15.1.0 -w'
_cachy_ldflags='-Wl,--gc-sections -Wl,--icf=all -Wl,-O3,-Bsymbolic-functions,--as-needed -fuse-ld=lld -fprofile-sample-use=/home/marcus/Downloads/bpf/cachymod.afdo'


prepare() {
  cd linux

  # apply patch from the source array (should be a pacman feature)
  local src
  for src in "${source[@]}"; do
    src="${src%%::*}"
    src="${src##*/}"
    src="${src%.xz}"
    [[ $src = *.patch || $src = patch-* ]] || continue
    echo ":: Applying patch $src"
    patch -p1 -N -i "$srcdir/$src"
  done
}

build() {
  echo ':: cpupower'
  pushd linux/tools/power/cpupower
  make CC=clang CXX=clang++ LD=ld.lld VERSION=$pkgver-$pkgrel
  popd

  echo ':: bpf'
  pushd linux/tools/bpf
  # doesn't compile when we don't first compile bpftool in its own directory
  # skipping runqslower because it requires kernel binary path to build
  make CC=clang CXX=clang++ LD=ld.lld -C bpftool all \
    EXTRA_CFLAGS="${_cachy_cflags}" \
    EXTRA_LDFLAGS="${_cachy_ldflags}"
  make CC=clang CXX=clang++ LD=ld.lld -W runqslower \
    EXTRA_CFLAGS="${_cachy_cflags}" \
    EXTRA_LDFLAGS="${_cachy_ldflags}"
  popd
}

package_cpupower() {
  pkgdesc='Linux kernel tool to examine and tune power saving related features of your processor'
  backup=('etc/default/cpupower')
  depends=('glibc' 'bash' 'pciutils')
  conflicts=('cpufrequtils')
  replaces=('cpufrequtils')
  install=cpupower.install

  pushd linux/tools/power/cpupower
  make CC=clang CXX=clang++ LD=ld.lld \
    DESTDIR="$pkgdir" \
    sbindir='/usr/bin' \
    libdir='/usr/lib' \
    mandir='/usr/share/man' \
    docdir='/usr/share/doc/cpupower' \
    install install-man
  popd
  # install startup scripts
  install -Dm 644 $pkgname.default "$pkgdir/etc/default/$pkgname"
  install -Dm 644 $pkgname.service "$pkgdir/usr/lib/systemd/system/$pkgname.service"
  install -Dm 755 $pkgname.systemd "$pkgdir/usr/lib/systemd/scripts/$pkgname"
}

package_bpf() {
  pkgdesc='BPF tools'
  depends=('glibc' 'readline' 'zlib' 'libelf' 'libcap' 'zstd' 'llvm-libs' 'binutils' 'libsframe.so')

  cd linux/tools/bpf
  # skip runsqlower until disabled in build
  make CC=clang CXX=clang++ LD=ld.lld -W runqslower_install install prefix=/usr DESTDIR="$pkgdir" \
    EXTRA_CFLAGS="${_cachy_cflags}" \
    EXTRA_LDFLAGS="${_cachy_ldflags}"
  # fix bpftool hard written path
  mv "$pkgdir"/usr/sbin/bpftool "$pkgdir"/usr/bin/bpftool
  rmdir "$pkgdir"/usr/sbin
}

# vim:set ts=2 sw=2 et:```
