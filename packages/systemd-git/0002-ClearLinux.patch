From a2938726701cefaee99013422c1a470af14f6bca Mon Sep 17 00:00:00 2001
From: Dimitri John Ledkov <dimitri.j.ledkov@intel.com>
Date: Tue, 23 Jun 2015 11:47:18 +0100
Subject: [PATCH 07/42] sd-event: return malloc() memory reserves when main
 loop is idle.

---
 src/libsystemd/sd-event/sd-event.c | 13 +++++++++++--
 1 file changed, 11 insertions(+), 2 deletions(-)

diff --git a/src/libsystemd/sd-event/sd-event.c b/src/libsystemd/sd-event/sd-event.c
index e9199deb41..75a93ef4e4 100644
--- a/src/libsystemd/sd-event/sd-event.c
+++ b/src/libsystemd/sd-event/sd-event.c
@@ -3,6 +3,7 @@
 #include <sys/epoll.h>
 #include <sys/timerfd.h>
 #include <sys/wait.h>
+#include <malloc.h>

 #include "sd-daemon.h"
 #include "sd-event.h"
@@ -4127,9 +4128,17 @@ _public_ int sd_event_run(sd_event *e, uint64_t timeout) {
         _unused_ _cleanup_(sd_event_unrefp) sd_event *ref = sd_event_ref(e);

         r = sd_event_prepare(e);
-        if (r == 0)
-                /* There was nothing? Then wait... */
+        if (r == 0) {
+                /* There was nothing? Then wait...
+                 *
+                 * ... but since there is no event pending, likely
+                 * we'll be idle for a long time.  This is a good time
+                 * to return any malloc() memory reserves to the
+                 * operating system.
+                 */
+                malloc_trim(0);
                 r = sd_event_wait(e, timeout);
+        }

         if (e->profile_delays)
                 e->last_run_usec = now(CLOCK_MONOTONIC);
--
2.32.0


From 31f93c104869e055784694064e4b9b25e0c17702 Mon Sep 17 00:00:00 2001
From: Dimitri John Ledkov <dimitri.j.ledkov@intel.com>
Date: Tue, 23 Jun 2015 11:40:24 +0100
Subject: [PATCH 06/42] logind,pam: fix systemd-user to include common-session.

---
 factory/etc/pam.d/other | 1 +
 1 file changed, 1 insertion(+)

diff --git a/factory/etc/pam.d/other b/factory/etc/pam.d/other
index c1f729659c..83408c327b 100644
--- a/factory/etc/pam.d/other
+++ b/factory/etc/pam.d/other
@@ -4,3 +4,4 @@ auth     include system-auth
 account  include system-auth
 password include system-auth
 session  include system-auth
+session  include common-session
--
2.32.0

From ca84025a419f61e5b2e9aee58f3381972fcc977d Mon Sep 17 00:00:00 2001
From: Dimitri John Ledkov <dimitri.j.ledkov@intel.com>
Date: Tue, 23 Jun 2015 11:50:13 +0100
Subject: [PATCH 09/42] core: do not apply presets.

---
 src/core/manager.c | 2 --
 1 file changed, 2 deletions(-)

diff --git a/src/core/manager.c b/src/core/manager.c
index 8884437347..9a7326fb6c 100644
--- a/src/core/manager.c
+++ b/src/core/manager.c
@@ -1721,8 +1721,6 @@ int manager_startup(Manager *m, FILE *serialization, FDSet *fds) {
         if (r < 0)
                 return r;

-        manager_preset_all(m);
-
         lookup_paths_log(&m->lookup_paths);

         {
--
2.32.0

From e4293905ab7efd3f310144e2e2b3d27a3b5ea7db Mon Sep 17 00:00:00 2001
From: Auke Kok <auke-jan.h.kok@intel.com>
Date: Fri, 31 Mar 2017 10:15:52 -0700
Subject: [PATCH 22/42] network-online: complete once one link is online, not
 all.

---
 units/systemd-networkd-wait-online.service.in | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/units/systemd-networkd-wait-online.service.in b/units/systemd-networkd-wait-online.service.in
index 10d8b08c8e..6dd5f79377 100644
--- a/units/systemd-networkd-wait-online.service.in
+++ b/units/systemd-networkd-wait-online.service.in
@@ -18,7 +18,7 @@ Before=network-online.target shutdown.target

 [Service]
 Type=oneshot
-ExecStart={{ROOTLIBEXECDIR}}/systemd-networkd-wait-online
+ExecStart={{ROOTLIBEXECDIR}}/systemd-networkd-wait-online --any
 RemainAfterExit=yes

 [Install]
--
2.32.0

From cb8ffce6dbdf2f92c909120869f8bbe6302a4ade Mon Sep 17 00:00:00 2001
From: Auke Kok <auke-jan.h.kok@intel.com>
Date: Fri, 14 Jul 2017 11:34:36 -0700
Subject: [PATCH 27/42] Make timesyncd a "simple" service

the daemon ends up waiting 100 msec on networking conditions before notifying
that it is done, even though that's really not relevant
---
 units/systemd-timesyncd.service.in | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/units/systemd-timesyncd.service.in b/units/systemd-timesyncd.service.in
index c606461091..3771ede671 100644
--- a/units/systemd-timesyncd.service.in
+++ b/units/systemd-timesyncd.service.in
@@ -51,7 +51,7 @@ StateDirectory=systemd/timesync
 SystemCallArchitectures=native
 SystemCallErrorNumber=EPERM
 SystemCallFilter=@system-service @clock
-Type=notify
+Type=simple
 User=systemd-timesync
 {{SERVICE_WATCHDOG}}

--
2.32.0

From 79cafb74955bb0006ddda840b4233bdaf11b6a07 Mon Sep 17 00:00:00 2001
From: Auke Kok <auke-jan.h.kok@intel.com>
Date: Fri, 14 Jul 2017 11:34:00 -0700
Subject: [PATCH 26/42] Ensure /var/run is never a directory.

---
 src/shared/mount-setup.c | 8 ++++++++
 1 file changed, 8 insertions(+)

diff --git a/src/shared/mount-setup.c b/src/shared/mount-setup.c
index c14fc1671d..a1327acf98 100644
--- a/src/shared/mount-setup.c
+++ b/src/shared/mount-setup.c
@@ -497,11 +497,19 @@ static int relabel_extra(void) {

 int mount_setup(bool loaded_policy, bool leave_propagation) {
         int r;
+        struct stat sb;

         r = mount_points_setup(ELEMENTSOF(mount_table), loaded_policy);
         if (r < 0)
                 return r;

+        r = lstat("/var/run", &sb);
+        if (r == 0 && sb.st_mode & S_IFDIR) {
+                char path[256];
+                sprintf(path, "/var/run.%i", (int)time(NULL));
+                rename("/var/run", path);
+        }
+
 #if HAVE_SELINUX || ENABLE_SMACK
         /* Nodes in devtmpfs and /run need to be manually updated for
          * the appropriate labels, after mounting. The other virtual
--
2.32.0

From d8fe90a96f95c8ef81fdb70911d9321608b3b3a0 Mon Sep 17 00:00:00 2001
From: Auke Kok <auke-jan.h.kok@intel.com>
Date: Fri, 14 Jul 2017 11:37:58 -0700
Subject: [PATCH 29/42] Don't wait for utmp at shutdown.

---
 units/systemd-update-utmp.service.in | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/units/systemd-update-utmp.service.in b/units/systemd-update-utmp.service.in
index cedefa8e08..e23c515578 100644
--- a/units/systemd-update-utmp.service.in
+++ b/units/systemd-update-utmp.service.in
@@ -14,7 +14,7 @@ DefaultDependencies=no
 RequiresMountsFor=/var/log/wtmp
 Conflicts=shutdown.target
 After=systemd-remount-fs.service systemd-tmpfiles-setup.service auditd.service
-Before=sysinit.target shutdown.target
+Before=shutdown.target

 [Service]
 Type=oneshot
--
2.32.0

From c46e3ee08a36bb2588bfeea17f883e6b49164003 Mon Sep 17 00:00:00 2001
From: Dimitri John Ledkov <dimitri.j.ledkov@intel.com>
Date: Tue, 23 Jun 2015 11:23:57 +0100
Subject: [PATCH 01/42] journal: raise compression threshold.

---
 src/libsystemd/sd-journal/journal-file.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/libsystemd/sd-journal/journal-file.c b/src/libsystemd/sd-journal/journal-file.c
index 2c17435de2..264091b38c 100644
--- a/src/libsystemd/sd-journal/journal-file.c
+++ b/src/libsystemd/sd-journal/journal-file.c
@@ -37,7 +37,7 @@
 #define DEFAULT_DATA_HASH_TABLE_SIZE (2047ULL*sizeof(HashItem))
 #define DEFAULT_FIELD_HASH_TABLE_SIZE (333ULL*sizeof(HashItem))

-#define DEFAULT_COMPRESS_THRESHOLD (512ULL)
+#define DEFAULT_COMPRESS_THRESHOLD (8192ULL)
 #define MIN_COMPRESS_THRESHOLD (8ULL)

 /* This is the minimum journal file size */
--
2.32.0

From 2fc5e9f4e38deb7700b54596dd7926f079ffad5e Mon Sep 17 00:00:00 2001
From: Ikey Doherty <michael.i.doherty@intel.com>
Date: Fri, 27 Nov 2015 16:30:12 +0000
Subject: [PATCH 16/42] tmpfiles: Make /var/cache/ldconfig world readable

Signed-off-by: Ikey Doherty <michael.i.doherty@intel.com>
---
 tmpfiles.d/var.conf.in | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/tmpfiles.d/var.conf.in b/tmpfiles.d/var.conf.in
index 557dd20ce9..7bc8ce2516 100644
--- a/tmpfiles.d/var.conf.in
+++ b/tmpfiles.d/var.conf.in
@@ -19,6 +19,8 @@ f /var/log/lastlog 0664 root utmp -
 {% endif %}

 d /var/cache 0755 - - -
+d /var/cache/locale 0755 - - -
+d /var/cache/ldconfig 0755 - - -

 d /var/lib 0755 - - -

--
2.32.0

From 39bc19eadb2b71925e73ec828c20144e8878b9cc Mon Sep 17 00:00:00 2001
From: Dimitri John Ledkov <dimitri.j.ledkov@intel.com>
Date: Tue, 23 Jun 2015 11:26:11 +0100
Subject: [PATCH 03/42] core: use mmap to load files.

---
 src/core/load-fragment.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/core/load-fragment.c b/src/core/load-fragment.c
index 8fb3c378ee..1f0a45f16e 100644
--- a/src/core/load-fragment.c
+++ b/src/core/load-fragment.c
@@ -5743,7 +5743,7 @@ int unit_load_fragment(Unit *u) {
                 /* Try to open the file name. A symlink is OK, for example for linked files or masks. We
                  * expect that all symlinks within the lookup paths have been already resolved, but we don't
                  * verify this here. */
-                f = fopen(fragment, "re");
+                f = fopen(fragment, "rem");
                 if (!f)
                         return log_unit_notice_errno(u, errno, "Failed to open %s: %m", fragment);

--
2.32.0

From db274bb7dc18907ab9fcec206e6095a7d05bc8a3 Mon Sep 17 00:00:00 2001
From: Arjan van de Ven <arjan@linux.intel.com>
Date: Sun, 19 Jun 2016 00:51:22 +0000
Subject: [PATCH 19/42] not load iptables

---
 src/core/kmod-setup.c | 4 ----
 1 file changed, 4 deletions(-)

diff --git a/src/core/kmod-setup.c b/src/core/kmod-setup.c
index 8a7f82812a..ae12d47904 100644
--- a/src/core/kmod-setup.c
+++ b/src/core/kmod-setup.c
@@ -85,10 +85,6 @@ int kmod_setup(void) {
                 /* This should never be a module */
                 { "unix",      "/proc/net/unix",            true,   true,    NULL      },

-#if HAVE_LIBIPTC
-                /* netfilter is needed by networkd, nspawn among others, and cannot be autoloaded */
-                { "ip_tables", "/proc/net/ip_tables_names", false,  false,   NULL      },
-#endif
                 /* virtio_rng would be loaded by udev later, but real entropy might be needed very early */
                 { "virtio_rng", NULL,                       false,  false,   has_virtio_rng },
         };
--
2.32.0

From 7f745724dd30d8bdb1d51922d4f6bbe69574e42f Mon Sep 17 00:00:00 2001
From: Arjan van de Ven <arjan@linux.intel.com>
Date: Sat, 18 Jun 2016 17:33:33 +0000
Subject: [PATCH 18/42] more udev children workers

---
 units/systemd-udevd.service.in | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/units/systemd-udevd.service.in b/units/systemd-udevd.service.in
index c146b0f7f8..e4526cfc49 100644
--- a/units/systemd-udevd.service.in
+++ b/units/systemd-udevd.service.in
@@ -24,7 +24,7 @@ OOMScoreAdjust=-1000
 Sockets=systemd-udevd-control.socket systemd-udevd-kernel.socket
 Restart=always
 RestartSec=0
-ExecStart={{ROOTLIBEXECDIR}}/systemd-udevd
+ExecStart={{ROOTLIBEXECDIR}}/systemd-udevd --children-max=16
 ExecReload=udevadm control --reload --timeout 0
 KillMode=mixed
 TasksMax=infinity
--
2.32.0

From 657503d62c6292887cc074d3b55b31f43ce11be2 Mon Sep 17 00:00:00 2001
From: Auke Kok <auke-jan.h.kok@intel.com>
Date: Fri, 31 Mar 2017 10:14:16 -0700
Subject: [PATCH 21/42] Enable BBR - Bottleneck Bandwidth and RTT

Enable the `fq` qdisc.
---
 sysctl.d/50-default.conf | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/sysctl.d/50-default.conf b/sysctl.d/50-default.conf
index f41e24bcbc..cf6e165e46 100644
--- a/sysctl.d/50-default.conf
+++ b/sysctl.d/50-default.conf
@@ -45,7 +45,7 @@ net.ipv4.conf.*.promote_secondaries = 1
 -net.ipv4.ping_group_range = 0 2147483647

 # Fair Queue CoDel packet scheduler to fight bufferbloat
--net.core.default_qdisc = fq_codel
+-net.core.default_qdisc = fq_pie

 # Enable hard and soft link protection
 fs.protected_hardlinks = 1
--
2.32.0

From 83a6d515834ebb508b87735b0035f79bb0b20ab3 Mon Sep 17 00:00:00 2001
From: Arjan van de Ven <arjan@linux.intel.com>
Date: Mon, 14 Jan 2019 09:43:59 -0800
Subject: [PATCH 35/42] Do not enable audit by default in the journal.

---
 man/journald.conf.xml         | 2 +-
 src/journal/journald-server.c | 2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/man/journald.conf.xml b/man/journald.conf.xml
index e602f80541..4e840afe0b 100644
--- a/man/journald.conf.xml
+++ b/man/journald.conf.xml
@@ -426,7 +426,7 @@
         <command>systemd-journald</command> collects generated audit records, it just controls whether it
         tells the kernel to generate them. This means if another tool turns on auditing even if
         <command>systemd-journald</command> left it off, it will still collect the generated
-        messages. Defaults to on.</para></listitem>
+        messages. Defaults to off.</para></listitem>
       </varlistentry>

       <varlistentry>
diff --git a/src/journal/journald-server.c b/src/journal/journald-server.c
index 87099b0ded..dfca63a1f7 100644
--- a/src/journal/journald-server.c
+++ b/src/journal/journald-server.c
@@ -2190,7 +2190,7 @@ int server_init(Server *s, const char *namespace) {
                 .compress.threshold_bytes = UINT64_MAX,
                 .seal = true,

-                .set_audit = true,
+                .set_audit = false,

                 .watchdog_usec = USEC_INFINITY,

--
2.32.0

From cd499d14663b6807c742e0a5979c786a70f9c2a9 Mon Sep 17 00:00:00 2001
From: Auke Kok <auke-jan.h.kok@intel.com>
Date: Fri, 14 Jul 2017 11:35:13 -0700
Subject: [PATCH 28/42] Compile udev with -O3

udevd benefits from -O3 as it heavily affects boot time.
---
 meson.build | 1 +
 1 file changed, 1 insertion(+)

diff --git a/meson.build b/meson.build
index 45d6161119..868bce1345 100644
--- a/meson.build
+++ b/meson.build
@@ -3194,6 +3194,7 @@ public_programs += executable(
 public_programs += executable(
         'udevadm',
         udevadm_sources,
+        c_args : ['-O3'],
         include_directories : includes,
         link_with : [libudevd_core],
         dependencies : [versiondep,
--
2.32.0

From 06161b9db953621f1214332f0137632d8e405946 Mon Sep 17 00:00:00 2001
From: Auke Kok <auke-jan.h.kok@intel.com>
Date: Fri, 14 Jul 2017 11:31:38 -0700
Subject: [PATCH 24/42] Remove libm memory overhead.

timesyncd pulls in libm, only for one single exp2() in a debug log
statement save the memory by not logging this little bit of info.
---
 src/timesync/timesyncd-manager.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/timesync/timesyncd-manager.c b/src/timesync/timesyncd-manager.c
index cb5d42b1d3..96e1bbdcf6 100644
--- a/src/timesync/timesyncd-manager.c
+++ b/src/timesync/timesyncd-manager.c
@@ -578,7 +578,7 @@ static int manager_receive_response(sd_event_source *source, int fd, uint32_t re
                   NTP_FIELD_VERSION(ntpmsg.field),
                   NTP_FIELD_MODE(ntpmsg.field),
                   ntpmsg.stratum,
-                  exp2(ntpmsg.precision), ntpmsg.precision,
+                  0.0, ntpmsg.precision,
                   root_distance,
                   ntpmsg.stratum == 1 ? ntpmsg.refid : "n/a",
                   origin - OFFSET_1900_1970,
--
2.32.0

From affbdf3851672c492b6936af867e2327339254a0 Mon Sep 17 00:00:00 2001
From: Auke Kok <auke-jan.h.kok@intel.com>
Date: Fri, 31 Mar 2017 10:16:21 -0700
Subject: [PATCH 23/42] DHCP: retry faster.

---
 src/libsystemd-network/sd-dhcp-client.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/libsystemd-network/sd-dhcp-client.c b/src/libsystemd-network/sd-dhcp-client.c
index dc8ff19d1a..de24f09097 100644
--- a/src/libsystemd-network/sd-dhcp-client.c
+++ b/src/libsystemd-network/sd-dhcp-client.c
@@ -770,7 +770,7 @@ static void client_stop(sd_dhcp_client *client, int error) {
  * each attempt with max of 64s, with -1 to +1 sec of random 'fuzz' added.
  * This assumes the first call will be using attempt 1. */
 static usec_t client_compute_request_timeout(usec_t now, uint64_t attempt) {
-        usec_t timeout = (UINT64_C(1) << MIN(attempt + 1, UINT64_C(6))) * USEC_PER_SEC;
+        usec_t timeout = ((UINT64_C(1) << MIN(attempt + 1, UINT64_C(6))) * USEC_PER_SEC) / 4;

         return usec_sub_signed(usec_add(now, timeout), RFC2131_RANDOM_FUZZ);
 }
--
2.32.0

From 0a2d0b41b15012d0514ec4e5a20100c29d7b285e Mon Sep 17 00:00:00 2001
From: Arjan van de Ven <arjan@linux.intel.com>
Date: Wed, 13 Jun 2018 13:42:12 -0700
Subject: [PATCH 32/42] Notify systemd earlier that resolved is ready.

---
 src/resolve/resolved.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/src/resolve/resolved.c b/src/resolve/resolved.c
index aabaa266e9..d2db72e9af 100644
--- a/src/resolve/resolved.c
+++ b/src/resolve/resolved.c
@@ -69,6 +69,8 @@ static int run(int argc, char *argv[]) {

         assert_se(sigprocmask_many(SIG_BLOCK, NULL, SIGTERM, SIGINT, SIGUSR1, SIGUSR2, SIGRTMIN+1, -1) >= 0);

+        notify_stop = notify_start(NOTIFY_READY, NOTIFY_STOPPING);
+
         r = manager_new(&m);
         if (r < 0)
                 return log_error_errno(r, "Could not create manager: %m");
@@ -87,8 +89,6 @@ static int run(int argc, char *argv[]) {
         if (r < 0)
                 return log_error_errno(r, "Failed to drop remaining caps: %m");

-        notify_stop = notify_start(NOTIFY_READY, NOTIFY_STOPPING);
-
         r = sd_event_loop(m->event);
         if (r < 0)
                 return log_error_errno(r, "Event loop failed: %m");
--
2.32.0

From d3c9904d38b8875f73a6c7553bd8c82065e7e3aa Mon Sep 17 00:00:00 2001
From: Arjan van de Ven <arjan@linux.intel.com>
Date: Fri, 11 May 2018 11:08:34 -0700
Subject: [PATCH 30/42] Don't do transient hostnames; we set ours already

---
 src/network/networkd-manager.c | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/src/network/networkd-manager.c b/src/network/networkd-manager.c
index 374d27bef3..3733776068 100644
--- a/src/network/networkd-manager.c
+++ b/src/network/networkd-manager.c
@@ -738,6 +738,8 @@ static int set_hostname_handler(sd_bus_message *m, void *userdata, sd_bus_error
 }

 int manager_set_hostname(Manager *m, const char *hostname) {
+        return 0;
+
         int r;

         log_debug("Setting transient hostname: '%s'", strna(hostname));
--
2.32.0
