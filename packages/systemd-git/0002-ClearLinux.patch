From 4384a282fbc8309ff238d55653cb467c41a7c2a2 Mon Sep 17 00:00:00 2001
From: Dimitri John Ledkov <dimitri.j.ledkov@intel.com>
Date: Tue, 23 Jun 2015 11:23:57 +0100
Subject: [PATCH 01/38] journal: raise compression threshold.

---
 src/libsystemd/sd-journal/journal-file.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/libsystemd/sd-journal/journal-file.c b/src/libsystemd/sd-journal/journal-file.c
index c19f0ce382..9cbe794e8c 100644
--- a/src/libsystemd/sd-journal/journal-file.c
+++ b/src/libsystemd/sd-journal/journal-file.c
@@ -39,7 +39,7 @@
 #define DEFAULT_DATA_HASH_TABLE_SIZE (2047ULL*sizeof(HashItem))
 #define DEFAULT_FIELD_HASH_TABLE_SIZE (333ULL*sizeof(HashItem))

-#define DEFAULT_COMPRESS_THRESHOLD (512ULL)
+#define DEFAULT_COMPRESS_THRESHOLD (8192ULL)
 #define MIN_COMPRESS_THRESHOLD (8ULL)

 /* This is the minimum journal file size */
--
2.36.1

From cb6c0c0a77a8a5739a6f3b109826b42b210c7bd4 Mon Sep 17 00:00:00 2001
From: Dimitri John Ledkov <dimitri.j.ledkov@intel.com>
Date: Tue, 23 Jun 2015 11:26:11 +0100
Subject: [PATCH 03/38] core: use mmap to load files.

---
 src/core/load-fragment.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/core/load-fragment.c b/src/core/load-fragment.c
index 3ff6eae8fc..e45d595346 100644
--- a/src/core/load-fragment.c
+++ b/src/core/load-fragment.c
@@ -6091,7 +6091,7 @@ int unit_load_fragment(Unit *u) {
                 /* Try to open the file name. A symlink is OK, for example for linked files or masks. We
                  * expect that all symlinks within the lookup paths have been already resolved, but we don't
                  * verify this here. */
-                f = fopen(fragment, "re");
+                f = fopen(fragment, "rem");
                 if (!f)
                         return log_unit_notice_errno(u, errno, "Failed to open %s: %m", fragment);

--
2.36.1

From 818ad57591b70580930b0fe4b1cecfe0fd54b687 Mon Sep 17 00:00:00 2001
From: Auke Kok <auke-jan.h.kok@intel.com>
Date: Thu, 5 Apr 2018 10:02:14 -0700
Subject: [PATCH 04/38] Build: drop pam/nsswitch, ship legacy tmpfiles, disable
 resolved as default resolver at boot.

Adapted from Makefile.am patch by Dimitri John Ledkov.

Write the resolv.conf at boot immediately.

Let docker, etc, use the direct nameserver information in
/etc/resolv.conf, instead of redirecting to the stub resolver in
systemd-resolved. The stub resolver fails on CNAME resolution and
breaks various applications.

Ref: https://github.com/coreos/coreos-overlay/pull/2129/commits/76830bedf02a8c54e1d2ce30796046b86bb00b94
---
 meson.build            | 6 ++----
 tmpfiles.d/etc.conf.in | 4 +++-
 2 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/meson.build b/meson.build
index 36cbfa4893..d6e335ee7d 100644
--- a/meson.build
+++ b/meson.build
@@ -189,7 +189,6 @@ udevhwdbdir = udevlibexecdir / 'hwdb.d'
 catalogdir = prefixdir / 'lib/systemd/catalog'
 kerneldir = prefixdir / 'lib/kernel'
 kernelinstalldir = kerneldir / 'install.d'
-factorydir = datadir / 'factory'
 bootlibdir = prefixdir / 'lib/systemd/boot/efi'
 testsdir = prefixdir / 'lib/systemd/tests'
 systemdstatedir = localstatedir / 'lib/systemd'
@@ -3901,9 +3900,8 @@ subdir('shell-completion/zsh')
 subdir('docs/sysvinit')
 subdir('docs/var-log')

-install_subdir('factory/etc',
-               install_dir : factorydir)
-subdir('factory/templates')
+# FIXME: figure out if the warning is true:
+# https://github.com/mesonbuild/meson/wiki/Reference-manual#install_subdir

 if install_sysconfdir
         install_data('xorg/50-systemd-user.sh',
diff --git a/tmpfiles.d/etc.conf.in b/tmpfiles.d/etc.conf.in
index 2fdd498da5..64306e747d 100644
--- a/tmpfiles.d/etc.conf.in
+++ b/tmpfiles.d/etc.conf.in
@@ -7,12 +7,14 @@

 # See tmpfiles.d(5) for details

-L /etc/os-release - - - - ../usr/lib/os-release
 L+ /etc/mtab - - - - ../proc/self/mounts
 {% if HAVE_SMACK_RUN_LABEL %}
 t /etc/mtab - - - - security.SMACK64=_
 {% endif %}
 C! /etc/locale.conf - - - -
+{% if ENABLE_RESOLVE %}
+L+! /etc/resolv.conf - - - - ../run/systemd/resolve/resolv.conf
+{% endif %}
 C! /etc/nsswitch.conf - - - -
 {% if HAVE_PAM %}
 C! /etc/pam.d - - - -
--
2.36.1

From d299aa9b1d57ce772c444c597259147cb6aa6092 Mon Sep 17 00:00:00 2001
From: Dimitri John Ledkov <dimitri.j.ledkov@intel.com>
Date: Tue, 23 Jun 2015 11:40:24 +0100
Subject: [PATCH 06/38] logind,pam: fix systemd-user to include common-session.

---
 factory/etc/pam.d/other | 1 +
 1 file changed, 1 insertion(+)

diff --git a/factory/etc/pam.d/other b/factory/etc/pam.d/other
index c1f729659c..83408c327b 100644
--- a/factory/etc/pam.d/other
+++ b/factory/etc/pam.d/other
@@ -4,3 +4,4 @@ auth     include system-auth
 account  include system-auth
 password include system-auth
 session  include system-auth
+session  include common-session
--
2.36.1

From 1bed0a658d981b3e2dd6cac99d845b699e09f35b Mon Sep 17 00:00:00 2001
From: Dimitri John Ledkov <dimitri.j.ledkov@intel.com>
Date: Tue, 23 Jun 2015 11:47:18 +0100
Subject: [PATCH 07/38] sd-event: return malloc() memory reserves when main
 loop is idle.

---
 src/libsystemd/sd-event/sd-event.c | 13 +++++++++++--
 1 file changed, 11 insertions(+), 2 deletions(-)

diff --git a/src/libsystemd/sd-event/sd-event.c b/src/libsystemd/sd-event/sd-event.c
index e5d370d4f3..38e3633a15 100644
--- a/src/libsystemd/sd-event/sd-event.c
+++ b/src/libsystemd/sd-event/sd-event.c
@@ -3,6 +3,7 @@
 #include <sys/epoll.h>
 #include <sys/timerfd.h>
 #include <sys/wait.h>
+#include <malloc.h>

 #include "sd-daemon.h"
 #include "sd-event.h"
@@ -4224,9 +4225,17 @@ _public_ int sd_event_run(sd_event *e, uint64_t timeout) {
         _unused_ _cleanup_(sd_event_unrefp) sd_event *ref = sd_event_ref(e);

         r = sd_event_prepare(e);
-        if (r == 0)
-                /* There was nothing? Then wait... */
+        if (r == 0) {
+                /* There was nothing? Then wait...
+                 *
+                 * ... but since there is no event pending, likely
+                 * we'll be idle for a long time.  This is a good time
+                 * to return any malloc() memory reserves to the
+                 * operating system.
+                 */
+                malloc_trim(0);
                 r = sd_event_wait(e, timeout);
+        }

         if (e->profile_delays)
                 e->last_run_usec = now(CLOCK_MONOTONIC);
--
2.36.1


From 05788d412068da14305095b5326ba516c4b7819f Mon Sep 17 00:00:00 2001
From: Dimitri John Ledkov <dimitri.j.ledkov@intel.com>
Date: Tue, 23 Jun 2015 11:48:36 +0100
Subject: [PATCH 08/38] efi-boot-generator: Do not automount boot partition.

---
 src/gpt-auto-generator/gpt-auto-generator.c | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/src/gpt-auto-generator/gpt-auto-generator.c b/src/gpt-auto-generator/gpt-auto-generator.c
index 589a2cc582..92c6e49f88 100644
--- a/src/gpt-auto-generator/gpt-auto-generator.c
+++ b/src/gpt-auto-generator/gpt-auto-generator.c
@@ -463,6 +463,9 @@ static int add_automount(
         if (r < 0)
                 return log_error_errno(r, "Failed to write unit file %s: %m", p);

+        if (streq(id, "boot"))
+                return 0;
+
         return generator_add_symlink(arg_dest, SPECIAL_LOCAL_FS_TARGET, "wants", unit);
 }

--
2.36.1


From e51bbcd11e15f2cbc0fcf89fcfc82e0842d19351 Mon Sep 17 00:00:00 2001
From: Dimitri John Ledkov <dimitri.j.ledkov@intel.com>
Date: Tue, 23 Jun 2015 11:50:13 +0100
Subject: [PATCH 09/38] core: do not apply presets.

---
 src/core/manager.c | 2 --
 1 file changed, 2 deletions(-)

diff --git a/src/core/manager.c b/src/core/manager.c
index 296b759959..ef6db7989a 100644
--- a/src/core/manager.c
+++ b/src/core/manager.c
@@ -1793,8 +1793,6 @@ int manager_startup(Manager *m, FILE *serialization, FDSet *fds, const char *roo
         if (r < 0)
                 return r;

-        manager_preset_all(m);
-
         lookup_paths_log(&m->lookup_paths);

         {
--
2.36.1

From 0359443ad4fc7c8052962b010f4a668a6312acc2 Mon Sep 17 00:00:00 2001
From: Dimitri John Ledkov <dimitri.j.ledkov@intel.com>
Date: Mon, 6 Jul 2015 17:07:42 +0100
Subject: [PATCH 10/38] mount-setup: mount kernel fs by default.

Instead of using mount units, just mount hugetlbfs, mqueue, fusectl,
configfs, debugfs directly from mount-setup.
---
 src/shared/mount-setup.c            | 10 +++++++++
 units/dev-hugepages.mount           | 23 ---------------------
 units/dev-mqueue.mount              | 23 ---------------------
 units/meson.build                   | 13 +-----------
 units/sys-fs-fuse-connections.mount | 32 -----------------------------
 units/sys-kernel-config.mount       | 31 ----------------------------
 units/sys-kernel-debug.mount        | 23 ---------------------
 7 files changed, 11 insertions(+), 144 deletions(-)
 delete mode 100644 units/dev-hugepages.mount
 delete mode 100644 units/dev-mqueue.mount
 delete mode 100644 units/sys-fs-fuse-connections.mount
 delete mode 100644 units/sys-kernel-config.mount
 delete mode 100644 units/sys-kernel-debug.mount

diff --git a/src/shared/mount-setup.c b/src/shared/mount-setup.c
index 975c027f47..d8a95f4941 100644
--- a/src/shared/mount-setup.c
+++ b/src/shared/mount-setup.c
@@ -110,6 +110,16 @@ static const MountPoint mount_table[] = {
 #endif
         { "bpf",         "/sys/fs/bpf",               "bpf",        "mode=700",                                MS_NOSUID|MS_NOEXEC|MS_NODEV,
           NULL,          MNT_NONE,                  },
+        { "hugetlbfs",   "/dev/hugepages",            "hugetlbfs",  NULL,                                      MS_NOSUID|MS_NOEXEC|MS_NODEV,
+          NULL,          MNT_NONE                   },
+        { "mqueue",      "/dev/mqueue",               "mqueue",     NULL,                                      MS_NOSUID|MS_NOEXEC|MS_NODEV,
+          NULL,          MNT_NONE                   },
+        { "fusectl",     "/sys/fs/fuse/connections",  "fusectl",    NULL,                                      MS_NOSUID|MS_NOEXEC|MS_NODEV,
+          NULL,          MNT_NONE                   },
+        { "configfs",    "/sys/kernel/config",        "configfs",   NULL,                                      MS_NOSUID|MS_NOEXEC|MS_NODEV,
+          NULL,          MNT_NONE                   },
+        { "debugfs",     "/sys/kernel/debug",         "debugfs",    NULL,                                      MS_NOSUID|MS_NOEXEC|MS_NODEV,
+          NULL,          MNT_NONE                   },
 };

 bool mount_point_is_api(const char *path) {
diff --git a/units/dev-mqueue.mount b/units/dev-mqueue.mount
deleted file mode 100644
index 02683a9e1e..0000000000
--- a/units/dev-mqueue.mount
+++ /dev/null
@@ -1,23 +0,0 @@
-#  SPDX-License-Identifier: LGPL-2.1-or-later
-#
-#  This file is part of systemd.
-#
-#  systemd is free software; you can redistribute it and/or modify it
-#  under the terms of the GNU Lesser General Public License as published by
-#  the Free Software Foundation; either version 2.1 of the License, or
-#  (at your option) any later version.
-
-[Unit]
-Description=POSIX Message Queue File System
-Documentation=man:mq_overview(7)
-Documentation=https://www.freedesktop.org/wiki/Software/systemd/APIFileSystems
-DefaultDependencies=no
-Before=sysinit.target
-ConditionPathExists=/proc/sys/fs/mqueue
-ConditionCapability=CAP_SYS_ADMIN
-
-[Mount]
-What=mqueue
-Where=/dev/mqueue
-Type=mqueue
-Options=nosuid,nodev,noexec
diff --git a/units/meson.build b/units/meson.build
index e8f81f2230..e9f925a810 100644
--- a/units/meson.build
+++ b/units/meson.build
@@ -11,15 +11,10 @@ units = [
         ['cryptsetup.target',                   'HAVE_LIBCRYPTSETUP',
          'sysinit.target.wants/'],
         ['veritysetup-pre.target',              'HAVE_LIBCRYPTSETUP'],
-        ['veritysetup.target',                  'HAVE_LIBCRYPTSETUP',
-         'sysinit.target.wants/'],
+        ['veritysetup.target',                  'HAVE_LIBCRYPTSETUP'],
         ['integritysetup-pre.target',           'HAVE_LIBCRYPTSETUP'],
         ['integritysetup.target',               'HAVE_LIBCRYPTSETUP',
          'sysinit.target.wants/'],
-        ['dev-hugepages.mount',                 '',
-         'sysinit.target.wants/'],
-        ['dev-mqueue.mount',                    '',
-         'sysinit.target.wants/'],
         ['emergency.target',                    ''],
         ['exit.target',                         ''],
         ['factory-reset.target',                ''],
@@ -86,12 +81,6 @@ units = [
         ['sound.target',                        ''],
         ['suspend.target',                      ''],
         ['swap.target',                         ''],
-        ['sys-fs-fuse-connections.mount',       '',
-         'sysinit.target.wants/'],
-        ['sys-kernel-config.mount',             '',
-         'sysinit.target.wants/'],
-        ['sys-kernel-debug.mount',              '',
-         'sysinit.target.wants/'],
         ['sys-kernel-tracing.mount',            '',
          'sysinit.target.wants/'],
         ['sysinit.target',                      ''],

From ceb3b8a49d78ed68849477e3d72e473cbfdefecf Mon Sep 17 00:00:00 2001
From: Dimitri John Ledkov <dimitri.j.ledkov@intel.com>
Date: Mon, 24 Aug 2015 14:42:53 +0100
Subject: [PATCH 11/38] Ship default services in system unit dir.

---
 units/meson.build | 23 +++++++++++++++--------
 1 file changed, 15 insertions(+), 8 deletions(-)

diff --git a/units/meson.build b/units/meson.build
index e9f925a810..89ea147fbe 100644
--- a/units/meson.build
+++ b/units/meson.build
@@ -68,7 +68,8 @@ units = [
         ['remote-veritysetup.target',           'HAVE_LIBCRYPTSETUP',
          'initrd-root-device.target.wants/'],
         ['remote-fs-pre.target',                ''],
-        ['remote-fs.target',                    ''],
+        ['remote-fs.target',                    '',
+         'multi-user.target.wants/'],
         ['rescue.target',                       '',
          (with_runlevels ? 'runlevel1.target' : '')],
         ['rpcbind.target',                      ''],
@@ -208,10 +209,12 @@ in_units = [
          'dbus-org.freedesktop.machine1.service'],
         ['systemd-modules-load.service',         'HAVE_KMOD',
          'sysinit.target.wants/'],
-        ['systemd-network-generator.service',    ''],
-        ['systemd-networkd.service',             'ENABLE_NETWORKD'],
-        ['systemd-networkd-wait-online.service', 'ENABLE_NETWORKD'],
-        ['systemd-networkd-wait-online@.service','ENABLE_NETWORKD'],
+        ['systemd-network-generator.service',    'ENABLE_NETWORKD'],
+        ['systemd-networkd.service',             'ENABLE_NETWORKD',
+         ('dbus-org.freedesktop.network1.service' + ' ' +
+         'multi-user.target.wants/')],
+        ['systemd-networkd-wait-online.service', 'ENABLE_NETWORKD',
+         'network-online.target.wants/'],
         ['systemd-nspawn@.service',              ''],
         ['systemd-oomd.service',                 'ENABLE_OOMD'],
         ['systemd-portabled.service',            'ENABLE_PORTABLED',
@@ -221,8 +224,11 @@ in_units = [
         ['systemd-quotacheck.service',           'ENABLE_QUOTACHECK'],
         ['systemd-random-seed.service',          'ENABLE_RANDOMSEED',
          'sysinit.target.wants/'],
-        ['systemd-remount-fs.service',           ''],
-        ['systemd-resolved.service',             'ENABLE_RESOLVE'],
+        ['systemd-remount-fs.service',           '',
+         'local-fs.target.wants/'],
+        ['systemd-resolved.service',             'ENABLE_RESOLVE',
+         ('dbus-org.freedesktop.resolve1.service' + ' ' +
+         'multi-user.target.wants/')],
         ['systemd-rfkill.service',               'ENABLE_RFKILL'],
         ['systemd-suspend.service',              ''],
         ['systemd-sysctl.service',               '',
@@ -231,7 +237,8 @@ in_units = [
         ['systemd-sysupdate-reboot.service',     'ENABLE_SYSUPDATE'],
         ['systemd-timedated.service',            'ENABLE_TIMEDATED',
          'dbus-org.freedesktop.timedate1.service'],
-        ['systemd-timesyncd.service',            'ENABLE_TIMESYNCD'],
+        ['systemd-timesyncd.service',            'ENABLE_TIMESYNCD',
+         'sysinit.target.wants/'],
         ['systemd-time-wait-sync.service',       'ENABLE_TIMESYNCD'],
         ['systemd-udevd.service',                '',
          'sysinit.target.wants/'],
--
2.36.1

From 89ecac3669db9b0c48a601bb362b5fb0fd2a7303 Mon Sep 17 00:00:00 2001
From: Ikey Doherty <michael.i.doherty@intel.com>
Date: Fri, 27 Nov 2015 16:30:12 +0000
Subject: [PATCH 13/38] tmpfiles: Make /var/cache/ldconfig world readable

Signed-off-by: Ikey Doherty <michael.i.doherty@intel.com>
---
 tmpfiles.d/var.conf.in | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/tmpfiles.d/var.conf.in b/tmpfiles.d/var.conf.in
index 557dd20ce9..7bc8ce2516 100644
--- a/tmpfiles.d/var.conf.in
+++ b/tmpfiles.d/var.conf.in
@@ -19,6 +19,8 @@ f /var/log/lastlog 0664 root utmp -
 {% endif %}

 d /var/cache 0755 - - -
+d /var/cache/locale 0755 - - -
+d /var/cache/ldconfig 0755 - - -

 d /var/lib 0755 - - -

--
2.36.1

From 8e4cfbbec6543cef4b40df3a83d890d91b222e3a Mon Sep 17 00:00:00 2001
From: Auke Kok <auke-jan.h.kok@intel.com>
Date: Fri, 31 Mar 2017 10:15:52 -0700
Subject: [PATCH 19/38] network-online: complete once one link is online, not
 all.

---
 units/systemd-networkd-wait-online.service.in | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/units/systemd-networkd-wait-online.service.in b/units/systemd-networkd-wait-online.service.in
index 10d8b08c8e..6dd5f79377 100644
--- a/units/systemd-networkd-wait-online.service.in
+++ b/units/systemd-networkd-wait-online.service.in
@@ -18,7 +18,7 @@ Before=network-online.target shutdown.target

 [Service]
 Type=oneshot
-ExecStart={{ROOTLIBEXECDIR}}/systemd-networkd-wait-online
+ExecStart={{ROOTLIBEXECDIR}}/systemd-networkd-wait-online --any
 RemainAfterExit=yes

 [Install]
--
2.36.1

From 5bd12e710dffd3836a01e3f11da98e9760fb5cb3 Mon Sep 17 00:00:00 2001
From: Auke Kok <auke-jan.h.kok@intel.com>
Date: Fri, 31 Mar 2017 10:16:21 -0700
Subject: [PATCH 20/38] DHCP: retry faster.

---
 src/libsystemd-network/sd-dhcp-client.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/libsystemd-network/sd-dhcp-client.c b/src/libsystemd-network/sd-dhcp-client.c
index d2c6361cb8..2c9ca5329d 100644
--- a/src/libsystemd-network/sd-dhcp-client.c
+++ b/src/libsystemd-network/sd-dhcp-client.c
@@ -760,7 +760,7 @@ static void client_stop(sd_dhcp_client *client, int error) {
  * each attempt with max of 64s, with -1 to +1 sec of random 'fuzz' added.
  * This assumes the first call will be using attempt 1. */
 static usec_t client_compute_request_timeout(usec_t now, uint64_t attempt) {
-        usec_t timeout = (UINT64_C(1) << MIN(attempt + 1, UINT64_C(6))) * USEC_PER_SEC;
+        usec_t timeout = ((UINT64_C(1) << MIN(attempt + 1, UINT64_C(6))) * USEC_PER_SEC) / 4;

         return usec_sub_signed(usec_add(now, timeout), RFC2131_RANDOM_FUZZ);
 }
--
2.36.1

From a2e68c13c42b3082560f9068489b2b93a3e76ec7 Mon Sep 17 00:00:00 2001
From: Auke Kok <auke-jan.h.kok@intel.com>
Date: Fri, 14 Jul 2017 11:31:38 -0700
Subject: [PATCH 21/38] Remove libm memory overhead.

timesyncd pulls in libm, only for one single exp2() in a debug log
statement save the memory by not logging this little bit of info.
---
 src/timesync/timesyncd-manager.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/timesync/timesyncd-manager.c b/src/timesync/timesyncd-manager.c
index 9325523838..12bcf18dc3 100644
--- a/src/timesync/timesyncd-manager.c
+++ b/src/timesync/timesyncd-manager.c
@@ -556,7 +556,7 @@ static int manager_receive_response(sd_event_source *source, int fd, uint32_t re
                   NTP_FIELD_VERSION(ntpmsg.field),
                   NTP_FIELD_MODE(ntpmsg.field),
                   ntpmsg.stratum,
-                  exp2(ntpmsg.precision), ntpmsg.precision,
+                  0.0, ntpmsg.precision,
                   root_distance,
                   ntpmsg.stratum == 1 ? ntpmsg.refid : "n/a",
                   origin - OFFSET_1900_1970,
--
2.36.1

From 9380d230e9e307c9fe81a777eb7a421b39e47698 Mon Sep 17 00:00:00 2001
From: Auke Kok <auke-jan.h.kok@intel.com>
Date: Fri, 14 Jul 2017 11:33:26 -0700
Subject: [PATCH 22/38] skip not-present ACPI devices

Xen and older Qemu expose a boatload (253) ACPI devices to the guest
that are not present; these show up in sysfs but there's nothing
meaningful one can do with them.

This patch will have udev skip these devices to save the 100ms+
boot time
---
 src/libsystemd/sd-device/device-enumerator.c | 19 +++++++++++++++++++
 1 file changed, 19 insertions(+)

diff --git a/src/libsystemd/sd-device/device-enumerator.c b/src/libsystemd/sd-device/device-enumerator.c
index 39f769c35c..38734e0145 100644
--- a/src/libsystemd/sd-device/device-enumerator.c
+++ b/src/libsystemd/sd-device/device-enumerator.c
@@ -665,6 +665,22 @@ static bool relevant_sysfs_subdir(const struct dirent *de) {
         return IN_SET(de->d_type, DT_DIR, DT_LNK);
 }

+static int acpi_status_disabled(char *sysfspath) {
+        FILE *file;
+        unsigned int i;
+        char newpath[4096];
+        char line[128];
+        sprintf(newpath, "%s/status", sysfspath);
+        file = fopen(newpath, "r");
+        if (!file)
+                return 0;
+        fclose(file);
+
+        if (strstr(sysfspath, "acpi") && strstr(sysfspath, "device:"))
+                return 1;
+        return 0;
+}
+
 static int enumerator_scan_dir_and_add_devices(
                 sd_device_enumerator *enumerator,
                 const char *basedir,
@@ -703,6 +719,9 @@ static int enumerator_scan_dir_and_add_devices(

                 (void) sprintf(syspath, "%s%s", path, de->d_name);

+                if (acpi_status_disabled(syspath))
+                        continue;
+
                 k = sd_device_new_from_syspath(&device, syspath);
                 if (k < 0) {
                         if (k != -ENODEV)
--
2.36.1

From b9564fff6d7bd1ac10782c8d6d7cdc7c905935b2 Mon Sep 17 00:00:00 2001
From: Auke Kok <auke-jan.h.kok@intel.com>
Date: Fri, 14 Jul 2017 11:34:00 -0700
Subject: [PATCH 23/38] Ensure /var/run is never a directory.

---
 src/shared/mount-setup.c | 8 ++++++++
 1 file changed, 8 insertions(+)

diff --git a/src/shared/mount-setup.c b/src/shared/mount-setup.c
index d8a95f4941..bbe1112cc8 100644
--- a/src/shared/mount-setup.c
+++ b/src/shared/mount-setup.c
@@ -510,11 +510,19 @@ static int relabel_extra(void) {

 int mount_setup(bool loaded_policy, bool leave_propagation) {
         int r;
+        struct stat sb;

         r = mount_points_setup(ELEMENTSOF(mount_table), loaded_policy);
         if (r < 0)
                 return r;

+        r = lstat("/var/run", &sb);
+        if (r == 0 && sb.st_mode & S_IFDIR) {
+                char path[256];
+                sprintf(path, "/var/run.%i", (int)time(NULL));
+                rename("/var/run", path);
+        }
+
 #if HAVE_SELINUX || ENABLE_SMACK
         /* Nodes in devtmpfs and /run need to be manually updated for
          * the appropriate labels, after mounting. The other virtual
--
2.36.1


From 54e9c48151c1bd7d6a8d623d7bfe2c3de2e4ef3b Mon Sep 17 00:00:00 2001
From: Auke Kok <auke-jan.h.kok@intel.com>
Date: Fri, 14 Jul 2017 11:34:36 -0700
Subject: [PATCH 24/38] Make timesyncd a "simple" service

the daemon ends up waiting 100 msec on networking conditions before notifying
that it is done, even though that's really not relevant
---
 units/systemd-timesyncd.service.in | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/units/systemd-timesyncd.service.in b/units/systemd-timesyncd.service.in
index c606461091..3771ede671 100644
--- a/units/systemd-timesyncd.service.in
+++ b/units/systemd-timesyncd.service.in
@@ -51,7 +51,7 @@ StateDirectory=systemd/timesync
 SystemCallArchitectures=native
 SystemCallErrorNumber=EPERM
 SystemCallFilter=@system-service @clock
-Type=notify
+Type=simple
 User=systemd-timesync
 {{SERVICE_WATCHDOG}}

--
2.36.1


From 87e3076087b822f8f42de7297f1a22b8d227cf71 Mon Sep 17 00:00:00 2001
From: Auke Kok <auke-jan.h.kok@intel.com>
Date: Fri, 14 Jul 2017 11:35:13 -0700
Subject: [PATCH 25/38] Compile udev with -O3

udevd benefits from -O3 as it heavily affects boot time.
---
 meson.build | 1 +
 1 file changed, 1 insertion(+)

diff --git a/meson.build b/meson.build
index d6e335ee7d..fc8a0e987d 100644
--- a/meson.build
+++ b/meson.build
@@ -3544,6 +3544,7 @@ public_programs += executable(
 udevadm = executable(
         'udevadm',
         udevadm_sources,
+        c_args : ['-O3'],
         include_directories : includes,
         link_with : [libudevd_core],
         dependencies : [versiondep,
--
2.36.1

From adfc6602eb3901fa355b258013e4ec09cbf7c185 Mon Sep 17 00:00:00 2001
From: Auke Kok <auke-jan.h.kok@intel.com>
Date: Fri, 14 Jul 2017 11:37:58 -0700
Subject: [PATCH 26/38] Don't wait for utmp at shutdown.

---
 units/systemd-update-utmp.service.in | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/units/systemd-update-utmp.service.in b/units/systemd-update-utmp.service.in
index cedefa8e08..e23c515578 100644
--- a/units/systemd-update-utmp.service.in
+++ b/units/systemd-update-utmp.service.in
@@ -14,7 +14,7 @@ DefaultDependencies=no
 RequiresMountsFor=/var/log/wtmp
 Conflicts=shutdown.target
 After=systemd-remount-fs.service systemd-tmpfiles-setup.service auditd.service
-Before=sysinit.target shutdown.target
+Before=shutdown.target

 [Service]
 Type=oneshot
--
2.36.1

From 9cfd8116ebaca93b274874f881f82a48680526a7 Mon Sep 17 00:00:00 2001
From: Arjan van de Ven <arjan@linux.intel.com>
Date: Fri, 11 May 2018 11:08:34 -0700
Subject: [PATCH 27/38] Don't do transient hostnames; we set ours already

---
 src/network/networkd-manager.c | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/src/network/networkd-manager.c b/src/network/networkd-manager.c
index 3cda1110b9..d5bbec5bda 100644
--- a/src/network/networkd-manager.c
+++ b/src/network/networkd-manager.c
@@ -936,6 +936,8 @@ static int set_hostname_handler(sd_bus_message *m, void *userdata, sd_bus_error
 }

 int manager_set_hostname(Manager *m, const char *hostname) {
+        return 0;
+
         int r;

         log_debug("Setting transient hostname: '%s'", strna(hostname));
--
2.36.1

From f4e78dca2ed3fd3ea9c0b4bad9652d4990e295d6 Mon Sep 17 00:00:00 2001
From: Arjan van de Ven <arjan@linux.intel.com>
Date: Wed, 13 Jun 2018 11:49:55 -0700
Subject: [PATCH 28/38] don't use libm just for integer exp10()

---
 src/resolve/resolved-dns-rr.c | 7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)

diff --git a/src/resolve/resolved-dns-rr.c b/src/resolve/resolved-dns-rr.c
index 92245770bc..56d85bb09a 100644
--- a/src/resolve/resolved-dns-rr.c
+++ b/src/resolve/resolved-dns-rr.c
@@ -703,6 +703,7 @@ int dns_resource_record_equal(const DnsResourceRecord *a, const DnsResourceRecor
         return dns_resource_record_payload_equal(a, b);
 }

+static double exp10table[16] = {1E0, 1E1, 1E2, 1E3, 1E4, 1E5, 1E6, 1E7, 1E8, 1E9, 1E10, 1E11, 1E12, 1E13, 1E14, 1E15};
 static char* format_location(uint32_t latitude, uint32_t longitude, uint32_t altitude,
                              uint8_t size, uint8_t horiz_pre, uint8_t vert_pre) {
         char *s;
@@ -712,9 +713,9 @@ static char* format_location(uint32_t latitude, uint32_t longitude, uint32_t alt
         int lat = latitude >= 1U<<31 ? (int) (latitude - (1U<<31)) : (int) ((1U<<31) - latitude);
         int lon = longitude >= 1U<<31 ? (int) (longitude - (1U<<31)) : (int) ((1U<<31) - longitude);
         double alt = altitude >= 10000000u ? altitude - 10000000u : -(double)(10000000u - altitude);
-        double siz = (size >> 4) * exp10((double) (size & 0xF));
-        double hor = (horiz_pre >> 4) * exp10((double) (horiz_pre & 0xF));
-        double ver = (vert_pre >> 4) * exp10((double) (vert_pre & 0xF));
+        double siz = (size >> 4) * exp10table[size & 0xF];
+        double hor = (horiz_pre >> 4) * exp10table[horiz_pre & 0xF];
+        double ver = (vert_pre >> 4) * exp10table[vert_pre & 0xF];

         if (asprintf(&s, "%d %d %.3f %c %d %d %.3f %c %.2fm %.2fm %.2fm %.2fm",
                      (lat / 60000 / 60),
--
2.36.1

From b4fd6697af9a31c22d24b040fd3559c3fc465f09 Mon Sep 17 00:00:00 2001
From: Arjan van de Ven <arjan@linux.intel.com>
Date: Wed, 13 Jun 2018 13:42:12 -0700
Subject: [PATCH 29/38] Notify systemd earlier that resolved is ready.

---
 src/resolve/resolved.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/src/resolve/resolved.c b/src/resolve/resolved.c
index d3bc902752..a5878d71ee 100644
--- a/src/resolve/resolved.c
+++ b/src/resolve/resolved.c
@@ -69,6 +69,8 @@ static int run(int argc, char *argv[]) {

         assert_se(sigprocmask_many(SIG_BLOCK, NULL, SIGTERM, SIGINT, SIGUSR1, SIGUSR2, SIGRTMIN+1, -1) >= 0);

+        notify_stop = notify_start(NOTIFY_READY, NOTIFY_STOPPING);
+
         r = manager_new(&m);
         if (r < 0)
                 return log_error_errno(r, "Could not create manager: %m");
@@ -87,8 +89,6 @@ static int run(int argc, char *argv[]) {
         if (r < 0)
                 return log_error_errno(r, "Failed to drop remaining caps: %m");

-        notify_stop = notify_start(NOTIFY_READY, NOTIFY_STOPPING);
-
         r = sd_event_loop(m->event);
         if (r < 0)
                 return log_error_errno(r, "Event loop failed: %m");
--
2.36.1

From 7356368de5b38b7bdc35e6333799907aeb00bfb1 Mon Sep 17 00:00:00 2001
From: William Douglas <william.douglas@intel.com>
Date: Fri, 27 Jul 2018 17:50:48 +0000
Subject: [PATCH 30/38] Hand off coredumps to a wrapper that will optionally
 use telemetry

Send core files to a wrapper script that will try and send the coredumps to the
telemetry core handler if it exists and also send the coredumps to systemd's
core file handler.
---
 src/coredump/coredump-wrapper | 17 +++++++++++++++++
 sysctl.d/50-coredump.conf.in  |  2 +-
 2 files changed, 18 insertions(+), 1 deletion(-)
 create mode 100755 src/coredump/coredump-wrapper

diff --git a/src/coredump/coredump-wrapper b/src/coredump/coredump-wrapper
new file mode 100755
index 0000000000..1a74a5d6ed
--- /dev/null
+++ b/src/coredump/coredump-wrapper
@@ -0,0 +1,17 @@
+#!/bin/bash
+
+set -e
+
+if [ $# != 9 ]; then
+        echo "Expected 9 arguments, got $#"
+        exit -1
+fi
+
+E="$1"
+shift
+
+if [ -x /usr/bin/crashprobe ]; then
+        tee >(/usr/bin/crashprobe -p "$8" -E "$E" -s "$4") | /usr/lib/systemd/systemd-coredump "$@"
+else
+        /usr/lib/systemd/systemd-coredump "$@"
+fi
diff --git a/sysctl.d/50-coredump.conf.in b/sysctl.d/50-coredump.conf.in
index 5fb551a8cf..2cd5a7f95e 100644
--- a/sysctl.d/50-coredump.conf.in
+++ b/sysctl.d/50-coredump.conf.in
@@ -13,7 +13,7 @@
 # the core dump.
 #
 # See systemd-coredump(8) and core(5).
-kernel.core_pattern=|{{ROOTLIBEXECDIR}}/systemd-coredump %P %u %g %s %t %c %h
+kernel.core_pattern=|{{ROOTLIBEXECDIR}}/coredump-wrapper %E %P %u %g %s %t %c %h %e

 # Allow 16 coredumps to be dispatched in parallel by the kernel.
 # We collect metadata from /proc/%P/, and thus need to make sure the crashed
--
2.36.1

From cce66e3e941ff6565dfdcdbde78262eac68bdaee Mon Sep 17 00:00:00 2001
From: Arjan van de Ven <arjan@linux.intel.com>
Date: Mon, 14 Jan 2019 09:46:32 -0800
Subject: [PATCH 33/38] Disable XZ support in the journal.

---
 src/basic/compress.c    | 5 ++---
 src/coredump/coredump.c | 3 +++
 2 files changed, 5 insertions(+), 3 deletions(-)

diff --git a/src/basic/compress.c b/src/basic/compress.c
index 1e94635397..70b675adef 100644
--- a/src/basic/compress.c
+++ b/src/basic/compress.c
@@ -8,9 +8,8 @@
 #include <sys/types.h>
 #include <unistd.h>

-#if HAVE_XZ
-#include <lzma.h>
-#endif
+#undef HAVE_XZ
+#define HAVE_XZ 0

 #if HAVE_LZ4
 #include <lz4.h>
diff --git a/src/coredump/coredump.c b/src/coredump/coredump.c
index 003d4f74d1..7a2f18864d 100644
--- a/src/coredump/coredump.c
+++ b/src/coredump/coredump.c
@@ -48,6 +48,9 @@
 #include "uid-alloc-range.h"
 #include "user-util.h"

+#undef HAVE_XZ
+#define HAVE_XZ 0
+
 /* The maximum size up to which we process coredumps. We use 1G on 32bit systems, and 32G on 64bit systems */
 #if __SIZEOF_POINTER__ == 4
 #define PROCESS_SIZE_MAX ((uint64_t) (1LLU*1024LLU*1024LLU*1024LLU))
--
2.36.1

From a15eef73fc5a71a3106cc125f5a8f312c6504e89 Mon Sep 17 00:00:00 2001
From: Auke Kok <auke-jan.h.kok@intel.com>
Date: Fri, 18 Oct 2019 21:42:12 -0700
Subject: [PATCH 36/38] Disable LLDP listening by default.

Do not listen on a raw socket by default for this. Let the
local admin explicitly enable it instead.

https://github.com/clearlinux/distribution/issues/1368
---
 src/network/networkd-network.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/network/networkd-network.c b/src/network/networkd-network.c
index 39ea4eddd0..ce8cf0b6b7 100644
--- a/src/network/networkd-network.c
+++ b/src/network/networkd-network.c
@@ -451,7 +451,7 @@ int network_load_one(Manager *manager, OrderedHashmap **networks, const char *fi
                 .priority = LINK_BRIDGE_PORT_PRIORITY_INVALID,
                 .multicast_router = _MULTICAST_ROUTER_INVALID,

-                .lldp_mode = LLDP_MODE_ROUTERS_ONLY,
+                .lldp_mode = LLDP_MODE_NO,
                 .lldp_multicast_mode = _SD_LLDP_MULTICAST_MODE_INVALID,

                 .dns_default_route = -1,
--
2.36.1

From bd049a7fd3be8c3f4403c33f339fec22d5b42635 Mon Sep 17 00:00:00 2001
From: Mark D Horn <mark.d.horn@intel.com>
Date: Fri, 3 Apr 2020 11:37:22 -0700
Subject: [PATCH 37/38] units: use /var/swapfile if found

New unit to automatically make use of a swapfile if
it exists, not a symlink, and /var is writable.

Signed-off-by: Mark D Horn <mark.d.horn@intel.com>
---
 units/meson.build       |  2 ++
 units/var-swapfile.swap | 19 +++++++++++++++++++
 2 files changed, 21 insertions(+)
 create mode 100644 units/var-swapfile.swap

diff --git a/units/meson.build b/units/meson.build
index 2278cac28a..e02439c3a8 100644
--- a/units/meson.build
+++ b/units/meson.build
@@ -160,6 +160,8 @@ units = [
         ['var-lib-machines.mount',              'ENABLE_MACHINED',
          'remote-fs.target.wants/ machines.target.wants/'],
         ['systemd-oomd.socket',                 'ENABLE_OOMD'],
+        ['var-swapfile.swap',                   '',
+         'swap.target.wants/'],
 ]

 in_units = [
diff --git a/units/var-swapfile.swap b/units/var-swapfile.swap
new file mode 100644
index 0000000000..6c61cf8ca4
--- /dev/null
+++ b/units/var-swapfile.swap
@@ -0,0 +1,19 @@
+#  SPDX-License-Identifier: LGPL-2.1+
+#
+#  This file is part of systemd.
+#
+#  systemd is free software; you can redistribute it and/or modify it
+#  under the terms of the GNU Lesser General Public License as published by
+#  the Free Software Foundation; either version 2.1 of the License, or
+#  (at your option) any later version.
+
+[Unit]
+Description=Default Swap File (/var/swapfile)
+Documentation=man:systemd.swap(5)
+ConditionPathExists=/var/swapfile
+ConditionPathIsSymbolicLink=!/var/swapfile
+ConditionPathIsReadWrite=/var/swapfile
+
+[Swap]
+What=/var/swapfile
+Options=discard,fixpgsz
--
2.36.1
