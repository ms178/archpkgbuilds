# Maintainer: CachyOS
# Contributor: jm-change

pkgname=ninja-kitware-git
_pkgname=ninja-kitware
pkgver=1.13.0.gd74ef.kitware.jobserver.pipe.1.0.gd74efef
pkgrel=1
pkgdesc='Small build system with a focus on speed - Kitware version with JobServer and Fortran compatibility (latest git)'
arch=(x86_64)
url='https://github.com/Kitware/ninja'
provides=(ninja)
conflicts=(ninja ninja-kitware)
license=(Apache)
depends=(gcc-libs)
makedepends=(git cmake python re2c)
source=("$_pkgname::git+https://github.com/Kitware/ninja.git")
sha256sums=('SKIP')

pkgver() {
  cd "$_pkgname"
  # Creates a standard Arch-compliant VCS package version from git tags
  git describe --long --tags | sed 's/^v//;s/-/./g;s/-g/r/' || \
  printf "1.11.1.r%s.%s" "$(git rev-list --count HEAD)" "$(git rev-parse --short HEAD)"
}

build() {
  # Use CMake for a robust, out-of-tree build.
  cmake -S "$_pkgname" -B build \
    -DCMAKE_BUILD_TYPE=Release \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -Wno-dev

  cmake --build build
}

check() {
  # The test binary is created in the 'build' directory by CMake.
  cd build
  ./ninja_test --gtest_filter=-SubprocessTest.SetWithLots
}

package() {
  # Install the main binary from the build directory.
  install -Dm755 "build/ninja" "$pkgdir/usr/bin/ninja"

  # Install auxiliary files from the source directory.
  cd "$_pkgname"
  install -Dm644 COPYING "$pkgdir/usr/share/licenses/$pkgname/COPYING"
  install -Dm644 doc/manual.asciidoc "$pkgdir/usr/share/doc/ninja/manual.asciidoc"

  # Install editor integrations (Vim only).
  install -Dm644 misc/ninja.vim "$pkgdir/usr/share/vim/vimfiles/syntax/ninja.vim"

  # Install shell completions.
  install -Dm644 misc/bash-completion "$pkgdir/usr/share/bash-completion/completions/ninja"
  install -Dm644 misc/zsh-completion "$pkgdir/usr/share/zsh/site-functions/_ninja"
}
