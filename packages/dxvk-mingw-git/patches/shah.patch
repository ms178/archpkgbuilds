--- sha1.h.orig	2025-07-06 14:59:52.697157410 +0200
+++ sha1.h	2025-07-06 16:53:07.786554485 +0200
@@ -18,35 +18,19 @@
 
 #ifdef __cplusplus
 extern "C" {
-#endif
-
-typedef struct _SHA1_CTX {
-    uint32_t state[5];
-    uint64_t count;
-    uint8_t buffer[SHA1_BLOCK_LENGTH];
-} SHA1_CTX;
-
-void SHA1Init(SHA1_CTX *);
-void SHA1Pad(SHA1_CTX *);
-void SHA1Transform(uint32_t [5], const uint8_t*);
-void SHA1Update(SHA1_CTX *, const uint8_t *, size_t);
-void SHA1Final(uint8_t [SHA1_DIGEST_LENGTH], SHA1_CTX *);
+        #endif
 
-#define HTONDIGEST(x) do {                                              \
-        x[0] = htonl(x[0]);                                             \
-        x[1] = htonl(x[1]);                                             \
-        x[2] = htonl(x[2]);                                             \
-        x[3] = htonl(x[3]);                                             \
-        x[4] = htonl(x[4]); } while (0)
+        typedef struct _SHA1_CTX {
+                uint32_t state[5];
+                uint64_t count;
+                uint8_t buffer[SHA1_BLOCK_LENGTH];
+        } SHA1_CTX;
+
+        void SHA1Init(SHA1_CTX *);
+        void SHA1Update(SHA1_CTX *, const uint8_t *, size_t);
+        void SHA1Final(uint8_t [SHA1_DIGEST_LENGTH], SHA1_CTX *);
 
-#define NTOHDIGEST(x) do {                                              \
-        x[0] = ntohl(x[0]);                                             \
-        x[1] = ntohl(x[1]);                                             \
-        x[2] = ntohl(x[2]);                                             \
-        x[3] = ntohl(x[3]);                                             \
-        x[4] = ntohl(x[4]); } while (0)
-
-#ifdef __cplusplus
+        #ifdef __cplusplus
 }
 #endif
 
