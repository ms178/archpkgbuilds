pkgname=heroic-games-launcher
_pkgver=2.18.1
pkgver=2.18.1
pkgrel=4.11
pkgdesc='A Native GOG and Epic Games Launcher for Linux (built from source)'
arch=(x86_64)
url='https://heroicgameslauncher.com/'
license=(GPL3)
depends=(alsa-lib gtk3 nss)
makedepends=(git pnpm nodejs clang jq)
options=(!debug)
source=("git+https://github.com/Heroic-Games-Launcher/HeroicGamesLauncher.git#tag=v${_pkgver}")
sha256sums=('SKIP')

prepare() {
  cd "HeroicGamesLauncher"

  # Apply pnpm override for node-addon-api to fix compilation
  msg "Applying pnpm override for node-addon-api using jq..."
  jq '.pnpm.overrides."node-addon-api" = "8.0.0"' package.json > package.json.tmp && mv package.json.tmp package.json

  # Install dependencies and regenerate lockfile to apply the override
  msg "Installing dependencies and regenerating lockfile to apply override..."
  pnpm install
  pnpm add -Dw electron-builder@26.0.12
}

build() {
  cd "HeroicGamesLauncher"

  # Step 1: Download the essential helper binaries (Legendary, gogdl, etc.)
  # This places them in the `build/bin` directory.
  msg "Step 1/3: Downloading helper binaries (Legendary, etc.)..."
  pnpm run download-helper-binaries

  # Step 2: Compile the application source with electron-vite
  msg "Step 2/3: Compiling application source..."
  pnpm exec electron-vite build

  # Step 3: Package the compiled source into an unpacked directory
  msg "Step 3/3: Packaging into a native directory..."
  pnpm exec electron-builder --linux dir
}

package() {
  cd "HeroicGamesLauncher"

  # This is the critical fix.
  # The `electron-builder` step does NOT package the helper binaries.
  # We must manually copy the `build/bin` directory (created in the build step)
  # into the final application resources directory.
  msg "Fixing package: Copying helper binaries into the final artifact..."
  install -d dist/linux-unpacked/resources/app.asar.unpacked/build
  cp -r build/bin dist/linux-unpacked/resources/app.asar.unpacked/build/

  # Main application files
  install -d "${pkgdir}/opt/heroic"
  cp -r dist/linux-unpacked/* "${pkgdir}/opt/heroic"

  # Convenience wrapper
  install -d "${pkgdir}/usr/bin"
  ln -s /opt/heroic/heroic "${pkgdir}/usr/bin/heroic-games-launcher"

  # Icon
  install -Dm644 "public/icon.png" "${pkgdir}/usr/share/pixmaps/heroic.png"

  # Desktop entry
  install -d "${pkgdir}/usr/share/applications"
  cat > "${pkgdir}/usr/share/applications/heroic.desktop" << _EOF_
[Desktop Entry]
Name=Heroic Games Launcher
Exec=heroic-games-launcher %U
Terminal=false
Type=Application
Icon=heroic
StartupWMClass=Heroic
Comment=Open-source GOG and Epic Games launcher
MimeType=x-scheme-handler/heroic;
Categories=Game;
_EOF_
}
