# Maintainer : Ionut Biru <ibiru@archlinux.org>

_pkgbasename=pixman
pkgname=lib32-$_pkgbasename
pkgver=0.44.0.r3.g8d7a2f8
pkgrel=1
pkgdesc="Pixman library (32-bit)"
arch=('x86_64')
url="https://xorg.freedesktop.org"
license=('custom')
depends=('lib32-gcc-libs' 'lib32-glibc' $_pkgbasename)
makedepends=('meson' 'gcc-multilib' 'lib32-libpng')
source=(git+https://gitlab.freedesktop.org/pixman/pixman.git)
sha512sums=('a90399b8c6aec218abb2f419fb5d6894acf9f4c7acb4fd3893b0b7c805ba47c82ee7efb363be59bb1a15b6997b2dddb7dba062a165503b035e1124fff1b271c9')

pkgver() {
    cd pixman
      git describe --long --tags | sed 's/^[_a-z]*\([0-9.]*\)[^-]*/\1/;s/\([^-]*-g\)/r\1/;s/-/./g;s/^\.//'
    }

prepare() {
    # although removing _build folder in build() function feels more natural,
    # that interferes with the spirit of makepkg --noextract
    if [  -d _build ]; then
        rm -rf _build
    fi

    local src
    for src in "${source[@]}"; do
        src="${src%%::*}"
        src="${src##*/}"
        [[ $src = *.patch ]] || continue
        echo "Applying patch $src..."
        patch --directory="pixman" --forward --strip=1 < "$src"
    done
}

build() {

	export CFLAGS+=" -m32"
	export CXXFLAGS+=" -m32"
	export LDFLAGS+=" -m32"
 	export ASMFLAGS+=" -m32"
	export PKG_CONFIG_PATH='/usr/lib32/pkgconfig'

  arch-meson pixman _build \
    --libdir=/usr/lib32 \
    --libexecdir=/usr/lib32 \
    -D tests=disabled \
    -D demos=disabled \
    -D loongson-mmi=disabled \
    -D a64-neon=disabled \
    -D tests=disabled \
    -D tls=enabled \
    -D b_ndebug=true \
    -D b_pie=false \
    -D c_std=gnu18 \
    -D cpp_std=gnu++2a \
      --buildtype=release \
      --wrap-mode=nofallback \
    -D vmx=disabled \
    -D rvv=disabled \
    -D arm-simd=disabled \
    -D neon=disabled \
    -D mips-dspr2=disabled \
    -D mmx=disabled \
    -D sse2=enabled \
    -D ssse3=enabled \
    -D gtk=disabled
  ninja $NINJAFLAGS -C _build
}

#check() {
#  meson test -C _build
#}

package() {
  DESTDIR="$pkgdir" meson install -C _build
  rm -rf "${pkgdir}"/usr/include
  mkdir -p "$pkgdir/usr/share/licenses"
  ln -s $_pkgbasename "$pkgdir/usr/share/licenses/$pkgname"
}
